[package]
name = "router"
description = "Modern, fast and open payment router"
version = "0.2.0"
edition.workspace = true
default-run = "router"
rust-version.workspace = true
readme = "README.md"
license.workspace = true

[features]
default = ["kv_store", "stripe", "oltp", "olap", "backwards_compatibility", "accounts_cache", "dummy_connector", "payouts", "business_profile_routing", "connector_choice_mca_id", "profile_specific_fallback_routing", "retry", "frm"]
s3 = ["dep:aws-sdk-s3", "dep:aws-config"]
kms = ["external_services/kms", "dep:aws-config"]
email = ["external_services/email", "dep:aws-config", "olap"]
frm = []
stripe = ["dep:serde_qs"]
release = ["kms", "stripe", "s3", "email", "backwards_compatibility", "business_profile_routing", "accounts_cache", "kv_store", "connector_choice_mca_id", "profile_specific_fallback_routing"]
olap = ["data_models/olap", "storage_impl/olap", "scheduler/olap", "dep:analytics"]
oltp = ["storage_impl/oltp"]
kv_store = ["scheduler/kv_store"]
accounts_cache = []
openapi = ["olap", "oltp", "payouts"]
vergen = ["router_env/vergen"]
backwards_compatibility = ["api_models/backwards_compatibility"]
business_profile_routing = ["api_models/business_profile_routing"]
profile_specific_fallback_routing = []
dummy_connector = ["api_models/dummy_connector", "euclid/dummy_connector", "kgraph_utils/dummy_connector"]
connector_choice_mca_id = ["api_models/connector_choice_mca_id", "euclid/connector_choice_mca_id", "kgraph_utils/connector_choice_mca_id"]
external_access_dc = ["dummy_connector"]
detailed_errors = ["api_models/detailed_errors", "error-stack/serde"]
payouts = []
retry = []

[dependencies]
actix-cors = "0.6.4"
actix-multipart = "0.6.0"
actix-rt = "2.8.0"
actix-web = "4.3.1"
async-bb8-diesel = { git = "https://github.com/jarnura/async-bb8-diesel", rev = "53b4ab901aab7635c8215fd1c2d542c8db443094" }
argon2 = { version = "0.5.0", features = ["std"] }
async-trait = "0.1.68"
aws-config = { version = "0.55.3", optional = true }
aws-sdk-s3 = { version = "0.28.0", optional = true }
base64 = "0.21.2"
bb8 = "0.8"
bigdecimal = "0.3.1"
blake3 = "1.3.3"
bytes = "1.4.0"
clap = { version = "4.3.2", default-features = false, features = ["std", "derive", "help", "usage"] }
config = { version = "0.13.3", features = ["toml"] }
diesel = { version = "2.1.0", features = ["postgres"] }
digest = "0.9"
dyn-clone = "1.0.11"
encoding_rs = "0.8.32"
error-stack = "0.3.1"
futures = "0.3.28"
hex = "0.4.3"
http = "0.2.9"
hyper = "0.14.27"
image = "0.23.14"
infer = "0.13.0"
josekit = "0.8.3"
jsonwebtoken = "8.3.0"
maud = { version = "0.25", features = ["actix-web"] }
mimalloc = { version = "0.1", optional = true }
mime = "0.3.17"
nanoid = "0.4.0"
num_cpus = "1.15.0"
once_cell = "1.18.0"
openssl = "0.10.60"
qrcode = "0.12.0"
rand = "0.8.5"
rand_chacha = "0.3.1"
regex = "1.8.4"
reqwest = { version = "0.11.18", features = ["json", "native-tls", "gzip", "multipart"] }
ring = "0.16.20"
roxmltree = "0.18.0"
rust_decimal = { version = "1.30.0", features = ["serde-with-float", "serde-with-str"] }
rustc-hash = "1.1.0"
serde = { version = "1.0.193", features = ["derive"] }
serde_json = "1.0.108"
serde_path_to_error = "0.1.14"
serde_qs = { version = "0.12.0", optional = true }
serde_urlencoded = "0.7.1"
serde_with = "3.4.0"
sha-1 = { version = "0.9" }
sqlx = { version = "0.6.3", features = ["postgres", "runtime-actix", "runtime-actix-native-tls", "time", "bigdecimal"] }
strum = { version = "0.25", features = ["derive"] }
tera = "1.19.1"
thiserror = "1.0.40"
time = { version = "0.3.21", features = ["serde", "serde-well-known", "std"] }
tokio = { version = "1.28.2", features = ["macros", "rt-multi-thread"] }
unicode-segmentation = "1.10.1"
url = { version = "2.4.0", features = ["serde"] }
utoipa = { version = "3.3.0", features = ["preserve_order", "time"] }
utoipa-swagger-ui = { version = "3.1.3", features = ["actix-web"] }
uuid = { version = "1.3.3", features = ["serde", "v4"] }
validator = "0.16.0"
x509-parser = "0.15.0"
tracing-futures = { version = "0.2.5", features = ["tokio"] }

# First party crates
api_models = { version = "0.1.0", path = "../api_models", features = ["errors"] }
analytics = { version = "0.1.0", path = "../analytics", optional = true }
cards = { version = "0.1.0", path = "../cards" }
common_enums = { version = "0.1.0", path = "../common_enums" }
common_utils = { version = "0.1.0", path = "../common_utils", features = ["signals", "async_ext", "logs"] }
currency_conversion = { version = "0.1.0", path = "../currency_conversion" }
data_models = { version = "0.1.0", path = "../data_models", default-features = false }
diesel_models = { version = "0.1.0", path = "../diesel_models", features = ["kv_store"] }
euclid = { version = "0.1.0", path = "../euclid", features = ["valued_jit"] }
pm_auth = { version = "0.1.0", path = "../pm_auth", package = "pm_auth" }
external_services = { version = "0.1.0", path = "../external_services" }
kgraph_utils = { version = "0.1.0", path = "../kgraph_utils" }
masking = { version = "0.1.0", path = "../masking" }
redis_interface = { version = "0.1.0", path = "../redis_interface" }
router_derive = { version = "0.1.0", path = "../router_derive" }
router_env = { version = "0.1.0", path = "../router_env", features = ["log_extra_implicit_fields", "log_custom_entries_to_extra"] }
scheduler = { version = "0.1.0", path = "../scheduler", default-features = false }
storage_impl = { version = "0.1.0", path = "../storage_impl", default-features = false }
erased-serde = "0.3.31"
quick-xml = { version = "0.31.0", features = ["serialize"] }
rdkafka = "0.36.0"

[build-dependencies]
router_env = { version = "0.1.0", path = "../router_env", default-features = false }

[dev-dependencies]
actix-http = "3.3.1"
awc = { version = "3.1.1", features = ["rustls"] }
derive_deref = "1.1.1"
rand = "0.8.5"
serial_test = "2.0.0"
time = { version = "0.3.21", features = ["macros"] }
tokio = "1.28.2"
wiremock = "0.5.18"

# First party dev-dependencies
test_utils = { version = "0.1.0", path = "../test_utils" }

[[bin]]
name = "router"
path = "src/bin/router.rs"

[[bin]]
name = "scheduler"
path = "src/bin/scheduler.rs"
