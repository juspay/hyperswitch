[package]
name = "router"
description = "Modern, fast and open payment router"
version = "0.2.0"
edition.workspace = true
default-run = "router"
rust-version.workspace = true
readme = "README.md"
license.workspace = true

[features]
default = ["common_default", "v1"]
common_default = ["kv_store", "stripe", "oltp", "olap", "accounts_cache", "dummy_connector", "payouts", "payout_retry", "retry", "frm", "tls", "partial-auth", "km_forward_x_request_id"]
olap = ["hyperswitch_domain_models/olap", "storage_impl/olap", "scheduler/olap", "api_models/olap", "dep:analytics"]
tls = ["actix-web/rustls-0_22"]
email = ["external_services/email", "scheduler/email", "olap"]
# keymanager_create, keymanager_mtls, encryption_service should not be removed or added to default feature. Once this features were enabled it can't be disabled as these are breaking changes.
keymanager_create = []
keymanager_mtls = ["reqwest/rustls-tls", "common_utils/keymanager_mtls"]
encryption_service = ["keymanager_create","hyperswitch_domain_models/encryption_service", "common_utils/encryption_service"]
km_forward_x_request_id = ["common_utils/km_forward_x_request_id"]
frm = ["api_models/frm", "hyperswitch_domain_models/frm", "hyperswitch_connectors/frm", "hyperswitch_interfaces/frm"]
stripe = []
release = ["stripe", "email", "accounts_cache", "kv_store", "vergen", "recon", "external_services/aws_kms", "external_services/aws_s3", "keymanager_mtls", "keymanager_create", "encryption_service", "dynamic_routing"]
oltp = ["storage_impl/oltp"]
kv_store = ["scheduler/kv_store"]
accounts_cache = []
vergen = ["router_env/vergen"]
dummy_connector = ["api_models/dummy_connector", "euclid/dummy_connector", "hyperswitch_interfaces/dummy_connector", "kgraph_utils/dummy_connector"]
external_access_dc = ["dummy_connector"]
detailed_errors = ["api_models/detailed_errors", "error-stack/serde"]
payouts = ["api_models/payouts", "common_enums/payouts", "hyperswitch_connectors/payouts", "hyperswitch_domain_models/payouts", "storage_impl/payouts"]
payout_retry = ["payouts"]
recon = ["email", "api_models/recon"]
retry = []
v2 = ["customer_v2", "payment_methods_v2", "common_default", "api_models/v2", "diesel_models/v2", "hyperswitch_domain_models/v2", "storage_impl/v2", "kgraph_utils/v2", "common_utils/v2"]
v1 = ["common_default", "api_models/v1", "diesel_models/v1", "hyperswitch_domain_models/v1", "storage_impl/v1", "hyperswitch_interfaces/v1", "kgraph_utils/v1"]
customer_v2 = ["api_models/customer_v2", "diesel_models/customer_v2", "hyperswitch_domain_models/customer_v2", "storage_impl/customer_v2"]
payment_methods_v2 = ["api_models/payment_methods_v2", "diesel_models/payment_methods_v2", "hyperswitch_domain_models/payment_methods_v2", "storage_impl/payment_methods_v2", "common_utils/payment_methods_v2"]
dynamic_routing = ["external_services/dynamic_routing", "storage_impl/dynamic_routing"]

# Partial Auth
# The feature reduces the overhead of the router authenticating the merchant for every request, and trusts on `x-merchant-id` header to be present in the request.
# This is named as partial-auth because the router will still try to authenticate if the `x-merchant-id` header is not present.
partial-auth = []

[dependencies]
actix-cors = "0.6.5"
actix-http = "3.6.0"
actix-multipart = "0.6.1"
actix-rt = "2.9.0"
actix-web = "4.5.1"
argon2 = { version = "0.5.3", features = ["std"] }
async-bb8-diesel = { git = "https://github.com/jarnura/async-bb8-diesel", rev = "53b4ab901aab7635c8215fd1c2d542c8db443094" }
async-trait = "0.1.79"
base64 = "0.22.0"
bb8 = "0.8"
blake3 = "1.5.1"
bytes = "1.6.0"
clap = { version = "4.4.18", default-features = false, features = ["std", "derive", "help", "usage"] }
config = { version = "0.14.0", features = ["toml"] }
cookie = "0.18.1"
csv = "1.3.0"
diesel = { version = "2.2.3", features = ["postgres"] }
digest = "0.10.7"
dyn-clone = "1.0.17"
encoding_rs = "0.8.33"
error-stack = "0.4.1"
futures = "0.3.30"
hex = "0.4.3"
http = "0.2.12"
hyper = "0.14.28"
infer = "0.15.0"
iso_currency = "0.4.4"
isocountry = "0.3.2"
josekit = "0.8.6"
jsonwebtoken = "9.2.0"
maud = { version = "0.26.0", features = ["actix-web"] }
mimalloc = { version = "0.1", optional = true }
mime = "0.3.17"
nanoid = "0.4.0"
num_cpus = "1.16.0"
num-traits = "0.2.19"
once_cell = "1.19.0"
openidconnect = "3.5.0"                                                                                                      # TODO: remove reqwest
openssl = "0.10.64"
quick-xml = { version = "0.31.0", features = ["serialize"] }
rand = "0.8.5"
rand_chacha = "0.3.1"
rdkafka = "0.36.2"
regex = "1.10.4"
reqwest = { version = "0.11.27", features = ["json", "rustls-tls", "gzip", "multipart"] }
ring = "0.17.8"
roxmltree = "0.19.0"
rust_decimal = { version = "1.35.0", features = ["serde-with-float", "serde-with-str"] }
rust-i18n = { git = "https://github.com/kashif-m/rust-i18n", rev = "f2d8096aaaff7a87a847c35a5394c269f75e077a" }
rustc-hash = "1.1.0"
rustls = "0.22"
rustls-pemfile = "2"
serde = { version = "1.0.197", features = ["derive"] }
serde_json = "1.0.115"
serde_path_to_error = "0.1.16"
serde_qs = "0.12.0"
serde_repr = "0.1.19"
serde_urlencoded = "0.7.1"
serde_with = "3.7.0"
sha1 = { version = "0.10.6" }
strum = { version = "0.26", features = ["derive"] }
tera = "1.19.1"
thiserror = "1.0.58"
time = { version = "0.3.35", features = ["serde", "serde-well-known", "std", "parsing", "serde-human-readable"] }
tokio = { version = "1.37.0", features = ["macros", "rt-multi-thread"] }
totp-rs = { version = "5.5.1", features = ["gen_secret", "otpauth"] }
tracing-futures = { version = "0.2.5", features = ["tokio"] }
unicode-segmentation = "1.11.0"
unidecode = "0.3.0"
url = { version = "2.5.0", features = ["serde"] }
urlencoding = "2.1.3"
utoipa = { version = "4.2.0", features = ["preserve_order", "preserve_path_order", "time"] }
uuid = { version = "1.8.0", features = ["v4"] }
validator = "0.17.0"
x509-parser = "0.16.0"

# First party crates

analytics = { version = "0.1.0", path = "../analytics", optional = true, default-features = false }
api_models = { version = "0.1.0", path = "../api_models", features = ["errors"] }
cards = { version = "0.1.0", path = "../cards" }
common_enums = { version = "0.1.0", path = "../common_enums" }
common_utils = { version = "0.1.0", path = "../common_utils", features = ["signals", "async_ext", "logs", "metrics", "keymanager", "encryption_service"] }
currency_conversion = { version = "0.1.0", path = "../currency_conversion" }
diesel_models = { version = "0.1.0", path = "../diesel_models", features = ["kv_store"], default-features = false }
euclid = { version = "0.1.0", path = "../euclid", features = ["valued_jit"] }
events = { version = "0.1.0", path = "../events" }
external_services = { version = "0.1.0", path = "../external_services" }
hyperswitch_connectors = { version = "0.1.0", path = "../hyperswitch_connectors", default-features = false }
hyperswitch_constraint_graph = { version = "0.1.0", path = "../hyperswitch_constraint_graph" }
hyperswitch_domain_models = { version = "0.1.0", path = "../hyperswitch_domain_models", default-features = false }
hyperswitch_interfaces = { version = "0.1.0", path = "../hyperswitch_interfaces", default-features = false }
kgraph_utils = { version = "0.1.0", path = "../kgraph_utils" }
masking = { version = "0.1.0", path = "../masking" }
pm_auth = { version = "0.1.0", path = "../pm_auth", package = "pm_auth" }
redis_interface = { version = "0.1.0", path = "../redis_interface" }
router_derive = { version = "0.1.0", path = "../router_derive" }
router_env = { version = "0.1.0", path = "../router_env", features = ["log_extra_implicit_fields", "log_custom_entries_to_extra"] }
scheduler = { version = "0.1.0", path = "../scheduler", default-features = false }
storage_impl = { version = "0.1.0", path = "../storage_impl", default-features = false }

[build-dependencies]
router_env = { version = "0.1.0", path = "../router_env", default-features = false }

[dev-dependencies]
actix-http = "3.6.0"
awc = { version = "3.4.0", features = ["rustls"] }
derive_deref = "1.1.1"
rand = "0.8.5"
serial_test = "3.0.0"
time = { version = "0.3.35", features = ["macros"] }
tokio = "1.37.0"
wiremock = "0.6.0"

# First party dev-dependencies
test_utils = { version = "0.1.0", path = "../test_utils" }

[[bin]]
name = "router"
path = "src/bin/router.rs"

[[bin]]
name = "scheduler"
path = "src/bin/scheduler.rs"

[lints]
workspace = true
