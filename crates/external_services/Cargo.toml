[package]
name = "external_services"
description = "Interactions of the router with external systems"
version = "0.1.0"
edition.workspace = true
rust-version.workspace = true
readme = "README.md"
license.workspace = true

[features]
aws_kms = ["dep:aws-config", "dep:aws-sdk-kms"]
email = ["dep:aws-config"]
aws_s3 = ["dep:aws-config", "dep:aws-sdk-s3"]
hashicorp-vault = ["dep:vaultrs"]
v1 = ["hyperswitch_interfaces/v1", "common_utils/v1"]
dynamic_routing = [
    "dep:prost",
    "dep:api_models",
    "tokio/macros",
    "tokio/rt-multi-thread",
    "dep:router_env",
    "dep:hyper-util",
    "dep:http-body-util",
]

[dependencies]
async-trait = "0.1.88"
aws-config = { version = "1.5.10", optional = true, features = ["behavior-version-latest"] }
aws-sdk-kms = { version = "1.51.0", optional = true }
aws-sdk-sesv2 = "1.57.0"
aws-sdk-sts = "1.51.0"
aws-sdk-s3 = { version = "1.65.0", optional = true }
aws-smithy-runtime = "1.8.3"
base64 = "0.22.1"
dyn-clone = "1.0.19"
error-stack = "0.4.1"
hex = "0.4.3"
hyper = "0.14.32"
hyper-proxy = "0.9.1"
lettre = "0.11.16"
once_cell = "1.21.3"
serde = { version = "1.0.219", features = ["derive"] }
thiserror = "1.0.69"
vaultrs = { version = "0.7.4", optional = true }
prost = { version = "0.13", optional = true }
tokio = "1.45.1"
tonic = "0.13.1"
tonic-reflection = "0.13.1"
tonic-types = "0.13.1"
hyper-util = { version = "0.1.12", optional = true }
http-body-util = { version = "0.1.3", optional = true }
reqwest = { version = "0.11.27", features = ["rustls-tls"] }
http = "0.2.12"
url = { version = "2.5.4", features = ["serde"] }
quick-xml = { version = "0.31.0", features = ["serialize"] }
unified-connector-service-client = { git = "https://github.com/juspay/connector-service", rev = "4918efedd5ea6c33e4a1600b988b2cf4948bed10", package = "rust-grpc-client" }


# First party crates
common_utils = { version = "0.1.0", path = "../common_utils" }
hyperswitch_interfaces = { version = "0.1.0", path = "../hyperswitch_interfaces", default-features = false }
masking = { version = "0.1.0", path = "../masking" }
router_env = { version = "0.1.0", path = "../router_env", features = [
    "log_extra_implicit_fields",
    "log_custom_entries_to_extra",
] }
api_models = { version = "0.1.0", path = "../api_models", optional = true }


[build-dependencies]
tonic-build = "0.13.1"
router_env = { version = "0.1.0", path = "../router_env", default-features = false, optional = true }

[lints]
workspace = true
