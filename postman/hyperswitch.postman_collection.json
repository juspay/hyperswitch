{"collection":{"info":{"_postman_id":"faf79340-e864-41f2-afe8-c87d2b593060","name":"HyperSwitch APIs","description":"## Get started\n\nJuspay Router provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  \nYou can consume the APIs directly using your favorite HTTP/REST library.  \nWe have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data.\n\n### Base URLs\n\nUse the following base URLs when making requests to the APIs:\n\n| Environment | Base URL |\n| --- | --- |\n| Sandbox | [https://sandbox.hyperswitch.io](https://sandbox.hyperswitch.io) |\n| Production | [https://router.juspay.io](https://router.juspay.io) |\n\n# Authentication\n\nWhen you sign up for an account, you are given a secret key (also referred as api-key). You may authenticate all API requests with Juspay server by providing the appropriate key in the request Authorization header.  \nNever share your secret api keys. Keep them guarded and secure.\n\nContact Support:  \nName: Juspay Support  \nEmail: [support@juspay.in](mailto:support@juspay.in)","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","fork":{"label":"Sundari's fork","createdAt":"2023-01-05T08:42:45.000Z","from":"25176183-e36f8e3d-078c-4067-a273-f456b6b724ed"},"updatedAt":"2023-05-26T15:49:01.000Z","uid":"25176183-faf79340-e864-41f2-afe8-c87d2b593060"},"item":[{"name":"MerchantAccounts","item":[{"name":"Merchant Account - Create","event":[{"listen":"test","script":{"id":"7849f922-49ee-4fb3-a6fa-095becb7a833","exec":["// Validate status 2xx ","pm.test(\"[POST]::/accounts - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/accounts - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set merchant_id as variable for jsonData.merchant_id","if (jsonData?.merchant_id) {","   pm.collectionVariables.set(\"merchant_id\", jsonData.merchant_id);","   console.log(\"- use {{merchant_id}} as collection variable for value\",jsonData.merchant_id);","} else {","   console.log('INFO - Unable to assign variable {{merchant_id}}, as jsonData.merchant_id is undefined.');","};","","// pm.collectionVariables - Set api_key as variable for jsonData.api_key","if (jsonData?.api_key) {","   pm.collectionVariables.set(\"api_key\", jsonData.api_key);","   console.log(\"- use {{api_key}} as collection variable for value\",jsonData.api_key);","} else {","   console.log('INFO - Unable to assign variable {{api_key}}, as jsonData.api_key is undefined.');","};","","// pm.collectionVariables - Set publishable_key as variable for jsonData.publishable_key","if (jsonData?.publishable_key) {","   pm.collectionVariables.set(\"publishable_key\", jsonData.publishable_key);","   console.log(\"- use {{publishable_key}} as collection variable for value\",jsonData.publishable_key);","} else {","   console.log('INFO - Unable to assign variable {{publishable_key}}, as jsonData.publishable_key is undefined.');","};",""],"type":"text/javascript"}}],"id":"207bc001-30c9-484a-859c-61b03575b755","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"},{"key":"in","value":"header","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"merchant_id\": \"merchant_{{$timestamp}}\",\n  \"locker_id\" : \"m0010\",\n  \"merchant_name\": \"NewAge Retailer\",\n  \"merchant_details\": {\n    \"primary_contact_person\": \"John Test\",\n    \"primary_email\": \"JohnTest@test.com\",\n    \"primary_phone\": \"sunt laborum\",\n    \"secondary_contact_person\": \"John Test2\",\n    \"secondary_email\": \"JohnTest2@test.com\",\n    \"secondary_phone\": \"cillum do dolor id\",\n    \"website\": \"www.example.com\",\n    \"about_business\": \"Online Retail with a wide selection of organic products for North America\",\n    \"address\": {\n      \"line1\": \"1467\",\n      \"line2\": \"Harrison Street\",\n      \"line3\": \"Harrison Street\",\n      \"city\": \"San Fransico\",\n      \"state\": \"California\",\n      \"zip\": \"94122\",\n      \"country\": \"US\"\n    }\n  },\n  \"return_url\": \"https://google.com/success\",\n  \"webhook_details\": {\n    \"webhook_version\": \"1.0.1\",\n    \"webhook_username\": \"ekart_retail\",\n    \"webhook_password\": \"password_ekart@123\",\n    \"payment_created_enabled\": true,\n    \"payment_succeeded_enabled\": true,\n    \"payment_failed_enabled\": true\n  },\n  \"routing_algorithm\": {\n    \"type\": \"single\",\n    \"data\": \"stripe\"\n  },\n  \"sub_merchants_enabled\": false,\n  \"metadata\": {\n    \"city\": \"NY\",\n    \"unit\": \"245\"\n  }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/accounts","host":["{{baseUrl}}"],"path":["accounts"]},"description":"Create a new account for a merchant. The merchant could be a seller or retailer or client who likes to receive and send payments."},"response":[],"uid":"25176183-207bc001-30c9-484a-859c-61b03575b755"},{"name":"Merchant Account - Retrieve","event":[{"listen":"test","script":{"id":"3327aacd-be41-4416-b066-37cb3e079663","exec":["// Validate status 2xx ","pm.test(\"[GET]::/accounts/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/accounts/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set api_key as variable for jsonData.api_key","if (jsonData?.api_key) {","   pm.collectionVariables.set(\"api_key\", jsonData.api_key);","   console.log(\"- use {{api_key}} as collection variable for value\",jsonData.api_key);","} else {","   console.log('INFO - Unable to assign variable {{api_key}}, as jsonData.api_key is undefined.');","};","","// pm.collectionVariables - Set publishable_key as variable for jsonData.publishable_key","if (jsonData?.publishable_key) {","   pm.collectionVariables.set(\"publishable_key\", jsonData.publishable_key);","   console.log(\"- use {{publishable_key}} as collection variable for value\",jsonData.publishable_key);","} else {","   console.log('INFO - Unable to assign variable {{publishable_key}}, as jsonData.publishable_key is undefined.');","};",""],"type":"text/javascript"}}],"id":"c1c3987b-db9f-44ca-bbda-e4ad1c8119f1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"},{"key":"in","value":"header","type":"string"}]},"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/accounts/:id","host":["{{baseUrl}}"],"path":["accounts",":id"],"variable":[{"id":"5dd9f0da-e8ff-4383-8632-20ecca13a234","key":"id","value":"{{merchant_id}}","description":"(Required) The unique identifier for the merchant account"}]},"description":"Retrieve a merchant account details."},"response":[],"uid":"25176183-c1c3987b-db9f-44ca-bbda-e4ad1c8119f1"},{"name":"Merchant Account - Update","event":[{"listen":"test","script":{"id":"21df133a-2e44-4e9b-87ee-cee89c4b568a","exec":["// Validate status 2xx ","pm.test(\"[POST]::/accounts/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/accounts/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set api_key as variable for jsonData.api_key","if (jsonData?.api_key) {","   pm.collectionVariables.set(\"api_key\", jsonData.api_key);","   console.log(\"- use {{api_key}} as collection variable for value\",jsonData.api_key);","} else {","   console.log('INFO - Unable to assign variable {{api_key}}, as jsonData.api_key is undefined.');","};","","// pm.collectionVariables - Set publishable_key as variable for jsonData.publishable_key","if (jsonData?.publishable_key) {","   pm.collectionVariables.set(\"publishable_key\", jsonData.publishable_key);","   console.log(\"- use {{publishable_key}} as collection variable for value\",jsonData.publishable_key);","} else {","   console.log('INFO - Unable to assign variable {{publishable_key}}, as jsonData.publishable_key is undefined.');","};","","",""],"type":"text/javascript"}}],"id":"81a85bab-49c2-4d48-ad5c-4b91c985757f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"},{"key":"in","value":"header","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"merchant_id\": \"{{merchant_id}}\",\n    \"merchant_name\": \"NewAge Retailer\",\n    \"locker_id\": \"m0010\",\n    \"merchant_details\": {\n        \"primary_contact_person\": \"joseph Test\",\n        \"primary_email\": \"josephTest@test.com\",\n        \"primary_phone\": \"veniam aute officia ullamco esse\",\n        \"secondary_contact_person\": \"joseph Test2\",\n        \"secondary_email\": \"josephTest2@test.com\",\n        \"secondary_phone\": \"proident adipisicing officia nulla\",\n        \"website\": \"www.example.com\",\n        \"about_business\": \"Online Retail with a wide selection of organic products for North America\",\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\"\n        }\n    },\n    \"return_url\": \"https://google.com\",\n    \"webhook_details\": {\n        \"webhook_version\": \"1.0.1\",\n        \"webhook_username\": \"ekart_retail\",\n        \"webhook_password\": \"password_ekart@123\",\n        \"payment_created_enabled\": true,\n        \"payment_succeeded_enabled\": true,\n        \"payment_failed_enabled\": true\n    },\n    \"routing_algorithm\": {\n        \"type\": \"single\",\n        \"data\": \"stripe\"\n    },\n    \"sub_merchants_enabled\": false,\n    \"parent_merchant_id\": \"xkkdf909012sdjki2dkh5sdf\",\n    \"metadata\": {\n        \"city\": \"NY\",\n        \"unit\": \"245\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/accounts/:id","host":["{{baseUrl}}"],"path":["accounts",":id"],"variable":[{"id":"b50af060-9c7a-446d-84f4-e98e82499cea","key":"id","value":"{{merchant_id}}","description":"(Required) The unique identifier for the merchant account"}]},"description":"To update an existng merchant account. Helpful in updating merchant details such as email, contact deteails, or other configuration details like webhook, routing algorithm etc"},"response":[],"uid":"25176183-81a85bab-49c2-4d48-ad5c-4b91c985757f"}],"id":"10105ff6-2c27-4adb-a865-5330a079e670","uid":"25176183-10105ff6-2c27-4adb-a865-5330a079e670"},{"name":"API Key","item":[{"name":"Create API Key","event":[{"listen":"test","script":{"id":"b3a96b8f-4bc9-4549-aa93-db3d6da2630d","exec":["// Validate status 2xx ","pm.test(\"[POST]::/api_keys/:merchant_id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/api_keys/:merchant_id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {","  jsonData = pm.response.json();","} catch(e) {","}","","// pm.collectionVariables - Set api_key_id as variable for jsonData.key_id","if (jsonData?.key_id) {","   pm.collectionVariables.set(\"api_key_id\", jsonData.key_id);","   console.log(\"- use {{api_key_id}} as collection variable for value\", jsonData.key_id);","} else {","   console.log('INFO - Unable to assign variable {{api_key_id}}, as jsonData.key_id is undefined.');","};","","// pm.collectionVariables - Set api_key as variable for jsonData.api_key","if (jsonData?.api_key) {","   pm.collectionVariables.set(\"api_key\", jsonData.api_key);","   console.log(\"- use {{api_key}} as collection variable for value\", jsonData.api_key);","} else {","   console.log('INFO - Unable to assign variable {{api_key}}, as jsonData.api_key is undefined.');","};"],"type":"text/javascript"}}],"id":"162bd47b-37a1-41fc-a33e-8031c0f2ac3b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"API Key 1\",\n  \"description\": null,\n  \"expiration\": \"2023-09-23T01:02:03.000Z\"\n}"},"url":{"raw":"{{baseUrl}}/api_keys/:merchant_id","host":["{{baseUrl}}"],"path":["api_keys",":merchant_id"],"variable":[{"id":"38ea491a-44d9-4cbd-81a1-0abdb38fc1f4","key":"merchant_id","value":"{{merchant_id}}"}]}},"response":[],"uid":"25176183-162bd47b-37a1-41fc-a33e-8031c0f2ac3b"},{"name":"Update API Key","event":[{"listen":"test","script":{"id":"0cb1ad58-46ea-48cc-b931-85ff94467b3f","exec":["// Validate status 2xx ","pm.test(\"[POST]::/api_keys/:merchant_id/:api_key_id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/api_keys/:merchant_id/:api_key_id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","","// Set response object as internal variable","let jsonData = {};","try {","  jsonData = pm.response.json();","} catch(e) {","}","","// pm.collectionVariables - Set api_key_id as variable for jsonData.key_id","if (jsonData?.key_id) {","   pm.collectionVariables.set(\"api_key_id\", jsonData.key_id);","   console.log(\"- use {{api_key_id}} as collection variable for value\", jsonData.key_id);","} else {","   console.log('INFO - Unable to assign variable {{api_key_id}}, as jsonData.key_id is undefined.');","};","","// pm.collectionVariables - Set api_key as variable for jsonData.api_key","if (jsonData?.api_key) {","   pm.collectionVariables.set(\"api_key\", jsonData.api_key);","   console.log(\"- use {{api_key}} as collection variable for value\", jsonData.api_key);","} else {","   console.log('INFO - Unable to assign variable {{api_key}}, as jsonData.api_key is undefined.');","};"],"type":"text/javascript"}}],"id":"a677d8f7-2dff-4742-8c17-b236712a776b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": null,\n  \"description\": \"My very awesome API key\",\n  \"expiration\": null\n}"},"url":{"raw":"{{baseUrl}}/api_keys/:merchant_id/:api_key_id","host":["{{baseUrl}}"],"path":["api_keys",":merchant_id",":api_key_id"],"variable":[{"id":"ff9400aa-4c3e-4cd2-89ee-1978fade9d19","key":"merchant_id","value":"{{merchant_id}}"},{"id":"e51fdbc6-40f8-4b4a-adbd-d973ee072098","key":"api_key_id","value":"{{api_key_id}}"}]}},"response":[],"uid":"25176183-a677d8f7-2dff-4742-8c17-b236712a776b"},{"name":"Retrieve API Key","event":[{"listen":"test","script":{"id":"dce35f27-8e5f-4b76-8c91-857b6068340b","exec":["// Validate status 2xx ","pm.test(\"[GET]::/api_keys/:merchant_id/:api_key_id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/api_keys/:merchant_id/:api_key_id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","","// Set response object as internal variable","let jsonData = {};","try {","  jsonData = pm.response.json();","} catch(e) {","}","","// pm.collectionVariables - Set api_key_id as variable for jsonData.key_id","if (jsonData?.key_id) {","   pm.collectionVariables.set(\"api_key_id\", jsonData.key_id);","   console.log(\"- use {{api_key_id}} as collection variable for value\", jsonData.key_id);","} else {","   console.log('INFO - Unable to assign variable {{api_key_id}}, as jsonData.key_id is undefined.');","};","","// pm.collectionVariables - Set api_key as variable for jsonData.api_key","if (jsonData?.api_key) {","   pm.collectionVariables.set(\"api_key\", jsonData.api_key);","   console.log(\"- use {{api_key}} as collection variable for value\", jsonData.api_key);","} else {","   console.log('INFO - Unable to assign variable {{api_key}}, as jsonData.api_key is undefined.');","};"],"type":"text/javascript"}}],"id":"9993575e-e15d-4384-ac57-afb7ec67deb4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"}]},"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/api_keys/:merchant_id/:api_key_id","host":["{{baseUrl}}"],"path":["api_keys",":merchant_id",":api_key_id"],"variable":[{"id":"3df8223a-864d-4d38-946f-a8fcecb8324c","key":"merchant_id","value":"{{merchant_id}}"},{"id":"63341d65-5db0-43a2-bbca-05e48717e1ac","key":"api_key_id","value":"{{api_key_id}}"}]}},"response":[],"uid":"25176183-9993575e-e15d-4384-ac57-afb7ec67deb4"},{"name":"List API Keys","event":[{"listen":"test","script":{"id":"432f4a28-161d-48f5-b426-63ec5dbd2423","exec":["// Validate status 2xx ","pm.test(\"[GET]::/api_keys/:merchant_id/list - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/api_keys/:merchant_id/list - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","","// Set response object as internal variable","let jsonData = {};","try {","  jsonData = pm.response.json();","} catch(e) {","}","","// pm.collectionVariables - Set api_key_id as variable for jsonData.key_id","if (jsonData?.key_id) {","   pm.collectionVariables.set(\"api_key_id\", jsonData.key_id);","   console.log(\"- use {{api_key_id}} as collection variable for value\", jsonData.key_id);","} else {","   console.log('INFO - Unable to assign variable {{api_key_id}}, as jsonData.key_id is undefined.');","};","","// pm.collectionVariables - Set api_key as variable for jsonData.api_key","if (jsonData?.api_key) {","   pm.collectionVariables.set(\"api_key\", jsonData.api_key);","   console.log(\"- use {{api_key}} as collection variable for value\", jsonData.api_key);","} else {","   console.log('INFO - Unable to assign variable {{api_key}}, as jsonData.api_key is undefined.');","};"],"type":"text/javascript"}}],"id":"b68f0cba-100d-4c27-b5bd-205cad9f5dca","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"}]},"method":"GET","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/api_keys/:merchant_id/list","host":["{{baseUrl}}"],"path":["api_keys",":merchant_id","list"],"variable":[{"id":"163f66ea-208c-4790-865a-a061dc47f019","key":"merchant_id","value":"{{merchant_id}}"}]}},"response":[],"uid":"25176183-b68f0cba-100d-4c27-b5bd-205cad9f5dca"},{"name":"Delete API Key","event":[{"listen":"test","script":{"id":"429d38e7-45ec-4868-8d9f-839f9341db38","exec":["// Validate status 2xx ","pm.test(\"[DELETE]::/api_keys/:merchant_id/:api-key - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[DELETE]::/api_keys/:merchant_id/:api-key - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});"],"type":"text/javascript"}}],"id":"f5e9bd61-802b-4b55-bffd-9cf7d75169f3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"}]},"method":"DELETE","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/api_keys/:merchant_id/:api-key","host":["{{baseUrl}}"],"path":["api_keys",":merchant_id",":api-key"],"variable":[{"id":"926558ea-c079-460b-913e-360b6f0bc666","key":"merchant_id","value":"{{merchant_id}}"},{"id":"1d366a36-c8bf-45b9-9e61-d04a7ec4eb5c","key":"api-key","value":"{{api_key_id}}"}]}},"response":[],"uid":"25176183-f5e9bd61-802b-4b55-bffd-9cf7d75169f3"}],"id":"f58dee00-f8ff-4d3d-b659-5faec23f7842","uid":"25176183-f58dee00-f8ff-4d3d-b659-5faec23f7842"},{"name":"PaymentConnectors","item":[{"name":"Payment Connector - Create","event":[{"listen":"test","script":{"id":"82f7c0aa-281c-4d27-8b43-f9ddff638cea","exec":["// Validate status 2xx ","pm.test(\"[POST]::/accounts/:account_id/connectors - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/accounts/:account_id/connectors - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set merchant_connector_id as variable for jsonData.merchant_connector_id","if (jsonData?.merchant_connector_id) {","   pm.collectionVariables.set(\"merchant_connector_id\", jsonData.merchant_connector_id);","   console.log(\"- use {{merchant_connector_id}} as collection variable for value\",jsonData.merchant_connector_id);","} else {","   console.log('INFO - Unable to assign variable {{merchant_connector_id}}, as jsonData.merchant_connector_id is undefined.');","};",""],"type":"text/javascript"}}],"id":"9961d168-be2a-45fa-bd2a-1833d20987bd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"},{"key":"in","value":"header","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"connector_type\": \"fiz_operations\",\n  \"connector_name\": \"stripe\",\n  \"connector_account_details\": {\n           \"auth_type\": \"HeaderKey\",\n           \"api_key\":\"{{connector_api_key}}\"\n  },\n  \"test_mode\": false,\n  \"disabled\": false,\n  \"payment_methods_enabled\": [\n    {\n      \"payment_method\": \"card\",\n      \"payment_method_types\": [\n        {\n          \"payment_method_type\": \"credit\",\n          \"card_networks\": [\n            \"Visa\",\n            \"Mastercard\"\n          ],\n          \"minimum_amount\": 1,\n          \"maximum_amount\": 68607706,\n          \"recurring_enabled\": true,\n          \"installment_payment_enabled\": true\n        },\n        {\n          \"payment_method_type\": \"debit\",\n          \"card_networks\": [\n            \"Visa\",\n            \"Mastercard\"\n          ],\n          \"minimum_amount\": 1,\n          \"maximum_amount\": 68607706,\n          \"recurring_enabled\": true,\n          \"installment_payment_enabled\": true\n        }\n      ]\n    },\n    {\n      \"payment_method\": \"pay_later\",\n      \"payment_method_types\": [\n        {\n          \"payment_method_type\": \"klarna\",\n          \"payment_experience\": \"redirect_to_url\",\n          \"minimum_amount\": 1,\n          \"maximum_amount\": 68607706,\n          \"recurring_enabled\": true,\n          \"installment_payment_enabled\": true\n        },\n        \n        {\n          \"payment_method_type\": \"affirm\",\n          \"payment_experience\": \"redirect_to_url\",\n          \"minimum_amount\": 1,\n          \"maximum_amount\": 68607706,\n          \"recurring_enabled\": true,\n          \"installment_payment_enabled\": true\n        },\n        {\n          \"payment_method_type\": \"afterpay_clearpay\",\n          \"payment_experience\": \"redirect_to_url\",\n          \"minimum_amount\": 1,\n          \"maximum_amount\": 68607706,\n          \"recurring_enabled\": true,\n          \"installment_payment_enabled\": true\n        }\n      ]\n    }\n  ],\n  \"metadata\": {\n    \"city\": \"NY\",\n    \"unit\": \"245\"\n  }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/account/:account_id/connectors","host":["{{baseUrl}}"],"path":["account",":account_id","connectors"],"variable":[{"id":"0c14af59-bbec-4f4f-9fc0-78bb32e8043b","key":"account_id","value":"{{merchant_id}}","description":"(Required) The unique identifier for the merchant account"}]},"description":"Create a new Payment Connector for the merchant account. The connector could be a payment processor / facilitator / acquirer or specialised services like Fraud / Accounting etc."},"response":[],"uid":"25176183-9961d168-be2a-45fa-bd2a-1833d20987bd"},{"name":"Payment Connector - Retrieve","event":[{"listen":"test","script":{"id":"41d1a92d-d58e-4a25-af31-cc0af1773b4b","exec":["// Validate status 2xx ","pm.test(\"[GET]::/accounts/:account_id/connectors/:connector_id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/accounts/:account_id/connectors/:connector_id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set merchant_connector_id as variable for jsonData.merchant_connector_id","if (jsonData?.merchant_connector_id) {","   pm.collectionVariables.set(\"merchant_connector_id\", jsonData.merchant_connector_id);","   console.log(\"- use {{merchant_connector_id}} as collection variable for value\",jsonData.merchant_connector_id);","} else {","   console.log('INFO - Unable to assign variable {{merchant_connector_id}}, as jsonData.merchant_connector_id is undefined.');","};",""],"type":"text/javascript"}}],"id":"1d9e755b-8ae5-4302-a574-2dee23552c1a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"},{"key":"in","value":"header","type":"string"}]},"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/account/:account_id/connectors/:connector_id","host":["{{baseUrl}}"],"path":["account",":account_id","connectors",":connector_id"],"variable":[{"id":"2d248881-9f0e-43be-8660-67fa152bae63","key":"account_id","value":"{{merchant_id}}","description":"(Required) The unique identifier for the merchant account"},{"id":"5a981072-798c-4480-8d6a-c6a313f05295","key":"connector_id","value":"{{merchant_connector_id}}","description":"(Required) The unique identifier for the payment connector"}]},"description":"Retrieve Payment Connector details."},"response":[],"uid":"25176183-1d9e755b-8ae5-4302-a574-2dee23552c1a"},{"name":"Payment Connector - Update","event":[{"listen":"test","script":{"id":"3a4fdbb5-8b95-4b24-8e28-7ad7b0eb44a7","exec":["// Validate status 2xx ","pm.test(\"[POST]::/account/:account_id/connectors/:connector_id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/account/:account_id/connectors/:connector_id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set merchant_connector_id as variable for jsonData.merchant_connector_id","if (jsonData?.merchant_connector_id) {","   pm.collectionVariables.set(\"merchant_connector_id\", jsonData.merchant_connector_id);","   console.log(\"- use {{merchant_connector_id}} as collection variable for value\",jsonData.merchant_connector_id);","} else {","   console.log('INFO - Unable to assign variable {{merchant_connector_id}}, as jsonData.merchant_connector_id is undefined.');","};",""],"type":"text/javascript"}}],"id":"9c57415b-42ee-4ccc-b693-3e90e1ea409b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"},{"key":"in","value":"header","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"connector_type\": \"fiz_operations\",\n    \"connector_account_details\": {\n        \"auth_type\": \"HeaderKey\",\n        \"api_key\": \"{{connector_api_key}}\"\n    },\n    \"test_mode\": false,\n    \"disabled\": false,\n    \"payment_methods_enabled\": [\n    {\n      \"payment_method\": \"card\",\n      \"payment_method_types\": [\n        {\n          \"payment_method_type\": \"credit\",\n          \"card_networks\": [\n            \"Visa\",\n            \"Mastercard\"\n          ],\n          \"minimum_amount\": 1,\n          \"maximum_amount\": 68607706,\n          \"recurring_enabled\": true,\n          \"installment_payment_enabled\": true\n        },\n        {\n          \"payment_method_type\": \"debit\",\n          \"card_networks\": [\n            \"Visa\",\n            \"Mastercard\"\n          ],\n          \"minimum_amount\": 1,\n          \"maximum_amount\": 68607706,\n          \"recurring_enabled\": true,\n          \"installment_payment_enabled\": true\n        }\n      ]\n    },\n    {\n      \"payment_method\": \"pay_later\",\n      \"payment_method_types\": [\n        {\n          \"payment_method_type\": \"klarna\",\n          \"payment_experience\": \"redirect_to_url\",\n          \"minimum_amount\": 1,\n          \"maximum_amount\": 68607706,\n          \"recurring_enabled\": true,\n          \"installment_payment_enabled\": true\n        },\n        \n        {\n          \"payment_method_type\": \"affirm\",\n          \"payment_experience\": \"redirect_to_url\",\n          \"minimum_amount\": 1,\n          \"maximum_amount\": 68607706,\n          \"recurring_enabled\": true,\n          \"installment_payment_enabled\": true\n        },\n        {\n          \"payment_method_type\": \"afterpay_clearpay\",\n          \"payment_experience\": \"redirect_to_url\",\n          \"minimum_amount\": 1,\n          \"maximum_amount\": 68607706,\n          \"recurring_enabled\": true,\n          \"installment_payment_enabled\": true\n        }\n      ]\n    }\n  ],\n    \"metadata\": {\n        \"city\": \"NY\",\n        \"unit\": \"245\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/account/:account_id/connectors/:connector_id","host":["{{baseUrl}}"],"path":["account",":account_id","connectors",":connector_id"],"variable":[{"id":"847d2412-a691-4386-969f-f3f1f0c10506","key":"account_id","value":"{{merchant_id}}"},{"id":"dc6b7456-ef8a-4115-96c6-3428a0adaf07","key":"connector_id","value":"{{merchant_connector_id}}"}]},"description":"To update an existng Payment Connector. Helpful in enabling / disabling different payment methods and other settings for the connector etc"},"response":[],"uid":"25176183-9c57415b-42ee-4ccc-b693-3e90e1ea409b"},{"name":"List Connectors by MID","event":[{"listen":"test","script":{"id":"9103c73e-77db-4d74-ae10-91bc05a21c51","exec":["// Validate status 2xx ","pm.test(\"[GET]::/account/:account_id/connectors - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/account/:account_id/connectors - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});",""],"type":"text/javascript"}}],"id":"f6ae39a8-2b9a-4dbb-ab97-35a53758fd7e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"}]},"method":"GET","header":[{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{baseUrl}}/account/:account_id/connectors","host":["{{baseUrl}}"],"path":["account",":account_id","connectors"],"variable":[{"id":"ab1a01b8-fae9-4818-89f1-a2a030046043","key":"account_id","value":"{{merchant_id}}"}]}},"response":[],"uid":"25176183-f6ae39a8-2b9a-4dbb-ab97-35a53758fd7e"},{"name":"Payment Connector - Delete","event":[{"listen":"test","script":{"id":"674572c8-8b8e-4891-960b-20d56e488440","exec":["// Validate status 2xx ","pm.test(\"[DELETE]::/account/:account_id/connectors/:connector_id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[DELETE]::/account/:account_id/connectors/:connector_id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set merchant_connector_id as variable for jsonData.merchant_connector_id","if (jsonData?.merchant_connector_id) {","   pm.collectionVariables.set(\"merchant_connector_id\", jsonData.merchant_connector_id);","   console.log(\"- use {{merchant_connector_id}} as collection variable for value\",jsonData.merchant_connector_id);","} else {","   console.log('INFO - Unable to assign variable {{merchant_connector_id}}, as jsonData.merchant_connector_id is undefined.');","};",""],"type":"text/javascript"}}],"id":"02d372be-4bca-447d-9bc1-f889f5da19f1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"},{"key":"in","value":"header","type":"string"}]},"method":"DELETE","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/account/:account_id/connectors/:connector_id","host":["{{baseUrl}}"],"path":["account",":account_id","connectors",":connector_id"],"variable":[{"id":"cc25f54a-4ef5-4122-b68e-61e1acc1b5a9","key":"account_id","value":"{{merchant_id}}"},{"id":"4ca9c6fb-0804-4cf6-bb21-2462c1e3c9ed","key":"connector_id","value":"{{merchant_connector_id}}"}]},"description":"Delete or Detach a Payment Connector from Merchant Account"},"response":[],"uid":"25176183-02d372be-4bca-447d-9bc1-f889f5da19f1"},{"name":"Merchant Account - Delete","event":[{"listen":"test","script":{"id":"259d2933-f392-48fa-97cc-5cd095391782","exec":["// Validate status 2xx ","pm.test(\"[DELETE]::/accounts/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[DELETE]::/accounts/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Response Validation","const schema = {\"type\":\"object\",\"description\":\"Merchant Account\",\"required\":[\"merchant_id\",\"deleted\"],\"properties\":{\"merchant_id\":{\"type\":\"string\",\"description\":\"The identifier for the MerchantAccount object.\",\"maxLength\":255,\"example\":\"y3oqhf46pyzuxjbcn2giaqnb44\"},\"deleted\":{\"type\":\"boolean\",\"description\":\"Indicates the deletion status of the Merchant Account object.\",\"example\":true}}}","","// Validate if response matches JSON schema ","pm.test(\"[DELETE]::/accounts/:id - Schema is valid\", function() {","    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});","});",""],"type":"text/javascript"}}],"id":"391766c9-de88-4d74-bc5e-734a5792cd9c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"},{"key":"in","value":"header","type":"string"}]},"method":"DELETE","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/accounts/:id","host":["{{baseUrl}}"],"path":["accounts",":id"],"variable":[{"id":"4cbb56df-79c7-44ed-8978-f7963fc4dac4","key":"id","value":"{{merchant_id}}","description":"(Required) The unique identifier for the merchant account"}]},"description":"Delete a Merchant Account"},"response":[],"uid":"25176183-391766c9-de88-4d74-bc5e-734a5792cd9c"}],"id":"2a43b814-b322-483c-aee5-e7cffab2a653","uid":"25176183-2a43b814-b322-483c-aee5-e7cffab2a653"},{"name":"QuickStart","item":[{"name":"Merchant Account - Create","event":[{"listen":"test","script":{"id":"7849f922-49ee-4fb3-a6fa-095becb7a833","exec":["// Validate status 2xx ","pm.test(\"[POST]::/accounts - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/accounts - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set merchant_id as variable for jsonData.merchant_id","if (jsonData?.merchant_id) {","   pm.collectionVariables.set(\"merchant_id\", jsonData.merchant_id);","   console.log(\"- use {{merchant_id}} as collection variable for value\",jsonData.merchant_id);","} else {","   console.log('INFO - Unable to assign variable {{merchant_id}}, as jsonData.merchant_id is undefined.');","};","","/*","// pm.collectionVariables - Set api_key as variable for jsonData.api_key","if (jsonData?.api_key) {","   pm.collectionVariables.set(\"api_key\", jsonData.api_key);","   console.log(\"- use {{api_key}} as collection variable for value\",jsonData.api_key);","} else {","   console.log('INFO - Unable to assign variable {{api_key}}, as jsonData.api_key is undefined.');","};","*/","","// pm.collectionVariables - Set publishable_key as variable for jsonData.publishable_key","if (jsonData?.publishable_key) {","   pm.collectionVariables.set(\"publishable_key\", jsonData.publishable_key);","   console.log(\"- use {{publishable_key}} as collection variable for value\",jsonData.publishable_key);","} else {","   console.log('INFO - Unable to assign variable {{publishable_key}}, as jsonData.publishable_key is undefined.');","};",""],"type":"text/javascript"}}],"id":"e734cda6-de5f-4048-aab2-fa879d1f3b0e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"},{"key":"in","value":"header","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"merchant_id\": \"merchant_{{$timestamp}}\",\n  \"locker_id\": \"m0010\",\n  \"merchant_name\": \"NewAge Retailer\",\n  \"merchant_details\": {\n    \"primary_contact_person\": \"John Test\",\n    \"primary_email\": \"JohnTest@test.com\",\n    \"primary_phone\": \"sunt laborum\",\n    \"secondary_contact_person\": \"John Test2\",\n    \"secondary_email\": \"JohnTest2@test.com\",\n    \"secondary_phone\": \"cillum do dolor id\",\n    \"website\": \"www.example.com\",\n    \"about_business\": \"Online Retail with a wide selection of organic products for North America\",\n    \"address\": {\n      \"line1\": \"1467\",\n      \"line2\": \"Harrison Street\",\n      \"line3\": \"Harrison Street\",\n      \"city\": \"San Fransico\",\n      \"state\": \"California\",\n      \"zip\": \"94122\",\n      \"country\": \"US\"\n    }\n  },\n  \"return_url\": \"https://google.com/success\",\n  \"webhook_details\": {\n    \"webhook_version\": \"1.0.1\",\n    \"webhook_username\": \"ekart_retail\",\n    \"webhook_password\": \"password_ekart@123\",\n    \"payment_created_enabled\": true,\n    \"payment_succeeded_enabled\": true,\n    \"payment_failed_enabled\": true\n  },\n  \"routing_algorithm\": {\n    \"type\": \"single\",\n    \"data\": \"stripe\"\n  },\n  \"sub_merchants_enabled\": false,\n  \"metadata\": {\n    \"city\": \"NY\",\n    \"unit\": \"245\"\n  }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/accounts","host":["{{baseUrl}}"],"path":["accounts"]},"description":"Create a new account for a merchant. The merchant could be a seller or retailer or client who likes to receive and send payments."},"response":[],"uid":"25176183-e734cda6-de5f-4048-aab2-fa879d1f3b0e"},{"name":"API Key - Create","event":[{"listen":"test","script":{"id":"b3a96b8f-4bc9-4549-aa93-db3d6da2630d","exec":["// Validate status 2xx ","pm.test(\"[POST]::/api_keys/:merchant_id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/api_keys/:merchant_id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {","  jsonData = pm.response.json();","} catch(e) {","}","","// pm.collectionVariables - Set api_key_id as variable for jsonData.key_id","if (jsonData?.key_id) {","   pm.collectionVariables.set(\"api_key_id\", jsonData.key_id);","   console.log(\"- use {{api_key_id}} as collection variable for value\", jsonData.key_id);","} else {","   console.log('INFO - Unable to assign variable {{api_key_id}}, as jsonData.key_id is undefined.');","};","","// pm.collectionVariables - Set api_key as variable for jsonData.api_key","if (jsonData?.api_key) {","   pm.collectionVariables.set(\"api_key\", jsonData.api_key);","   console.log(\"- use {{api_key}} as collection variable for value\", jsonData.api_key);","} else {","   console.log('INFO - Unable to assign variable {{api_key}}, as jsonData.api_key is undefined.');","};"],"type":"text/javascript"}}],"id":"ac0e7bee-992b-450f-b65b-91bf9c268988","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"API Key 1\",\n  \"description\": null,\n  \"expiration\": \"2023-09-23T01:02:03.000Z\"\n}"},"url":{"raw":"{{baseUrl}}/api_keys/:merchant_id","host":["{{baseUrl}}"],"path":["api_keys",":merchant_id"],"variable":[{"id":"5e3cc2dc-0376-4dc5-afbd-2dc29c463ed5","key":"merchant_id","value":"{{merchant_id}}"}]}},"response":[],"uid":"25176183-ac0e7bee-992b-450f-b65b-91bf9c268988"},{"name":"Payment Connector - Create","event":[{"listen":"test","script":{"id":"82f7c0aa-281c-4d27-8b43-f9ddff638cea","exec":["// Validate status 2xx ","pm.test(\"[POST]::/account/:account_id/connectors - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/account/:account_id/connectors - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set merchant_connector_id as variable for jsonData.merchant_connector_id","if (jsonData?.merchant_connector_id) {","   pm.collectionVariables.set(\"merchant_connector_id\", jsonData.merchant_connector_id);","   console.log(\"- use {{merchant_connector_id}} as collection variable for value\",jsonData.merchant_connector_id);","} else {","   console.log('INFO - Unable to assign variable {{merchant_connector_id}}, as jsonData.merchant_connector_id is undefined.');","};",""],"type":"text/javascript"}}],"id":"2e13e8b3-d1fc-4313-abf9-f79fd05fa728","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"},{"key":"in","value":"header","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"connector_type\": \"fiz_operations\",\n  \"connector_name\": \"stripe\",\n  \"connector_account_details\": {\n    \"auth_type\": \"HeaderKey\",\n    \"api_key\": \"{{connector_api_key}}\"\n  },\n  \"test_mode\": false,\n  \"disabled\": false,\n  \"payment_methods_enabled\": [\n        {\n            \"payment_method\": \"pay_later\",\n            \"payment_method_types\": [\n                {\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true,\n                    \"payment_experience\": \"redirect_to_url\",\n                    \"payment_method_type\": \"affirm\"\n                }\n            ]\n        },\n        {\n            \"payment_method\": \"pay_later\",\n            \"payment_method_types\": [\n                {\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true,\n                    \"payment_experience\": \"redirect_to_url\",\n                    \"payment_method_type\": \"afterpay_clearpay\"\n                }\n            ]\n        },\n        {\n            \"payment_method\": \"pay_later\",\n            \"payment_method_types\": [\n                {\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true,\n                    \"payment_experience\": \"redirect_to_url\",\n                    \"payment_method_type\": \"klarna\"\n                }\n            ]\n        },\n        {\n            \"payment_method\": \"pay_later\",\n            \"payment_method_types\": [\n                {\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true,\n                    \"payment_experience\": \"invoke_sdk_client\",\n                    \"payment_method_type\": \"klarna\"\n                }\n            ]\n        },\n        {\n            \"payment_method\": \"card\",\n            \"payment_method_types\": [\n                {\n                    \"payment_method_type\": \"credit\",\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true\n                }\n            ]\n        },\n        {\n            \"payment_method\": \"card\",\n            \"payment_method_types\": [\n                {\n                    \"payment_method_type\": \"debit\",\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true\n                }\n            ]\n        },\n        {\n            \"payment_method\": \"wallet\",\n            \"payment_method_types\": [\n                {\n                    \"payment_method_type\": \"apple_pay\",\n                    \"payment_experience\": \"invoke_sdk_client\",\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true\n                }\n            ]\n        },\n        {\n            \"payment_method\": \"wallet\",\n            \"payment_method_types\": [\n                {\n                    \"payment_method_type\": \"google_pay\",\n                    \"payment_experience\": \"invoke_sdk_client\",\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true\n                }\n            ]\n        }\n    ],\n    \"metadata\": {\n        \"google_pay\": {\n            \"allowed_payment_methods\": [\n                {\n                    \"type\": \"CARD\",\n                    \"parameters\": {\n                        \"allowed_auth_methods\": [\n                            \"PAN_ONLY\",\n                            \"CRYPTOGRAM_3DS\"\n                        ],\n                        \"allowed_card_networks\": [\n                            \"AMEX\",\n                            \"DISCOVER\",\n                            \"INTERAC\",\n                            \"JCB\",\n                            \"MASTERCARD\",\n                            \"VISA\"\n                        ]\n                    },\n                    \"tokenization_specification\": {\n                        \"type\": \"PAYMENT_GATEWAY\",\n                        \"parameters\": {\n                            \"gateway\": \"example\",\n                            \"gateway_merchant_id\": \"pk_test_51Msk2GAGHc77EJXX78h549SX2uaOnEkUYqBfjcoD05PIpAnDkYxMn8nQ4d19im85NQuX4Z6WDyHaUw2fFTPBWsIY00Wa7oNerO\"\n                        }\n                    }\n                }\n            ],\n            \"merchant_info\": {\n                \"merchant_name\": \"Narayan Bhat\"\n            }\n        },\n        \"apple_pay\": {\n            \"session_token_data\": {\n                \"initiative\": \"web\",\n                \"certificate\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdLakNDQlJLZ0F3SUJBZ0lRVTlOTklVMFpRNDRhRHFwTTFwTFZVREFOQmdrcWhraUc5dzBCQVFzRkFEQjEKTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRApaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwZVRFTE1Ba0dBMVVFQ3d3Q1J6TXhFekFSQmdOVkJBb01Da0Z3CmNHeGxJRWx1WXk0eEN6QUpCZ05WQkFZVEFsVlRNQjRYRFRJek1ETXlNekUwTURReE0xb1hEVEkxTURReU1URTAKTURReE1sb3dnYXd4S0RBbUJnb0praWFKay9Jc1pBRUJEQmh0WlhKamFHRnVkQzVqYjIwdWMzUnlhWEJsTG5OaApibWN4UFRBN0JnTlZCQU1NTkVGd2NHeGxJRkJoZVNCTlpYSmphR0Z1ZENCSlpHVnVkR2wwZVRwdFpYSmphR0Z1CmRDNWpiMjB1YzNSeWFYQmxMbk5oYm1jeEV6QVJCZ05WQkFzTUNsbE5PVlUzTTFveVNrMHhMREFxQmdOVkJBb00KSTBwVlUxQkJXU0JVUlVOSVRrOU1UMGRKUlZNZ1VGSkpWa0ZVUlNCTVNVMUpWRVZFTUlJQklqQU5CZ2txaGtpRwo5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeXhNZms0NHRUUUFrWDRtOTRDNUZ5cG9sWXpUNXZRSWQwZVprCktwM0hQSmRJQ3VSb29aRWplSzVoTi9kTkhScU44Zlk4YWJHV1d4aUtiRXBadUtscW9CTnpkRzBYUEJmQndaTHAKYWlodjVIeko5Ukw0a2JKQUo2MzAvTmhEZWpHOUtJTXRiNkJPRmJwZUZJMlYrNWNFMFhkOUFaUjFkL2g2OWl3QwpYVE5GcUhBZFN3bDNqVFpuTjVIaEMzNmxsdkZETG93eE5rWVJiTkNqcUNaN2xXMlhmbkVLa2drYWxQWnNjQUtmClZYajdBZG9zSm92WC95aFdIVjdGVUJ6azdiZ2lvTitXMXZ2TVZJVVFQZTlkVWh4di9iVjZmWS9ZRGdFUkYrWFoKL2VleldTajAzWXdBU0gremZsSVVod283dHozTlRhTWYwU0s1bTBiTUhPUlFXU3paTndJREFRQUJvNElDZkRDQwpBbmd3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlFKL3NBVmtQbXZaQXFTRXJrbUtHTU1sK3luCnNqQndCZ2dyQmdFRkJRY0JBUVJrTUdJd0xRWUlLd1lCQlFVSE1BS0dJV2gwZEhBNkx5OWpaWEowY3k1aGNIQnMKWlM1amIyMHZkM2RrY21jekxtUmxjakF4QmdnckJnRUZCUWN3QVlZbGFIUjBjRG92TDI5amMzQXVZWEJ3YkdVdQpZMjl0TDI5amMzQXdNeTEzZDJSeVp6TXdPVENDQVMwR0ExVWRJQVNDQVNRd2dnRWdNSUlCSEFZSktvWklodmRqClpBVUJNSUlCRFRDQjBRWUlLd1lCQlFVSEFnSXdnY1FNZ2NGU1pXeHBZVzVqWlNCdmJpQjBhR2x6SUVObGNuUnAKWm1sallYUmxJR0o1SUdGdWVTQndZWEowZVNCdmRHaGxjaUIwYUdGdUlFRndjR3hsSUdseklIQnliMmhwWW1sMApaV1F1SUZKbFptVnlJSFJ2SUhSb1pTQmhjSEJzYVdOaFlteGxJSE4wWVc1a1lYSmtJSFJsY20xeklHRnVaQ0JqCmIyNWthWFJwYjI1eklHOW1JSFZ6WlN3Z1kyVnlkR2xtYVdOaGRHVWdjRzlzYVdONUlHRnVaQ0JqWlhKMGFXWnAKWTJGMGFXOXVJSEJ5WVdOMGFXTmxJSE4wWVhSbGJXVnVkSE11TURjR0NDc0dBUVVGQndJQkZpdG9kSFJ3Y3pvdgpMM2QzZHk1aGNIQnNaUzVqYjIwdlkyVnlkR2xtYVdOaGRHVmhkWFJvYjNKcGRIa3ZNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQ01CMEdBMVVkRGdRV0JCVHhzdkJwaVZTTmR1dmZVdFRqYU9NNkVjWWpHVEFPQmdOVkhROEIKQWY4RUJBTUNCNEF3VHdZSktvWklodmRqWkFZZ0JFSU1RREV3T1VFeU9EazJOakJDUmpFNE1qSXhPRVJCTVRVNApNa1pDTlRFNVJrTXdRMEZETVRBeE9FRkJPVFV6TURJd1JFRTNSVUZDUVVORU1UVkNRVVF5TlVZd0R3WUpLb1pJCmh2ZGpaQVl1QkFJRkFEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFFb2tjdDVqV0wvSktyNFAwMkh2V3dTSXoKUlRzY3IxUWtlUnNGUG4wVHJxcWgxY2dSYmpXZk5UUytzeWFPRHpYY2NFeU5ENTFGU3RUWTNvUzJLUURTOWZhbwpncWdXLzliWCtQUXJzazVjUTE4aTdScjRrZE5MdEVaMElqbTJ1UzdzVmlhZ2ZhRVNxbnJvQ0JpU3MxQTI3ZEdHCitIRnFnRzhYemNZL3JYb1A1VVpiRDMvc1F2amw1Ry9OeE9NbzdlSmI5SHV4WTRRYnV6NURWUFpzMys4YTJrTVQKSEpVV3FpRWV3TFIwZ2l4U3R4VE40eUhXOUZSQ3dlMjFVM1FOdktWVDJiWjZjZmtLQlFqWHFDMlBOM0dHRTZ4ZQptTGZVQzhrU3A5ZFpuUEJsc0FVNnh0eEd4Zm1ZK21ETFBDdW1hNGZQQkpiRmJjWlJPYmVCQWxNVTBlU21jUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\",\n                \"display_name\": \"applepay\",\n                \"certificate_keys\": \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRExFeCtUamkxTkFDUmYKaWIzZ0xrWEttaVZqTlBtOUFoM1I1bVFxbmNjOGwwZ0s1R2loa1NONHJtRTM5MDBkR28zeDlqeHBzWlpiR0lwcwpTbG00cVdxZ0UzTjBiUmM4RjhIQmt1bHFLRy9rZk1uMUV2aVJza0FucmZUODJFTjZNYjBvZ3kxdm9FNFZ1bDRVCmpaWDdsd1RSZDMwQmxIVjMrSHIyTEFKZE0wV29jQjFMQ1hlTk5tYzNrZUVMZnFXVzhVTXVqREUyUmhGczBLT28KSm51VmJaZCtjUXFTQ1JxVTlteHdBcDlWZVBzQjJpd21pOWYvS0ZZZFhzVlFIT1R0dUNLZzM1YlcrOHhVaFJBOQo3MTFTSEcvOXRYcDlqOWdPQVJFWDVkbjk1N05aS1BUZGpBQklmN04rVWhTSENqdTNQYzFOb3gvUklybWJSc3djCjVGQlpMTmszQWdNQkFBRUNnZ0VBREFhWTR4c1RVYkVGZG1ib3lLTFUzVGVkcVM5VTdyMTJXSnpGSjhUcUxJdGsKNThnNDdnQnpVazA1VXFBaGYreTNwVEdJeUZXTTZ0NGNMR2VHd3FtOXQ3Y1BLa0RmbEY1dnllL1NSTWdhUURTbgpuUXkvalprNXRWL1cxelpUWUtRYmFJL0VIQTBwTXA0enZoSFlaT3EvalV2L0toM0ppdzQ2OGVNUFRNZWhnMlR0CkhTM3k2WlE5aEkrS2MxQS9CMjJhV0gySDNGSytLbjc5Znh0VUErOHJMalhYU3dESlFTU3dFMXdmY1lEUDJjZ0IKelhTYmNCdHpnUXgrajhkaEhJNGIrQTdBMFZTU20rOUxoRHMvWGtPamFjYmx4dllaTGFad1FjL0U3S0ZFeHNJMAp0MGI4K09peThMK080aFEyOWZhM05NYklpTUdWaEVvTXh2WkdrV0ZZV1FLQmdRRCtKRE9QbEJBSzZSejFRL001ClJxMFZtZEJVdzVxdmFldFl2ZHJZY0lDVkttbDZ3QjR4N1dKaS9zWEdMVHN0ZnRYOVpKQXp5L1AzZXA2MGgzS1IKeXpHbk1uOG0yWnk2SGp0TlgvQUw2SGZ6NXZwZ1NLQS9aYXdNRU1zVGhkL0lrdythMFp6amVpdzdkVzlObFNPQQozT05PK21ob280Tk85S293MjFsY25LZjdyUUtCZ1FETWoxRGFuVEF1dlZYcS8xNXFCcjRYYVZhM3QyMnMvcW50ClR1WlBubG0xSUpQVW9RakYxTVFzeTRidjMzZlRpb3VoZ0hTT3R4SVlTVy95YkZKbmRLSklvUTNjWEVQMjc2WVUKS2dCbVd0M1R5cGI4QVZ5T2xQYmx2cjM3emx6cWNUVGtpU1p3UVZIMk1QVkZXbEF6ZklLblFWcXYwaUFHZGxzWgorQTZrM2p0RTh3S0JnRVErOW5Xay9oWGYrYjNIVElaaCsxTGtwalJNL3JvQ1NJZmhHK2FwZDI0WElKSXRDeTYvCkgzK1VDUW9wMVUxblZSR2hzck9tSGxLajVBQjRxd1NKdTBDNTU3bElFTFZPTHdDZE5ib002RUZnRW5aT3FuRzcKM05LMG84UVBYRVBoY2Z4U003NUdiYUJkN2RDNHJ2c0kxaVc4U3RObXJYbERiSHlJT3R3SzJYVlZBb0dBWm5XYQpjQVd2cnBtVFFXT3JyTHUzMXc0aUsxOHJCaTJBZTZhN1lVSFZlUTNhUGZSeTZuUkoxbzRUQm04T0c5MFhWMHQ2CkZrbklQSFg4SnBidkozYWFHbnJnOEhFZWNiOVRsbUg3VlVsS050MFFoeVUvY1FOWUwzYzh2YlY5Z01nM1VBa0sKUWN2Vis5UkY1Zmo0bHZGVWwrWDZRSHFsSTllQWhoOWpabDBSbnRVQ2dZRUF3YTdTYWtYdVJ4ejhsWEI0QVYzOQpWN2hhWTRibE1zaDU2TDUzQkVuaDhVZHh5SDJZOHk1Z0o5cm5MbGxHMkxSc0lqVW8zVlFmZGtGeTd6L2FaSitRCnl0cWVlQVUyQlVnUW9ab1hkVlJJNTZoRkVocjRVZ0hhOFR5V0JFZVpVenRmZEFFMUNtaDd5ekxIdTQyZFNHNXcKTVE5QTVhSjUwa1d6SFEzamhsVjB0V1E9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n                \"initiative_context\": \"hyperswitch-sdk-test.netlify.app\",\n                \"merchant_identifier\": \"merchant.com.stripe.sang\"\n            },\n            \"payment_request_data\": {\n                \"label\": \"applepay pvt.ltd\",\n                \"supported_networks\": [\n                    \"visa\",\n                    \"masterCard\",\n                    \"amex\",\n                    \"discover\"\n                ],\n                \"merchant_capabilities\": [\n                    \"supports3DS\"\n                ]\n            }\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/account/:account_id/connectors","host":["{{baseUrl}}"],"path":["account",":account_id","connectors"],"variable":[{"id":"0c14af59-bbec-4f4f-9fc0-78bb32e8043b","key":"account_id","value":"{{merchant_id}}","description":"(Required) The unique identifier for the merchant account"}]},"description":"Create a new Payment Connector for the merchant account. The connector could be a payment processor / facilitator / acquirer or specialised services like Fraud / Accounting etc."},"response":[],"uid":"25176183-2e13e8b3-d1fc-4313-abf9-f79fd05fa728"},{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};"],"type":"text/javascript"}}],"id":"25a900d4-d4b5-4333-97dc-60f76b15551f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"amount\": 6540,\n  \"currency\": \"USD\",\n  \"confirm\": true,\n  \"capture_method\": \"automatic\",\n  \"capture_on\": \"2022-09-10T10:11:12Z\",\n  \"amount_to_capture\": 6540,\n  \"customer_id\": \"StripeCustomer\",\n  \"email\": \"guest@example.com\",\n  \"name\": \"John Doe\",\n  \"phone\": \"999999999\",\n  \"phone_country_code\": \"+1\",\n  \"description\": \"Its my first payment request\",\n  \"authentication_type\": \"no_three_ds\",\n  \"return_url\": \"https://google.com\",\n  \"payment_method\": \"card\",\n  \"payment_method_type\": \"credit\",\n  \"payment_method_data\": {\n    \"card\": {\n      \"card_number\": \"4242424242424242\",\n      \"card_exp_month\": \"10\",\n      \"card_exp_year\": \"25\",\n      \"card_holder_name\": \"joseph Doe\",\n      \"card_cvc\": \"123\"\n    }\n  },\n  \"billing\": {\n    \"address\": {\n      \"line1\": \"1467\",\n      \"line2\": \"Harrison Street\",\n      \"line3\": \"Harrison Street\",\n      \"city\": \"San Fransico\",\n      \"state\": \"California\",\n      \"zip\": \"94122\",\n      \"country\": \"US\",\n      \"first_name\": \"joseph\",\n      \"last_name\": \"Doe\"\n    },\n    \"phone\": {\n      \"number\": \"8056594427\",\n      \"country_code\": \"+91\"\n    }\n  },\n  \"shipping\": {\n    \"address\": {\n      \"line1\": \"1467\",\n      \"line2\": \"Harrison Street\",\n      \"line3\": \"Harrison Street\",\n      \"city\": \"San Fransico\",\n      \"state\": \"California\",\n      \"zip\": \"94122\",\n      \"country\": \"US\",\n      \"first_name\": \"joseph\",\n      \"last_name\": \"Doe\"\n    },\n    \"phone\": {\n      \"number\": \"8056594427\",\n      \"country_code\": \"+91\"\n    }\n  },\n  \"statement_descriptor_name\": \"joseph\",\n  \"statement_descriptor_suffix\": \"JS\",\n  \"metadata\": {\n    \"udf1\": \"value1\",\n    \"new_customer\": \"true\",\n    \"login_date\": \"2019-09-10T10:11:12Z\"\n  }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-25a900d4-d4b5-4333-97dc-60f76b15551f"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};"],"type":"text/javascript"}}],"id":"bf33658c-e819-428d-b469-4b233bd9dc3b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id","host":["{{baseUrl}}"],"path":["payments",":id"],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-bf33658c-e819-428d-b469-4b233bd9dc3b"},{"name":"Refunds - Create","event":[{"listen":"test","script":{"id":"e6abd926-8c58-4e42-8186-59e4781222c4","exec":["// Validate status 2xx ","pm.test(\"[POST]::/refunds - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/refunds - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};",""],"type":"text/javascript"}}],"id":"aba5603a-d92b-4b69-b323-b7051c75a944","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"payment_id\": \"{{payment_id}}\",\n  \"amount\": 600,\n  \"reason\": \"Customer returned product\",\n  \"refund_type\": \"instant\",\n  \"metadata\": {\n    \"udf1\": \"value1\",\n    \"new_customer\": \"true\",\n    \"login_date\": \"2019-09-10T10:11:12Z\"\n  }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/refunds","host":["{{baseUrl}}"],"path":["refunds"]},"description":"To create a refund againt an already processed payment"},"response":[],"uid":"25176183-aba5603a-d92b-4b69-b323-b7051c75a944"},{"name":"Refunds - Retrieve","event":[{"listen":"test","script":{"id":"555758ee-7b7c-4f33-976e-d984b67f7005","exec":["// Validate status 2xx ","pm.test(\"[GET]::/refunds/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/refunds/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};",""],"type":"text/javascript"}}],"id":"c788ca91-5677-4acf-b460-dca358e096b6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/refunds/:id","host":["{{baseUrl}}"],"path":["refunds",":id"],"variable":[{"id":"ce571b93-f124-4af4-b50d-00514b23869a","key":"id","value":"{{refund_id}}","description":"(Required) unique refund id"}]},"description":"To retrieve the properties of a Refund. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-c788ca91-5677-4acf-b460-dca358e096b6"}],"id":"91bb4ff3-a8c9-4ac2-a9f2-622222fe73b6","uid":"25176183-91bb4ff3-a8c9-4ac2-a9f2-622222fe73b6"},{"name":"Customers","item":[{"name":"Create Customer","event":[{"listen":"test","script":{"id":"c8c48aed-7d28-47a0-a225-0e6a4b51321c","exec":["// Validate status 2xx ","pm.test(\"[POST]::/customers - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/customers - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/customers - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// Response body should have \"customer_id\"","pm.test(\"[POST]::/customers - Content check if 'customer_id' exists\", function() {","   pm.expect((typeof jsonData.customer_id !== \"undefined\")).to.be.true;","});","","// Response body should have a minimum length of \"1\" for \"customer_id\"","if (jsonData?.customer_id) {","pm.test(\"[POST]::/customers - Content check if value of 'customer_id' has a minimum length of '1'\", function() {","  pm.expect(jsonData.customer_id.length).is.at.least(1);","})};","","","// pm.collectionVariables - Set customer_id as variable for jsonData.customer_id","if (jsonData?.customer_id) {","   pm.collectionVariables.set(\"customer_id\", jsonData.customer_id);","   console.log(\"- use {{customer_id}} as collection variable for value\",jsonData.customer_id);","} else {","   console.log('INFO - Unable to assign variable {{customer_id}}, as jsonData.customer_id is undefined.');","};",""],"type":"text/javascript"}}],"id":"5db2eccb-b3ec-4c40-992f-c4568ed1ac19","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"First customer\",\n    \n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/customers","host":["{{baseUrl}}"],"path":["customers"]},"description":"Create a customer object and store the customer details to be reused for future payments. Incase the customer already exists in the system, this API will respond with the customer details."},"response":[],"uid":"25176183-5db2eccb-b3ec-4c40-992f-c4568ed1ac19"},{"name":"Retrieve Customer","event":[{"listen":"test","script":{"id":"8cc4e64a-fdff-4a5a-a309-16eb19db1604","exec":["// Validate status 2xx ","pm.test(\"[GET]::/customers/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/customers/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/customers/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","",""],"type":"text/javascript"}}],"id":"0ae6131b-c42f-4c6c-9783-0264936851d2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/customers/:id","host":["{{baseUrl}}"],"path":["customers",":id"],"variable":[{"id":"e46d6960-368d-496d-bb88-e2bffaea4e20","key":"id","value":"{{customer_id}}","description":"(Required) unique customer id"}]},"description":"Retrieve a customer's details."},"response":[],"uid":"25176183-0ae6131b-c42f-4c6c-9783-0264936851d2"},{"name":"Update Customer","event":[{"listen":"test","script":{"id":"83f483d8-6458-4f1b-bc58-7f98c40b1098","exec":["// Validate status 2xx ","pm.test(\"[POST]::/customers/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/customers/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/customers/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","",""],"type":"text/javascript"}}],"id":"c6bc41cd-a3ff-491b-b0ef-1ea84536a6b6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"email\": \"JohnTest@test.com\",\n    \"name\": \"John Test\",\n    \"phone_country_code\": \"+65\",\n    \"phone\": \"888888888\",\n    \"description\": \"First customer\",\n    \"metadata\": {\n        \"city\": \"NY\",\n        \"unit\": \"245\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/customers/:id","host":["{{baseUrl}}"],"path":["customers",":id"],"variable":[{"id":"71e7ce6a-99b3-43e0-a31a-71aabc958523","key":"id","value":"{{customer_id}}","description":"(Required) unique customer id"}]},"description":"Updates the customer's details in a customer object."},"response":[],"uid":"25176183-c6bc41cd-a3ff-491b-b0ef-1ea84536a6b6"},{"name":"Ephemeral Key","event":[{"listen":"test","script":{"id":"92288ce4-d871-4c49-95e4-b9a025477de0","exec":["// Validate status 2xx ","pm.test(\"[POST]::/ephemeral_keys - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/ephemeral_keys - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});"],"type":"text/javascript"}}],"id":"b26b91b0-4573-4fa4-a2cc-4219832b5e92","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"customer_id\": \"{{customer_id}}\"\n}"},"url":{"raw":"{{baseUrl}}/ephemeral_keys","host":["{{baseUrl}}"],"path":["ephemeral_keys"]}},"response":[],"uid":"25176183-b26b91b0-4573-4fa4-a2cc-4219832b5e92"},{"name":"Delete Customer","event":[{"listen":"test","script":{"id":"696cf897-aacf-4e96-9162-bbbea8c43ef9","exec":["// Validate status 2xx ","pm.test(\"[DELETE]::/customers/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[DELETE]::/customers/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[DELETE]::/customers/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});",""],"type":"text/javascript"}}],"id":"055756cc-7ee0-4813-838c-c36e67562aa3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/customers/:id","host":["{{baseUrl}}"],"path":["customers",":id"],"variable":[{"id":"16fe1aaa-a6f2-45b5-a77b-2cff21e98c9f","key":"id","value":"{{customer_id}}","description":"(Required) unique customer id"}]},"description":"Delete a customer record."},"response":[],"uid":"25176183-055756cc-7ee0-4813-838c-c36e67562aa3"}],"id":"1239ed89-90bc-4e0f-af10-b4667baabae6","description":"Create a Customer entity which you can use to store and retrieve specific customers' data and payment methods.","uid":"25176183-1239ed89-90bc-4e0f-af10-b4667baabae6"},{"name":"Payments","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};"],"type":"text/javascript"}}],"id":"b491a919-d00e-4f4b-867f-7188100ca149","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": false,\n    \"capture_method\": \"manual\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_type\": \"credit\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n    \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"joseph\",\n            \"last_name\": \"Doe\"\n        },\n        \"phone\": {\n            \"number\": \"8056594427\",\n            \"country_code\": \"+91\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"joseph\",\n            \"last_name\": \"Doe\"\n        },\n        \"phone\": {\n            \"number\": \"8056594427\",\n            \"country_code\": \"+91\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-b491a919-d00e-4f4b-867f-7188100ca149"},{"name":"Session Token","event":[{"listen":"test","script":{"id":"8a1ce443-2326-48cb-b686-f9a7d32430a3","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments/session_tokens - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/session_tokens - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});"],"type":"text/javascript"}}],"id":"3962492f-466d-4875-a2e8-e55c4900920b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{publishable_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"payment_id\": \"{{payment_id}}\",\n    \"wallets\":[],\n    \"client_secret\": \"{{client_secret}}\"\n}"},"url":{"raw":"{{baseUrl}}/payments/session_tokens","host":["{{baseUrl}}"],"path":["payments","session_tokens"]}},"response":[],"uid":"25176183-3962492f-466d-4875-a2e8-e55c4900920b"},{"name":"Payments - Update","event":[{"listen":"test","script":{"id":"4925630e-fdf7-4820-a596-2f77961d55a3","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};"],"type":"text/javascript"}}],"id":"cfdafd69-9fe5-4700-8d9f-5d7cb5926797","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"amount\": 20000,\n  \"currency\": \"SGD\",\n  \"confirm\" :false,\n  \"capture_method\": \"automatic\",\n  \"capture_on\": \"2022-09-10T10:11:12Z\",\n  \"amount_to_capture\": 6540,\n  \"email\": \"joseph@example.com\",\n  \"name\": \"joseph Doe\",\n  \"phone\": \"8888888888\",\n  \"phone_country_code\": \"+65\",\n  \"description\": \"Its my first payment request\",\n  \"authentication_type\": \"no_three_ds\",\n  \"payment_method\": \"card\",\n  \"return_url\": \"https://google.com\",\n  \"payment_method_data\": {\n    \"card\": {\n      \"card_number\": \"4242424242424242\",\n      \"card_exp_month\": \"10\",\n      \"card_exp_year\": \"25\",\n      \"card_holder_name\": \"joseph Doe\",\n      \"card_cvc\": \"123\"\n    }\n  },\n   \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\"\n        }\n    },\n  \"statement_descriptor_name\": \"joseph\",\n  \"statement_descriptor_suffix\": \"JS\",\n  \"metadata\": {\n    \"udf1\": \"value1\",\n    \"new_customer\": \"true\",\n    \"login_date\": \"2019-09-10T10:11:12Z\"\n  }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id","host":["{{baseUrl}}"],"path":["payments",":id"],"variable":[{"id":"3733e723-79da-46b4-8f95-043176f6c690","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To update the properties of a PaymentIntent object. This may include attaching a payment method, or attaching customer object or metadata fields after the Payment is created "},"response":[],"uid":"25176183-cfdafd69-9fe5-4700-8d9f-5d7cb5926797"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};"],"type":"text/javascript"}}],"id":"32899660-98ec-4464-a74c-b133208a163d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id","host":["{{baseUrl}}"],"path":["payments",":id"],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-32899660-98ec-4464-a74c-b133208a163d"},{"name":"Payments - Confirm","event":[{"listen":"test","script":{"id":"1c7a5f0b-2b3d-420e-90f1-2e8b549c6d39","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments/:id/confirm - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id/confirm - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id/confirm - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};"],"type":"text/javascript"}}],"id":"0af40504-1f86-4f4e-9f86-2184d2f344d4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":" {}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id/confirm","host":["{{baseUrl}}"],"path":["payments",":id","confirm"],"variable":[{"id":"43f587c4-a6b9-4d7a-989f-7813220ef24d","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"This API is to confirm the payment request and foward payment to the payment processor. This API provides more granular control upon when the API is forwarded to the payment processor. Alternatively you can confirm the payment within the Payments-Create API"},"response":[],"uid":"25176183-0af40504-1f86-4f4e-9f86-2184d2f344d4"},{"name":"Payments - Capture","event":[{"listen":"test","script":{"id":"c412734a-32f7-4be6-aa3f-deface0aeb32","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments/:id/capture - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id/capture - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id/capture - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};",""],"type":"text/javascript"}}],"id":"1456d663-1325-4fa6-9f99-007679277db6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"amount_to_capture\": 6540,\n  \"statement_descriptor_name\": \"Joseph\",\n  \"statement_descriptor_suffix\": \"JS\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id/capture","host":["{{baseUrl}}"],"path":["payments",":id","capture"],"variable":[{"id":"a5ba124f-a12a-4773-afb3-cf8a94ee8c4f","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To capture the funds for an uncaptured payment"},"response":[],"uid":"25176183-1456d663-1325-4fa6-9f99-007679277db6"},{"name":"Payments - Create Copy","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};"],"type":"text/javascript"}}],"id":"215bead8-1621-4cbd-88af-d07a2f158650","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"manual\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_type\": \"credit\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n    \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"joseph\",\n            \"last_name\": \"Doe\"\n        },\n        \"phone\": {\n            \"number\": \"8056594427\",\n            \"country_code\": \"+91\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"joseph\",\n            \"last_name\": \"Doe\"\n        },\n        \"phone\": {\n            \"number\": \"8056594427\",\n            \"country_code\": \"+91\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-215bead8-1621-4cbd-88af-d07a2f158650"},{"name":"Payments - Cancel","event":[{"listen":"test","script":{"id":"fff28ef6-694d-4f0c-ae47-bc3f157ce296","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments/:id/cancel - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id/cancel - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id/cancel - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","",""],"type":"text/javascript"}}],"id":"604e7a38-0b9f-412f-bcc4-88f745bcf44a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"cancellation_reason\": \"requested_by_customer\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id/cancel","host":["{{baseUrl}}"],"path":["payments",":id","cancel"],"variable":[{"id":"7f388eed-14aa-4aea-9bae-b638efffa2dd","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"A Payment could can be cancelled when it is in one of these statuses: requires_payment_method, requires_capture, requires_confirmation, requires_customer_action"},"response":[],"uid":"25176183-604e7a38-0b9f-412f-bcc4-88f745bcf44a"},{"name":"Payment-List","event":[{"listen":"test","script":{"id":"d3c28873-99bc-4ad8-866a-fb53ca2e5c00","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/list - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/list - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});"],"type":"text/javascript"}}],"id":"41e19c33-d601-43e7-a137-c7cb55832265","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"api-key","value":"snd_0b8e1deb82f241eca47617afb1398858"}],"url":{"raw":"{{baseUrl}}/payments/list","host":["{{baseUrl}}"],"path":["payments","list"],"query":[{"key":"customer_id","value":"","disabled":true},{"key":"starting_after","value":"","disabled":true},{"key":"ending_before","value":"","disabled":true},{"key":"limit","value":"100","disabled":true},{"key":"created","value":"","disabled":true},{"key":"created.lt","value":"","disabled":true},{"key":"created.gt","value":"","disabled":true},{"key":"created.lte","value":"","disabled":true},{"key":"created_gte","value":"","disabled":true}]}},"response":[],"uid":"25176183-41e19c33-d601-43e7-a137-c7cb55832265"}],"id":"71eeeeb9-9d12-43e4-85fa-66f3fa9bd8b6","description":"Process and manage payments across wide range of payment processors using the Unified Payments API.","uid":"25176183-71eeeeb9-9d12-43e4-85fa-66f3fa9bd8b6"},{"name":"Refunds","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};"],"type":"text/javascript"}}],"id":"c3d3c40b-c3bd-4eb9-833b-4684f6ca81cf","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"setup_future_usage\":\"on_session\",\n    \"payment_method\": \"card\",\n    \"payment_method_type\": \"credit\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n    \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"joseph\",\n            \"last_name\": \"Doe\"\n        },\n        \"phone\": {\n            \"number\": \"8056594427\",\n            \"country_code\": \"+91\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"joseph\",\n            \"last_name\": \"Doe\"\n        },\n        \"phone\": {\n            \"number\": \"8056594427\",\n            \"country_code\": \"+91\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-c3d3c40b-c3bd-4eb9-833b-4684f6ca81cf"},{"name":"Refunds - Create","event":[{"listen":"test","script":{"id":"e6abd926-8c58-4e42-8186-59e4781222c4","exec":["// Validate status 2xx ","pm.test(\"[POST]::/refunds - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/refunds - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};",""],"type":"text/javascript"}}],"id":"f617997b-bc40-4c00-a88f-0fe0dac7d3c3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"payment_id\": \"{{payment_id}}\",\n    \"amount\": 600,\n    \"reason\": \"Customer returned product\",\n    \"refund_type\": \"instant\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/refunds","host":["{{baseUrl}}"],"path":["refunds"]},"description":"To create a refund againt an already processed payment"},"response":[],"uid":"25176183-f617997b-bc40-4c00-a88f-0fe0dac7d3c3"},{"name":"Refunds - Update","event":[{"listen":"test","script":{"id":"d501cb6e-0a2a-4af6-999e-ac6fc1414ce4","exec":["// Validate status 2xx ","pm.test(\"[POST]::/refunds/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/refunds/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};"],"type":"text/javascript"}}],"id":"76647377-c9cc-41d6-8011-3e901bffe33e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"reason\": \"Paid by mistake\",\n    \"metadata\": {\n        \"udf1\": \"value2\",\n        \"new_customer\": \"false\",\n        \"login_date\": \"2019-09-1T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/refunds/:id","host":["{{baseUrl}}"],"path":["refunds",":id"],"variable":[{"id":"c6f65289-2ff8-49de-8df5-e6d71eaed57f","key":"id","value":"{{refund_id}}","description":"(Required) unique refund id"}]},"description":"To update the properties of a Refund object. This may include attaching a reason for the refund or metadata fields"},"response":[],"uid":"25176183-76647377-c9cc-41d6-8011-3e901bffe33e"},{"name":"Refunds - Retrieve","event":[{"listen":"test","script":{"id":"555758ee-7b7c-4f33-976e-d984b67f7005","exec":["// Validate status 2xx ","pm.test(\"[GET]::/refunds/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/refunds/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};",""],"type":"text/javascript"}}],"id":"c304cce0-3a32-494c-b3d2-f4b4a51b9618","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/refunds/:id","host":["{{baseUrl}}"],"path":["refunds",":id"],"variable":[{"id":"ce571b93-f124-4af4-b50d-00514b23869a","key":"id","value":"{{refund_id}}","description":"(Required) unique refund id"}]},"description":"To retrieve the properties of a Refund. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-c304cce0-3a32-494c-b3d2-f4b4a51b9618"}],"id":"df37baa5-bc44-44ec-82f2-c876ec2a6063","uid":"25176183-df37baa5-bc44-44ec-82f2-c876ec2a6063"},{"name":"PaymentMethods","item":[{"name":"PaymentMethods - Create","event":[{"listen":"test","script":{"id":"09b05b10-c6ba-4b5e-b9f9-50baa3fea233","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payment_methods - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payment_methods - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_method_id as variable for jsonData.payment_method_id","if (jsonData?.payment_method_id) {","   pm.collectionVariables.set(\"payment_method_id\", jsonData.payment_method_id);","   console.log(\"- use {{payment_method_id}} as collection variable for value\",jsonData.payment_method_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_method_id}}, as jsonData.payment_method_id is undefined.');","};","","if (jsonData?.customer_id) {","   pm.collectionVariables.set(\"customer_id\", jsonData.customer_id);","   console.log(\"- use {{customer_id}} as collection variable for value\",jsonData.customer_id);","} else {","   console.log('INFO - Unable to assign variable {{customer_id}}, as jsonData.customer_id is undefined.');","};",""],"type":"text/javascript"}}],"id":"fbdc1b80-05d8-4da8-9a39-43b0674b01f2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"payment_method\": \"card\",\n  \"payment_method_type\": \"credit\",\n  \"payment_method_issuer\": \"Visa\",\n  \"card\": {\n    \"card_number\": \"4242424242424242\",\n    \"card_exp_month\": \"10\",\n    \"card_exp_year\": \"25\",\n    \"card_holder_name\": \"John Doe\"\n  },\n  \"customer_id\": \"cus_mnewerunwiuwiwqw\",\n  \"metadata\": {\n    \"city\": \"NY\",\n    \"unit\": \"245\"\n  }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payment_methods","host":["{{baseUrl}}"],"path":["payment_methods"]},"description":"To create a payment method against a customer object. In case of cards, this API could be used only by PCI compliant merchants"},"response":[],"uid":"25176183-fbdc1b80-05d8-4da8-9a39-43b0674b01f2"},{"name":"List payment methods for a Merchant","event":[{"listen":"test","script":{"id":"d1ff017c-47b4-4260-a87f-cd15be01dbf3","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payment_methods/:merchant_id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payment_methods/:merchant_id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","",""],"type":"text/javascript"}}],"id":"0befef80-2afc-41dc-a474-c702bdc080b0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/account/payment_methods","host":["{{baseUrl}}"],"path":["account","payment_methods"],"query":[{"key":"client_secret","value":"{{client_secret}}","type":"text","disabled":true}]},"description":"To filter and list the applicable payment methods for a particular merchant id."},"response":[],"uid":"25176183-0befef80-2afc-41dc-a474-c702bdc080b0"},{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","if (jsonData?.customer_id) {","   pm.collectionVariables.set(\"customer_id\", jsonData.customer_id);","   console.log(\"- use {{customer_id}} as collection variable for value\",jsonData.customer_id);","} else {","   console.log('INFO - Unable to assign variable {{customer_id}}, as jsonData.customer_id is undefined.');","};"],"type":"text/javascript"}}],"id":"8623dba5-ac2c-49b7-a70d-3926cc5ac0bc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"setup_future_usage\":\"on_session\",\n    \"payment_method\": \"card\",\n    \"payment_method_type\": \"credit\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n    \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"joseph\",\n            \"last_name\": \"Doe\"\n        },\n        \"phone\": {\n            \"number\": \"8056594427\",\n            \"country_code\": \"+91\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"joseph\",\n            \"last_name\": \"Doe\"\n        },\n        \"phone\": {\n            \"number\": \"8056594427\",\n            \"country_code\": \"+91\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-8623dba5-ac2c-49b7-a70d-3926cc5ac0bc"},{"name":"List payment methods for a Customer","event":[{"listen":"test","script":{"id":"4ec3075e-066e-4651-8c07-f2d8e0af3bd8","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payment_methods/:customer_id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payment_methods/:customer_id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","if (jsonData?.payment_token) {","   pm.collectionVariables.set(\"payment_token\", jsonData.payment_token);","   console.log(\"- use {{payment_token}} as collection variable for value\",jsonData.payment_token);","} else {","   console.log('INFO - Unable to assign variable {{payment_token}}, as jsonData.payment_token is undefined.');","};"],"type":"text/javascript"}}],"id":"a8a94aaa-2006-4619-9e46-3d3781e78311","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/customers/:customer_id/payment_methods","host":["{{baseUrl}}"],"path":["customers",":customer_id","payment_methods"],"query":[{"key":"accepted_country","value":"co","disabled":true},{"key":"accepted_country","value":"pa","disabled":true},{"key":"accepted_currency","value":"voluptate ea","disabled":true},{"key":"accepted_currency","value":"exercitation","disabled":true},{"key":"minimum_amount","value":"100","disabled":true},{"key":"maximum_amount","value":"10000000","disabled":true},{"key":"recurring_payment_enabled","value":"true","disabled":true},{"key":"installment_payment_enabled","value":"true","disabled":true}],"variable":[{"key":"customer_id","value":"{{customer_id}}","description":"//Pass the customer id"}]},"description":"To filter and list the applicable payment methods for a particular Customer ID"},"response":[],"uid":"25176183-a8a94aaa-2006-4619-9e46-3d3781e78311"},{"name":"PaymentMethods - Update","event":[{"listen":"test","script":{"id":"ed293a99-0f83-4007-ad3c-a838bfa82f6c","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payment_methods/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payment_methods/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});",""],"type":"text/javascript"}}],"id":"804c61d2-ab32-4f2b-9353-7ebae437baea","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"card\": {\n    \"card_number\": \"4242424242424242\",\n    \"card_exp_month\": \"10\",\n    \"card_exp_year\": \"25\",\n    \"card_holder_name\": \"John Doe\"\n  },\n  \"metadata\": {\n    \"city\": \"NY\",\n    \"unit\": \"245\"\n  }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payment_methods/:id","host":["{{baseUrl}}"],"path":["payment_methods",":id"],"variable":[{"key":"id","value":"{{payment_token}}","description":"(Required) The unique identifier for the payment method"}]},"description":"To update an existng a payment method attached to a customer object. This API is useful for use cases such as updating the card number for expired cards, to prevent discontinuity in recurring payments"},"response":[],"uid":"25176183-804c61d2-ab32-4f2b-9353-7ebae437baea"},{"name":"Delete PaymentMethods","event":[{"listen":"test","script":{"id":"f202cb63-7185-4516-84ce-62efcc131836","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payment_methods/:id/detach - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payment_methods/:id/detach - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","",""],"type":"text/javascript"}}],"id":"25bd9bc4-2c4e-4927-bd61-d681f60ccc4b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payment_methods/:id","host":["{{baseUrl}}"],"path":["payment_methods",":id"],"variable":[{"key":"id","value":"{{payment_token}}","description":"(Required) The unique identifier for the payment method"}]},"description":"Detaches a PaymentMethod object from a Customer."},"response":[],"uid":"25176183-25bd9bc4-2c4e-4927-bd61-d681f60ccc4b"}],"id":"0919dc74-3483-4a8e-8286-53417e29182f","uid":"25176183-0919dc74-3483-4a8e-8286-53417e29182f"},{"name":"Hackathon","item":[{"name":"QuickStart","item":[{"name":"Merchant Account - Create","event":[{"listen":"test","script":{"id":"7849f922-49ee-4fb3-a6fa-095becb7a833","exec":["// Validate status 2xx ","pm.test(\"[POST]::/accounts - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/accounts - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set merchant_id as variable for jsonData.merchant_id","if (jsonData?.merchant_id) {","   pm.collectionVariables.set(\"merchant_id\", jsonData.merchant_id);","   console.log(\"- use {{merchant_id}} as collection variable for value\",jsonData.merchant_id);","} else {","   console.log('INFO - Unable to assign variable {{merchant_id}}, as jsonData.merchant_id is undefined.');","};","","// pm.collectionVariables - Set api_key as variable for jsonData.api_key","if (jsonData?.api_key) {","   pm.collectionVariables.set(\"api_key\", jsonData.api_key);","   console.log(\"- use {{api_key}} as collection variable for value\",jsonData.api_key);","} else {","   console.log('INFO - Unable to assign variable {{api_key}}, as jsonData.api_key is undefined.');","};","","// pm.collectionVariables - Set publishable_key as variable for jsonData.publishable_key","if (jsonData?.publishable_key) {","   pm.collectionVariables.set(\"publishable_key\", jsonData.publishable_key);","   console.log(\"- use {{publishable_key}} as collection variable for value\",jsonData.publishable_key);","} else {","   console.log('INFO - Unable to assign variable {{publishable_key}}, as jsonData.publishable_key is undefined.');","};",""],"type":"text/javascript"}}],"id":"de05cf20-68a0-4612-b28d-bbaf41f09783","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"},{"key":"in","value":"header","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"merchant_id\": \"merchant_{{$timestamp}}\",\n  \"locker_id\": \"m0010\",\n  \"merchant_name\": \"NewAge Retailer\",\n  \"merchant_details\": {\n    \"primary_contact_person\": \"John Test\",\n    \"primary_email\": \"JohnTest@test.com\",\n    \"primary_phone\": \"sunt laborum\",\n    \"secondary_contact_person\": \"John Test2\",\n    \"secondary_email\": \"JohnTest2@test.com\",\n    \"secondary_phone\": \"cillum do dolor id\",\n    \"website\": \"www.example.com\",\n    \"about_business\": \"Online Retail with a wide selection of organic products for North America\",\n    \"address\": {\n      \"line1\": \"1467\",\n      \"line2\": \"Harrison Street\",\n      \"line3\": \"Harrison Street\",\n      \"city\": \"San Fransico\",\n      \"state\": \"California\",\n      \"zip\": \"94122\",\n      \"country\": \"US\"\n    }\n  },\n  \"return_url\": \"https://google.com\",\n  \"webhook_details\": {\n    \"webhook_version\": \"1.0.1\",\n    \"webhook_username\": \"ekart_retail\",\n    \"webhook_password\": \"password_ekart@123\",\n    \"payment_created_enabled\": true,\n    \"payment_succeeded_enabled\": true,\n    \"payment_failed_enabled\": true\n  },\n  \"routing_algorithm\": {\n    \"type\": \"single\",\n    \"data\": \"stripe\"\n  },\n  \"sub_merchants_enabled\": false,\n  \"metadata\": {\n    \"city\": \"NY\",\n    \"unit\": \"245\"\n  }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/accounts","host":["{{baseUrl}}"],"path":["accounts"]},"description":"Create a new account for a merchant. The merchant could be a seller or retailer or client who likes to receive and send payments."},"response":[],"uid":"25176183-de05cf20-68a0-4612-b28d-bbaf41f09783"},{"name":"API Key - Create","event":[{"listen":"test","script":{"id":"b3a96b8f-4bc9-4549-aa93-db3d6da2630d","exec":["// Validate status 2xx ","pm.test(\"[POST]::/api_keys/:merchant_id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/api_keys/:merchant_id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {","  jsonData = pm.response.json();","} catch(e) {","}","","// pm.collectionVariables - Set api_key_id as variable for jsonData.key_id","if (jsonData?.key_id) {","   pm.collectionVariables.set(\"api_key_id\", jsonData.key_id);","   console.log(\"- use {{api_key_id}} as collection variable for value\", jsonData.key_id);","} else {","   console.log('INFO - Unable to assign variable {{api_key_id}}, as jsonData.key_id is undefined.');","};","","// pm.collectionVariables - Set api_key as variable for jsonData.api_key","if (jsonData?.api_key) {","   pm.collectionVariables.set(\"api_key\", jsonData.api_key);","   console.log(\"- use {{api_key}} as collection variable for value\", jsonData.api_key);","} else {","   console.log('INFO - Unable to assign variable {{api_key}}, as jsonData.api_key is undefined.');","};"],"type":"text/javascript"}}],"id":"1467d833-71e1-454f-a48a-64363f1d45d1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"API Key 1\",\n  \"description\": null,\n  \"expiration\": \"2023-09-23T01:02:03.000Z\"\n}"},"url":{"raw":"{{baseUrl}}/api_keys/:merchant_id","host":["{{baseUrl}}"],"path":["api_keys",":merchant_id"],"variable":[{"id":"5e3cc2dc-0376-4dc5-afbd-2dc29c463ed5","key":"merchant_id","value":"{{merchant_id}}"}]}},"response":[],"uid":"25176183-1467d833-71e1-454f-a48a-64363f1d45d1"},{"name":"Payment Connector - Create","event":[{"listen":"test","script":{"id":"82f7c0aa-281c-4d27-8b43-f9ddff638cea","exec":["// Validate status 2xx ","pm.test(\"[POST]::/account/:account_id/connectors - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/account/:account_id/connectors - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set merchant_connector_id as variable for jsonData.merchant_connector_id","if (jsonData?.merchant_connector_id) {","   pm.collectionVariables.set(\"merchant_connector_id\", jsonData.merchant_connector_id);","   console.log(\"- use {{merchant_connector_id}} as collection variable for value\",jsonData.merchant_connector_id);","} else {","   console.log('INFO - Unable to assign variable {{merchant_connector_id}}, as jsonData.merchant_connector_id is undefined.');","};",""],"type":"text/javascript"}}],"id":"03d6d908-421e-4bb9-810b-29ae79f07fee","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{admin_api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"},{"key":"in","value":"header","type":"string"}]},"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"connector_type\": \"fiz_operations\",\n  \"connector_name\": \"stripe\",\n  \"connector_account_details\": {\n           \"auth_type\": \"HeaderKey\",\n           \"api_key\":\"{{connector_api_key}}\"\n  },\n  \"test_mode\": false,\n  \"disabled\": false,\n  \"payment_methods_enabled\": [\n        {\n            \"payment_method\": \"pay_later\",\n            \"payment_method_types\": [\n                {\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true,\n                    \"payment_experience\": \"redirect_to_url\",\n                    \"payment_method_type\": \"affirm\"\n                }\n            ]\n        },\n        {\n            \"payment_method\": \"pay_later\",\n            \"payment_method_types\": [\n                {\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true,\n                    \"payment_experience\": \"redirect_to_url\",\n                    \"payment_method_type\": \"afterpay_clearpay\"\n                }\n            ]\n        },\n        {\n            \"payment_method\": \"pay_later\",\n            \"payment_method_types\": [\n                {\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true,\n                    \"payment_experience\": \"redirect_to_url\",\n                    \"payment_method_type\": \"klarna\"\n                }\n            ]\n        },\n        {\n            \"payment_method\": \"pay_later\",\n            \"payment_method_types\": [\n                {\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true,\n                    \"payment_experience\": \"invoke_sdk_client\",\n                    \"payment_method_type\": \"klarna\"\n                }\n            ]\n        },\n        {\n            \"payment_method\": \"card\",\n            \"payment_method_types\": [\n                {\n                    \"payment_method_type\": \"credit\",\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true\n                }\n            ]\n        },\n        {\n            \"payment_method\": \"card\",\n            \"payment_method_types\": [\n                {\n                    \"payment_method_type\": \"debit\",\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true\n                }\n            ]\n        },\n        {\n            \"payment_method\": \"wallet\",\n            \"payment_method_types\": [\n                {\n                    \"payment_method_type\": \"apple_pay\",\n                    \"payment_experience\": \"invoke_sdk_client\",\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true\n                }\n            ]\n        },\n        {\n            \"payment_method\": \"wallet\",\n            \"payment_method_types\": [\n                {\n                    \"payment_method_type\": \"google_pay\",\n                    \"payment_experience\": \"invoke_sdk_client\",\n                    \"minimum_amount\": 1,\n                    \"maximum_amount\": 68607706,\n                    \"recurring_enabled\": true,\n                    \"installment_payment_enabled\": true\n                }\n            ]\n        }\n    ],\n    \"metadata\": {\n        \"google_pay\": {\n            \"allowed_payment_methods\": [\n                {\n                    \"type\": \"CARD\",\n                    \"parameters\": {\n                        \"allowed_auth_methods\": [\n                            \"PAN_ONLY\",\n                            \"CRYPTOGRAM_3DS\"\n                        ],\n                        \"allowed_card_networks\": [\n                            \"AMEX\",\n                            \"DISCOVER\",\n                            \"INTERAC\",\n                            \"JCB\",\n                            \"MASTERCARD\",\n                            \"VISA\"\n                        ]\n                    },\n                    \"tokenization_specification\": {\n                        \"type\": \"PAYMENT_GATEWAY\",\n                        \"parameters\": {\n                            \"gateway\": \"example\",\n                            \"gateway_merchant_id\": \"pk_test_51Msk2GAGHc77EJXX78h549SX2uaOnEkUYqBfjcoD05PIpAnDkYxMn8nQ4d19im85NQuX4Z6WDyHaUw2fFTPBWsIY00Wa7oNerO\"\n                        }\n                    }\n                }\n            ],\n            \"merchant_info\": {\n                \"merchant_name\": \"Narayan Bhat\"\n            }\n        },\n        \"apple_pay\": {\n            \"session_token_data\": {\n                \"initiative\": \"web\",\n                \"certificate\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdLakNDQlJLZ0F3SUJBZ0lRVTlOTklVMFpRNDRhRHFwTTFwTFZVREFOQmdrcWhraUc5dzBCQVFzRkFEQjEKTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRApaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwZVRFTE1Ba0dBMVVFQ3d3Q1J6TXhFekFSQmdOVkJBb01Da0Z3CmNHeGxJRWx1WXk0eEN6QUpCZ05WQkFZVEFsVlRNQjRYRFRJek1ETXlNekUwTURReE0xb1hEVEkxTURReU1URTAKTURReE1sb3dnYXd4S0RBbUJnb0praWFKay9Jc1pBRUJEQmh0WlhKamFHRnVkQzVqYjIwdWMzUnlhWEJsTG5OaApibWN4UFRBN0JnTlZCQU1NTkVGd2NHeGxJRkJoZVNCTlpYSmphR0Z1ZENCSlpHVnVkR2wwZVRwdFpYSmphR0Z1CmRDNWpiMjB1YzNSeWFYQmxMbk5oYm1jeEV6QVJCZ05WQkFzTUNsbE5PVlUzTTFveVNrMHhMREFxQmdOVkJBb00KSTBwVlUxQkJXU0JVUlVOSVRrOU1UMGRKUlZNZ1VGSkpWa0ZVUlNCTVNVMUpWRVZFTUlJQklqQU5CZ2txaGtpRwo5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeXhNZms0NHRUUUFrWDRtOTRDNUZ5cG9sWXpUNXZRSWQwZVprCktwM0hQSmRJQ3VSb29aRWplSzVoTi9kTkhScU44Zlk4YWJHV1d4aUtiRXBadUtscW9CTnpkRzBYUEJmQndaTHAKYWlodjVIeko5Ukw0a2JKQUo2MzAvTmhEZWpHOUtJTXRiNkJPRmJwZUZJMlYrNWNFMFhkOUFaUjFkL2g2OWl3QwpYVE5GcUhBZFN3bDNqVFpuTjVIaEMzNmxsdkZETG93eE5rWVJiTkNqcUNaN2xXMlhmbkVLa2drYWxQWnNjQUtmClZYajdBZG9zSm92WC95aFdIVjdGVUJ6azdiZ2lvTitXMXZ2TVZJVVFQZTlkVWh4di9iVjZmWS9ZRGdFUkYrWFoKL2VleldTajAzWXdBU0gremZsSVVod283dHozTlRhTWYwU0s1bTBiTUhPUlFXU3paTndJREFRQUJvNElDZkRDQwpBbmd3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlFKL3NBVmtQbXZaQXFTRXJrbUtHTU1sK3luCnNqQndCZ2dyQmdFRkJRY0JBUVJrTUdJd0xRWUlLd1lCQlFVSE1BS0dJV2gwZEhBNkx5OWpaWEowY3k1aGNIQnMKWlM1amIyMHZkM2RrY21jekxtUmxjakF4QmdnckJnRUZCUWN3QVlZbGFIUjBjRG92TDI5amMzQXVZWEJ3YkdVdQpZMjl0TDI5amMzQXdNeTEzZDJSeVp6TXdPVENDQVMwR0ExVWRJQVNDQVNRd2dnRWdNSUlCSEFZSktvWklodmRqClpBVUJNSUlCRFRDQjBRWUlLd1lCQlFVSEFnSXdnY1FNZ2NGU1pXeHBZVzVqWlNCdmJpQjBhR2x6SUVObGNuUnAKWm1sallYUmxJR0o1SUdGdWVTQndZWEowZVNCdmRHaGxjaUIwYUdGdUlFRndjR3hsSUdseklIQnliMmhwWW1sMApaV1F1SUZKbFptVnlJSFJ2SUhSb1pTQmhjSEJzYVdOaFlteGxJSE4wWVc1a1lYSmtJSFJsY20xeklHRnVaQ0JqCmIyNWthWFJwYjI1eklHOW1JSFZ6WlN3Z1kyVnlkR2xtYVdOaGRHVWdjRzlzYVdONUlHRnVaQ0JqWlhKMGFXWnAKWTJGMGFXOXVJSEJ5WVdOMGFXTmxJSE4wWVhSbGJXVnVkSE11TURjR0NDc0dBUVVGQndJQkZpdG9kSFJ3Y3pvdgpMM2QzZHk1aGNIQnNaUzVqYjIwdlkyVnlkR2xtYVdOaGRHVmhkWFJvYjNKcGRIa3ZNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQ01CMEdBMVVkRGdRV0JCVHhzdkJwaVZTTmR1dmZVdFRqYU9NNkVjWWpHVEFPQmdOVkhROEIKQWY4RUJBTUNCNEF3VHdZSktvWklodmRqWkFZZ0JFSU1RREV3T1VFeU9EazJOakJDUmpFNE1qSXhPRVJCTVRVNApNa1pDTlRFNVJrTXdRMEZETVRBeE9FRkJPVFV6TURJd1JFRTNSVUZDUVVORU1UVkNRVVF5TlVZd0R3WUpLb1pJCmh2ZGpaQVl1QkFJRkFEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFFb2tjdDVqV0wvSktyNFAwMkh2V3dTSXoKUlRzY3IxUWtlUnNGUG4wVHJxcWgxY2dSYmpXZk5UUytzeWFPRHpYY2NFeU5ENTFGU3RUWTNvUzJLUURTOWZhbwpncWdXLzliWCtQUXJzazVjUTE4aTdScjRrZE5MdEVaMElqbTJ1UzdzVmlhZ2ZhRVNxbnJvQ0JpU3MxQTI3ZEdHCitIRnFnRzhYemNZL3JYb1A1VVpiRDMvc1F2amw1Ry9OeE9NbzdlSmI5SHV4WTRRYnV6NURWUFpzMys4YTJrTVQKSEpVV3FpRWV3TFIwZ2l4U3R4VE40eUhXOUZSQ3dlMjFVM1FOdktWVDJiWjZjZmtLQlFqWHFDMlBOM0dHRTZ4ZQptTGZVQzhrU3A5ZFpuUEJsc0FVNnh0eEd4Zm1ZK21ETFBDdW1hNGZQQkpiRmJjWlJPYmVCQWxNVTBlU21jUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\",\n                \"display_name\": \"applepay\",\n                \"certificate_keys\": \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRExFeCtUamkxTkFDUmYKaWIzZ0xrWEttaVZqTlBtOUFoM1I1bVFxbmNjOGwwZ0s1R2loa1NONHJtRTM5MDBkR28zeDlqeHBzWlpiR0lwcwpTbG00cVdxZ0UzTjBiUmM4RjhIQmt1bHFLRy9rZk1uMUV2aVJza0FucmZUODJFTjZNYjBvZ3kxdm9FNFZ1bDRVCmpaWDdsd1RSZDMwQmxIVjMrSHIyTEFKZE0wV29jQjFMQ1hlTk5tYzNrZUVMZnFXVzhVTXVqREUyUmhGczBLT28KSm51VmJaZCtjUXFTQ1JxVTlteHdBcDlWZVBzQjJpd21pOWYvS0ZZZFhzVlFIT1R0dUNLZzM1YlcrOHhVaFJBOQo3MTFTSEcvOXRYcDlqOWdPQVJFWDVkbjk1N05aS1BUZGpBQklmN04rVWhTSENqdTNQYzFOb3gvUklybWJSc3djCjVGQlpMTmszQWdNQkFBRUNnZ0VBREFhWTR4c1RVYkVGZG1ib3lLTFUzVGVkcVM5VTdyMTJXSnpGSjhUcUxJdGsKNThnNDdnQnpVazA1VXFBaGYreTNwVEdJeUZXTTZ0NGNMR2VHd3FtOXQ3Y1BLa0RmbEY1dnllL1NSTWdhUURTbgpuUXkvalprNXRWL1cxelpUWUtRYmFJL0VIQTBwTXA0enZoSFlaT3EvalV2L0toM0ppdzQ2OGVNUFRNZWhnMlR0CkhTM3k2WlE5aEkrS2MxQS9CMjJhV0gySDNGSytLbjc5Znh0VUErOHJMalhYU3dESlFTU3dFMXdmY1lEUDJjZ0IKelhTYmNCdHpnUXgrajhkaEhJNGIrQTdBMFZTU20rOUxoRHMvWGtPamFjYmx4dllaTGFad1FjL0U3S0ZFeHNJMAp0MGI4K09peThMK080aFEyOWZhM05NYklpTUdWaEVvTXh2WkdrV0ZZV1FLQmdRRCtKRE9QbEJBSzZSejFRL001ClJxMFZtZEJVdzVxdmFldFl2ZHJZY0lDVkttbDZ3QjR4N1dKaS9zWEdMVHN0ZnRYOVpKQXp5L1AzZXA2MGgzS1IKeXpHbk1uOG0yWnk2SGp0TlgvQUw2SGZ6NXZwZ1NLQS9aYXdNRU1zVGhkL0lrdythMFp6amVpdzdkVzlObFNPQQozT05PK21ob280Tk85S293MjFsY25LZjdyUUtCZ1FETWoxRGFuVEF1dlZYcS8xNXFCcjRYYVZhM3QyMnMvcW50ClR1WlBubG0xSUpQVW9RakYxTVFzeTRidjMzZlRpb3VoZ0hTT3R4SVlTVy95YkZKbmRLSklvUTNjWEVQMjc2WVUKS2dCbVd0M1R5cGI4QVZ5T2xQYmx2cjM3emx6cWNUVGtpU1p3UVZIMk1QVkZXbEF6ZklLblFWcXYwaUFHZGxzWgorQTZrM2p0RTh3S0JnRVErOW5Xay9oWGYrYjNIVElaaCsxTGtwalJNL3JvQ1NJZmhHK2FwZDI0WElKSXRDeTYvCkgzK1VDUW9wMVUxblZSR2hzck9tSGxLajVBQjRxd1NKdTBDNTU3bElFTFZPTHdDZE5ib002RUZnRW5aT3FuRzcKM05LMG84UVBYRVBoY2Z4U003NUdiYUJkN2RDNHJ2c0kxaVc4U3RObXJYbERiSHlJT3R3SzJYVlZBb0dBWm5XYQpjQVd2cnBtVFFXT3JyTHUzMXc0aUsxOHJCaTJBZTZhN1lVSFZlUTNhUGZSeTZuUkoxbzRUQm04T0c5MFhWMHQ2CkZrbklQSFg4SnBidkozYWFHbnJnOEhFZWNiOVRsbUg3VlVsS050MFFoeVUvY1FOWUwzYzh2YlY5Z01nM1VBa0sKUWN2Vis5UkY1Zmo0bHZGVWwrWDZRSHFsSTllQWhoOWpabDBSbnRVQ2dZRUF3YTdTYWtYdVJ4ejhsWEI0QVYzOQpWN2hhWTRibE1zaDU2TDUzQkVuaDhVZHh5SDJZOHk1Z0o5cm5MbGxHMkxSc0lqVW8zVlFmZGtGeTd6L2FaSitRCnl0cWVlQVUyQlVnUW9ab1hkVlJJNTZoRkVocjRVZ0hhOFR5V0JFZVpVenRmZEFFMUNtaDd5ekxIdTQyZFNHNXcKTVE5QTVhSjUwa1d6SFEzamhsVjB0V1E9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n                \"initiative_context\": \"hyperswitch-sdk-test.netlify.app\",\n                \"merchant_identifier\": \"merchant.com.stripe.sang\"\n            },\n            \"payment_request_data\": {\n                \"label\": \"applepay pvt.ltd\",\n                \"supported_networks\": [\n                    \"visa\",\n                    \"masterCard\",\n                    \"amex\",\n                    \"discover\"\n                ],\n                \"merchant_capabilities\": [\n                    \"supports3DS\"\n                ]\n            }\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/account/:account_id/connectors","host":["{{baseUrl}}"],"path":["account",":account_id","connectors"],"variable":[{"id":"0c14af59-bbec-4f4f-9fc0-78bb32e8043b","key":"account_id","value":"{{merchant_id}}","description":"(Required) The unique identifier for the merchant account"}]},"description":"Create a new Payment Connector for the merchant account. The connector could be a payment processor / facilitator / acquirer or specialised services like Fraud / Accounting etc."},"response":[],"uid":"25176183-03d6d908-421e-4bb9-810b-29ae79f07fee"},{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};"],"type":"text/javascript"}}],"id":"d207b2d0-b3a3-4601-be7d-94cff28b98c2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+1\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n    \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-d207b2d0-b3a3-4601-be7d-94cff28b98c2"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};"],"type":"text/javascript"}}],"id":"5c4a1870-05cb-4fd8-b4ca-ec7eff494867","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id","host":["{{baseUrl}}"],"path":["payments",":id"],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-5c4a1870-05cb-4fd8-b4ca-ec7eff494867"},{"name":"Refunds - Create","event":[{"listen":"test","script":{"id":"e6abd926-8c58-4e42-8186-59e4781222c4","exec":["// Validate status 2xx ","pm.test(\"[POST]::/refunds - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/refunds - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};",""],"type":"text/javascript"}}],"id":"4af993c0-2abe-4131-b884-5c7c536422ff","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"payment_id\": \"{{payment_id}}\",\n    \"amount\": 600,\n    \"reason\": \"Customer returned product\",\n    \"refund_type\": \"instant\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/refunds","host":["{{baseUrl}}"],"path":["refunds"]},"description":"To create a refund againt an already processed payment"},"response":[],"uid":"25176183-4af993c0-2abe-4131-b884-5c7c536422ff"},{"name":"Refunds - Retrieve","event":[{"listen":"test","script":{"id":"555758ee-7b7c-4f33-976e-d984b67f7005","exec":["// Validate status 2xx ","pm.test(\"[GET]::/refunds/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/refunds/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};",""],"type":"text/javascript"}}],"id":"91820bb3-b4ac-4aa2-9e8f-7dd366ac6f82","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/refunds/:id","host":["{{baseUrl}}"],"path":["refunds",":id"],"variable":[{"id":"ce571b93-f124-4af4-b50d-00514b23869a","key":"id","value":"{{refund_id}}","description":"(Required) unique refund id"}]},"description":"To retrieve the properties of a Refund. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-91820bb3-b4ac-4aa2-9e8f-7dd366ac6f82"}],"id":"de2d17d6-40ce-40d5-9db9-696a54831ccd","uid":"25176183-de2d17d6-40ce-40d5-9db9-696a54831ccd"},{"name":"Happy Cases","item":[{"name":"Scenario1-Create payment with confirm true","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};",""],"type":"text/javascript"}}],"id":"4d07163c-6a66-4efa-b5d6-af5717dc2f3f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n    \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-4d07163c-6a66-4efa-b5d6-af5717dc2f3f"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","","};","","","// Response body should have value \"Succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};",""],"type":"text/javascript"}}],"id":"56ebf984-9788-484b-bc2d-e6e664730f67","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-56ebf984-9788-484b-bc2d-e6e664730f67"}],"id":"9275b215-5e4e-4340-9395-e2c9248e760f","uid":"25176183-9275b215-5e4e-4340-9395-e2c9248e760f"},{"name":"Scenario2-Create payment with confirm false","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_confirmation\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'requires_confirmation'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_confirmation\");","})};",""],"type":"text/javascript"}}],"id":"c8b68fe5-278c-40b6-b24b-cb5078343e12","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": false,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n     \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-c8b68fe5-278c-40b6-b24b-cb5078343e12"},{"name":"Payments - Confirm","event":[{"listen":"test","script":{"id":"1c7a5f0b-2b3d-420e-90f1-2e8b549c6d39","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments/:id/confirm - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id/confirm - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id/confirm - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id/confirm - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};"],"type":"text/javascript"}}],"id":"43263017-99b3-47d2-8cb5-91e5d656c73d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":" {}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id/confirm","host":["{{baseUrl}}"],"path":["payments",":id","confirm"],"variable":[{"id":"43f587c4-a6b9-4d7a-989f-7813220ef24d","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"This API is to confirm the payment request and foward payment to the payment processor. This API provides more granular control upon when the API is forwarded to the payment processor. Alternatively you can confirm the payment within the Payments-Create API"},"response":[],"uid":"25176183-43263017-99b3-47d2-8cb5-91e5d656c73d"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments:id - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};"],"type":"text/javascript"}}],"id":"480d5a8f-c56e-40c5-b13b-5a694575162f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-480d5a8f-c56e-40c5-b13b-5a694575162f"}],"id":"0e882290-e8af-4907-947f-8aac5b7fe862","uid":"25176183-0e882290-e8af-4907-947f-8aac5b7fe862"},{"name":"Scenario3-Create payment without PMD","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_payment_method\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'requires_payment_method'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_payment_method\");","})};",""],"type":"text/javascript"}}],"id":"42dd3150-b1ee-4fa5-ad25-7f4f346dc7d8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": false,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n     \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-42dd3150-b1ee-4fa5-ad25-7f4f346dc7d8"},{"name":"Payments - Confirm","event":[{"listen":"test","script":{"id":"1c7a5f0b-2b3d-420e-90f1-2e8b549c6d39","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments/:id/confirm - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id/confirm - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id/confirm - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments:id/confirm - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};"],"type":"text/javascript"}}],"id":"5887b2ef-cee6-4581-81e7-922587fd278e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id/confirm","host":["{{baseUrl}}"],"path":["payments",":id","confirm"],"variable":[{"id":"43f587c4-a6b9-4d7a-989f-7813220ef24d","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"This API is to confirm the payment request and foward payment to the payment processor. This API provides more granular control upon when the API is forwarded to the payment processor. Alternatively you can confirm the payment within the Payments-Create API"},"response":[],"uid":"25176183-5887b2ef-cee6-4581-81e7-922587fd278e"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments:id - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};"],"type":"text/javascript"}}],"id":"abf9178b-5b27-4a17-b7c7-edfc50212b0f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-abf9178b-5b27-4a17-b7c7-edfc50212b0f"}],"id":"d4551461-80e4-43a7-8f78-90c538e78f83","uid":"25176183-d4551461-80e4-43a7-8f78-90c538e78f83"},{"name":"Scenario4-Create payment with Manual capture","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_capture\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'requires_capture'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_capture\");","})};","",""],"type":"text/javascript"}}],"id":"81a819bb-b344-4304-9af1-b4c343bf62f1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"manual\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n     \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-81a819bb-b344-4304-9af1-b4c343bf62f1"},{"name":"Payments - Capture","event":[{"listen":"test","script":{"id":"c412734a-32f7-4be6-aa3f-deface0aeb32","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments/:id/capture - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id/capture - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id/capture - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]:://payments/:id/capture - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"6540\" for \"amount\"","if (jsonData?.amount){","    pm.test(\"[post]:://payments/:id/capture - Content check if value for 'amount' matches '6540'\", function() {","    pm.expect(jsonData.amount).to.eql(6540);","    } )","} ","","// Response body should have value \"6000\" for \"amount_received\"","if (jsonData?.amount_received) {","pm.test(\"[POST]::/payments:id/capture - Content check if value for 'amount_received' matches '6000'\", function() {","  pm.expect(jsonData.amount_received).to.eql(6000);","})};","","","","",""],"type":"text/javascript"}}],"id":"29719e10-94a1-4386-be1d-3aa444988e57","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"amount_to_capture\": 6000,\n  \"statement_descriptor_name\": \"Joseph\",\n  \"statement_descriptor_suffix\": \"JS\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id/capture","host":["{{baseUrl}}"],"path":["payments",":id","capture"],"variable":[{"id":"a5ba124f-a12a-4773-afb3-cf8a94ee8c4f","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To capture the funds for an uncaptured payment"},"response":[],"uid":"25176183-29719e10-94a1-4386-be1d-3aa444988e57"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};"],"type":"text/javascript"}}],"id":"c15f3fb1-1091-4b1a-814b-8de4a29b4987","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-c15f3fb1-1091-4b1a-814b-8de4a29b4987"}],"id":"7d23f480-032b-44c8-939a-8b23e38c289b","uid":"25176183-7d23f480-032b-44c8-939a-8b23e38c289b"},{"name":"Scenario5-Void the payment","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_capture\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'requires_capture'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_capture\");","})};","",""],"type":"text/javascript"}}],"id":"0af3a365-9caa-4ec0-be41-b2df67992869","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"manual\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n      \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-0af3a365-9caa-4ec0-be41-b2df67992869"},{"name":"Payments - Cancel","event":[{"listen":"test","script":{"id":"fff28ef6-694d-4f0c-ae47-bc3f157ce296","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments/:id/cancel - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id/cancel - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id/cancel - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"cancelled\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id/cancel - Content check if value for 'status' matches 'cancelled'\", function() {","  pm.expect(jsonData.status).to.eql(\"cancelled\");","})};","","","",""],"type":"text/javascript"}}],"id":"c4addf5f-41b9-4a67-9d01-b58a6bfd9323","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"cancellation_reason\": \"requested_by_customer\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id/cancel","host":["{{baseUrl}}"],"path":["payments",":id","cancel"],"variable":[{"id":"7f388eed-14aa-4aea-9bae-b638efffa2dd","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"A Payment could can be cancelled when it is in one of these statuses: requires_payment_method, requires_capture, requires_confirmation, requires_customer_action"},"response":[],"uid":"25176183-c4addf5f-41b9-4a67-9d01-b58a6bfd9323"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","","// Response body should have value \"cancelled\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id - Content check if value for 'status' matches 'cancelled'\", function() {","  pm.expect(jsonData.status).to.eql(\"cancelled\");","})};"],"type":"text/javascript"}}],"id":"f3750e80-b4ac-471e-bfcb-c6b14a6109ed","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-f3750e80-b4ac-471e-bfcb-c6b14a6109ed"}],"id":"c176f5c9-3570-442e-8dc9-6514b01679a6","uid":"25176183-c176f5c9-3570-442e-8dc9-6514b01679a6"},{"name":"Scenario6-Create 3DS payment","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_customer_action\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'requires_customer_action'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_customer_action\");","})};","","// Response body should have \"next_action.redirect_to_url\"","pm.test(\"[POST]::/payments - Content check if 'next_action.redirect_to_url' exists\", function() {","   pm.expect((typeof jsonData.next_action.redirect_to_url !== \"undefined\")).to.be.true;","});",""],"type":"text/javascript"}}],"id":"7af4590d-c641-4901-89e4-291bde075966","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4000000000003063\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n      \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-7af4590d-c641-4901-89e4-291bde075966"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","","};","","","// Response body should have value \"requires_customer_action\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id - Content check if value for 'status' matches 'requires_customer_action'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_customer_action\");","})};",""],"type":"text/javascript"}}],"id":"6ba9a191-170a-4b37-a649-49175a728c8b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-6ba9a191-170a-4b37-a649-49175a728c8b"}],"id":"bda841c1-1a24-44c0-9ba4-484db162957a","uid":"25176183-bda841c1-1a24-44c0-9ba4-484db162957a"},{"name":"Scenario7-Create 3DS payment with confrm false","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_confirmation\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'requires_confirmation'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_confirmation\");","})};",""],"type":"text/javascript"}}],"id":"6a920f5b-c704-43f4-8ae9-c3bfd15d8ccb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": false,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4000000000003063\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n      \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-6a920f5b-c704-43f4-8ae9-c3bfd15d8ccb"},{"name":"Payments - Confirm","event":[{"listen":"test","script":{"id":"1c7a5f0b-2b3d-420e-90f1-2e8b549c6d39","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments/:id/confirm - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id/confirm - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id/confirm - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_customer_action\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id/confirm - Content check if value for 'status' matches 'requires_customer_action'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_customer_action\");","})};","","// Response body should have \"next_action.redirect_to_url\"","pm.test(\"[POST]::/payments/:id/confirm - Content check if 'next_action.redirect_to_url' exists\", function() {","   pm.expect((typeof jsonData.next_action.redirect_to_url !== \"undefined\")).to.be.true;","});"],"type":"text/javascript"}}],"id":"88c533ec-4083-4c3b-8604-974cc7e19442","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":" {}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id/confirm","host":["{{baseUrl}}"],"path":["payments",":id","confirm"],"variable":[{"id":"43f587c4-a6b9-4d7a-989f-7813220ef24d","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"This API is to confirm the payment request and foward payment to the payment processor. This API provides more granular control upon when the API is forwarded to the payment processor. Alternatively you can confirm the payment within the Payments-Create API"},"response":[],"uid":"25176183-88c533ec-4083-4c3b-8604-974cc7e19442"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_customer_action\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments:id - Content check if value for 'status' matches 'requires_customer_action'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_customer_action\");","})};"],"type":"text/javascript"}}],"id":"7553a0e2-5fc9-4087-84bf-f6627d3a0e63","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-7553a0e2-5fc9-4087-84bf-f6627d3a0e63"}],"id":"5aacd001-d312-4990-ab8b-4e77d854c731","uid":"25176183-5aacd001-d312-4990-ab8b-4e77d854c731"},{"name":"Scenario9-Refund full payment","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","",""],"type":"text/javascript"}}],"id":"91cdcfb8-f850-4f71-9c4f-f5544570d4f1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n    \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-91cdcfb8-f850-4f71-9c4f-f5544570d4f1"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","","};","","","// Response body should have value \"Succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};",""],"type":"text/javascript"}}],"id":"bb672e50-ffca-4db9-8d72-811937b1b695","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-bb672e50-ffca-4db9-8d72-811937b1b695"},{"name":"Refunds - Create","event":[{"listen":"test","script":{"id":"e6abd926-8c58-4e42-8186-59e4781222c4","exec":["// Validate status 2xx ","pm.test(\"[POST]::/refunds - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/refunds - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"6540\" for \"amount\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'amount' matches '6540'\", function() {","  pm.expect(jsonData.amount).to.eql(6540);","})};",""],"type":"text/javascript"}}],"id":"4c3a84bb-0653-49a5-9ea7-35854af0a5b6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"payment_id\": \"{{payment_id}}\",\n    \"amount\": 6540,\n    \"reason\": \"Customer returned product\",\n    \"refund_type\": \"instant\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/refunds","host":["{{baseUrl}}"],"path":["refunds"]},"description":"To create a refund againt an already processed payment"},"response":[],"uid":"25176183-4c3a84bb-0653-49a5-9ea7-35854af0a5b6"},{"name":"Refunds - Retrieve","event":[{"listen":"test","script":{"id":"555758ee-7b7c-4f33-976e-d984b67f7005","exec":["// Validate status 2xx ","pm.test(\"[GET]::/refunds/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/refunds/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"6540\" for \"amount\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'amount' matches '6540'\", function() {","  pm.expect(jsonData.amount).to.eql(6540);","})};",""],"type":"text/javascript"}}],"id":"3e980130-0b05-42b1-9864-4f9fcaa0bf3b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/refunds/:id","host":["{{baseUrl}}"],"path":["refunds",":id"],"variable":[{"id":"ce571b93-f124-4af4-b50d-00514b23869a","key":"id","value":"{{refund_id}}","description":"(Required) unique refund id"}]},"description":"To retrieve the properties of a Refund. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-3e980130-0b05-42b1-9864-4f9fcaa0bf3b"}],"id":"f4db37c3-a858-4688-b4f2-5a6c6171da6c","uid":"25176183-f4db37c3-a858-4688-b4f2-5a6c6171da6c"},{"name":"Scenario10-Partial refund","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","",""],"type":"text/javascript"}}],"id":"d748354f-fdb5-4672-810a-a63e2e4548f9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n    \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-d748354f-fdb5-4672-810a-a63e2e4548f9"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","","};","","","// Response body should have value \"Succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};",""],"type":"text/javascript"}}],"id":"dac7198a-cf0c-43b5-ae79-a04068fa03de","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-dac7198a-cf0c-43b5-ae79-a04068fa03de"},{"name":"Refunds - Create","event":[{"listen":"test","script":{"id":"e6abd926-8c58-4e42-8186-59e4781222c4","exec":["// Validate status 2xx ","pm.test(\"[POST]::/refunds - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/refunds - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"540\" for \"amount\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'amount' matches '540'\", function() {","  pm.expect(jsonData.amount).to.eql(540);","})};",""],"type":"text/javascript"}}],"id":"02e5832e-8ba0-4a3c-865c-aafcb03ab4de","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"payment_id\": \"{{payment_id}}\",\n    \"amount\": 540,\n    \"reason\": \"Customer returned product\",\n    \"refund_type\": \"instant\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/refunds","host":["{{baseUrl}}"],"path":["refunds"]},"description":"To create a refund againt an already processed payment"},"response":[],"uid":"25176183-02e5832e-8ba0-4a3c-865c-aafcb03ab4de"},{"name":"Refunds - Retrieve","event":[{"listen":"test","script":{"id":"555758ee-7b7c-4f33-976e-d984b67f7005","exec":["// Validate status 2xx ","pm.test(\"[GET]::/refunds/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/refunds/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"6540\" for \"amount\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'amount' matches '540'\", function() {","  pm.expect(jsonData.amount).to.eql(540);","})};",""],"type":"text/javascript"}}],"id":"da9f8710-eb8f-4cda-a6e2-f80be44b7493","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/refunds/:id","host":["{{baseUrl}}"],"path":["refunds",":id"],"variable":[{"id":"ce571b93-f124-4af4-b50d-00514b23869a","key":"id","value":"{{refund_id}}","description":"(Required) unique refund id"}]},"description":"To retrieve the properties of a Refund. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-da9f8710-eb8f-4cda-a6e2-f80be44b7493"},{"name":"Refunds - Create","event":[{"listen":"test","script":{"id":"e6abd926-8c58-4e42-8186-59e4781222c4","exec":["// Validate status 2xx ","pm.test(\"[POST]::/refunds - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/refunds - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"1000\" for \"amount\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'amount' matches '1000'\", function() {","  pm.expect(jsonData.amount).to.eql(1000);","})};",""],"type":"text/javascript"}}],"id":"f024fe06-6b94-4fe3-9bfe-21b6b9b40fe7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"payment_id\": \"{{payment_id}}\",\n    \"amount\": 1000,\n    \"reason\": \"Customer returned product\",\n    \"refund_type\": \"instant\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/refunds","host":["{{baseUrl}}"],"path":["refunds"]},"description":"To create a refund againt an already processed payment"},"response":[],"uid":"25176183-f024fe06-6b94-4fe3-9bfe-21b6b9b40fe7"},{"name":"Refunds - Retrieve","event":[{"listen":"test","script":{"id":"555758ee-7b7c-4f33-976e-d984b67f7005","exec":["// Validate status 2xx ","pm.test(\"[GET]::/refunds/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/refunds/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"6540\" for \"amount\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'amount' matches '1000'\", function() {","  pm.expect(jsonData.amount).to.eql(1000);","})};",""],"type":"text/javascript"}}],"id":"6ba4db5d-a169-4a90-b8e7-714966b33ac9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/refunds/:id","host":["{{baseUrl}}"],"path":["refunds",":id"],"variable":[{"id":"ce571b93-f124-4af4-b50d-00514b23869a","key":"id","value":"{{refund_id}}","description":"(Required) unique refund id"}]},"description":"To retrieve the properties of a Refund. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-6ba4db5d-a169-4a90-b8e7-714966b33ac9"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","","};","","// Response body should have value \"Succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have \"refunds\"","pm.test(\"[POST]::/payments - Content check if 'refunds' exists\", function() {","   pm.expect((typeof jsonData.refunds !== \"undefined\")).to.be.true;","});","","","",""],"type":"text/javascript"}}],"id":"79d0bced-6258-43e3-91b3-fd8706e12242","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-79d0bced-6258-43e3-91b3-fd8706e12242"}],"id":"abd97e75-5393-40cd-b98a-cca257383bd9","uid":"25176183-abd97e75-5393-40cd-b98a-cca257383bd9"},{"name":"Scenario11-Create a mandate and recurring payment","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have \"mandate_id\"","pm.test(\"[POST]::/payments - Content check if 'mandate_id' exists\", function() {","   pm.expect((typeof jsonData.mandate_id !== \"undefined\")).to.be.true;","});","","// Response body should have \"mandate_data\"","pm.test(\"[POST]::/payments - Content check if 'mandate_data' exists\", function() {","   pm.expect((typeof jsonData.mandate_data !== \"undefined\")).to.be.true;","});",""],"type":"text/javascript"}}],"id":"de7d748e-00ea-4e58-8663-1b2bfb6816b7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n    \"setup_future_usage\": \"off_session\",\n    \"mandate_data\": {\n        \"customer_acceptance\": {\n            \"acceptance_type\": \"offline\",\n            \"accepted_at\": \"1963-05-03T04:07:52.723Z\",\n            \"online\": {\n                \"ip_address\": \"127.0.0.1\",\n                \"user_agent\": \"amet irure esse\"\n            }\n        },\n        \"mandate_type\": {\n            \"single_use\": {\n                \"amount\": 7000,\n                \"currency\": \"USD\"\n            }\n        }\n    },\n    \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-de7d748e-00ea-4e58-8663-1b2bfb6816b7"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","","};","","","// Response body should have value \"Succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have \"mandate_id\"","pm.test(\"[POST]::/payments - Content check if 'mandate_id' exists\", function() {","   pm.expect((typeof jsonData.mandate_id !== \"undefined\")).to.be.true;","});","","// Response body should have \"mandate_data\"","pm.test(\"[POST]::/payments - Content check if 'mandate_data' exists\", function() {","   pm.expect((typeof jsonData.mandate_data !== \"undefined\")).to.be.true;","});"],"type":"text/javascript"}}],"id":"b54e19cc-077b-4b03-9b5f-bcf38baf6e14","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-b54e19cc-077b-4b03-9b5f-bcf38baf6e14"},{"name":"Recurring Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have \"mandate_id\"","pm.test(\"[POST]::/payments - Content check if 'mandate_id' exists\", function() {","   pm.expect((typeof jsonData.mandate_id !== \"undefined\")).to.be.true;","});","","// Response body should have \"mandate_data\"","pm.test(\"[POST]::/payments - Content check if 'mandate_data' exists\", function() {","   pm.expect((typeof jsonData.mandate_data !== \"undefined\")).to.be.true;","});","","// Response body should have \"payment_method_data\"","pm.test(\"[POST]::/payments - Content check if 'payment_method_data' exists\", function() {","   pm.expect((typeof jsonData.payment_method_data !== \"undefined\")).to.be.true;","});",""],"type":"text/javascript"}}],"id":"0d7306ab-8df2-4df3-b147-ae8423fead25","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"mandate_id\" : \"{{mandate_id}}\",\n    \"off_session\" : true,\n     \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-0d7306ab-8df2-4df3-b147-ae8423fead25"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","","};","","","// Response body should have value \"Succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have \"mandate_id\"","pm.test(\"[POST]::/payments - Content check if 'mandate_id' exists\", function() {","   pm.expect((typeof jsonData.mandate_id !== \"undefined\")).to.be.true;","});","","// Response body should have \"mandate_data\"","pm.test(\"[POST]::/payments - Content check if 'mandate_data' exists\", function() {","   pm.expect((typeof jsonData.mandate_data !== \"undefined\")).to.be.true;","});"],"type":"text/javascript"}}],"id":"8fae23fa-cc8d-40ea-9513-5452e34f22dc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-8fae23fa-cc8d-40ea-9513-5452e34f22dc"}],"id":"d354ed55-a986-4539-8deb-a54568a14016","uid":"25176183-d354ed55-a986-4539-8deb-a54568a14016"},{"name":"Scenario11-Refund recurring payment","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have \"mandate_id\"","pm.test(\"[POST]::/payments - Content check if 'mandate_id' exists\", function() {","   pm.expect((typeof jsonData.mandate_id !== \"undefined\")).to.be.true;","});","","// Response body should have \"mandate_data\"","pm.test(\"[POST]::/payments - Content check if 'mandate_data' exists\", function() {","   pm.expect((typeof jsonData.mandate_data !== \"undefined\")).to.be.true;","});",""],"type":"text/javascript"}}],"id":"7406b3e3-5fb9-431d-b835-80c98b69b670","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n    \"setup_future_usage\": \"off_session\",\n    \"mandate_data\": {\n        \"customer_acceptance\": {\n            \"acceptance_type\": \"offline\",\n            \"accepted_at\": \"1963-05-03T04:07:52.723Z\",\n            \"online\": {\n                \"ip_address\": \"127.0.0.1\",\n                \"user_agent\": \"amet irure esse\"\n            }\n        },\n        \"mandate_type\": {\n            \"single_use\": {\n                \"amount\": 7000,\n                \"currency\": \"USD\"\n            }\n        }\n    },\n     \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-7406b3e3-5fb9-431d-b835-80c98b69b670"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","","};","","","// Response body should have value \"Succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have \"mandate_id\"","pm.test(\"[POST]::/payments - Content check if 'mandate_id' exists\", function() {","   pm.expect((typeof jsonData.mandate_id !== \"undefined\")).to.be.true;","});","","// Response body should have \"mandate_data\"","pm.test(\"[POST]::/payments - Content check if 'mandate_data' exists\", function() {","   pm.expect((typeof jsonData.mandate_data !== \"undefined\")).to.be.true;","});"],"type":"text/javascript"}}],"id":"8e041c4f-629e-49da-a617-ccdf1e55f310","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-8e041c4f-629e-49da-a617-ccdf1e55f310"},{"name":"Recurring Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have \"mandate_id\"","pm.test(\"[POST]::/payments - Content check if 'mandate_id' exists\", function() {","   pm.expect((typeof jsonData.mandate_id !== \"undefined\")).to.be.true;","});","","// Response body should have \"mandate_data\"","pm.test(\"[POST]::/payments - Content check if 'mandate_data' exists\", function() {","   pm.expect((typeof jsonData.mandate_data !== \"undefined\")).to.be.true;","});","","// Response body should have \"payment_method_data\"","pm.test(\"[POST]::/payments - Content check if 'payment_method_data' exists\", function() {","   pm.expect((typeof jsonData.payment_method_data !== \"undefined\")).to.be.true;","});",""],"type":"text/javascript"}}],"id":"1b81cdf6-fe96-41f4-b823-523a0a6c8cb0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6570,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"mandate_id\" : \"{{mandate_id}}\",\n    \"off_session\" : true,\n     \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-1b81cdf6-fe96-41f4-b823-523a0a6c8cb0"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","","};","","","// Response body should have value \"Succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have \"mandate_id\"","pm.test(\"[POST]::/payments - Content check if 'mandate_id' exists\", function() {","   pm.expect((typeof jsonData.mandate_id !== \"undefined\")).to.be.true;","});","","// Response body should have \"mandate_data\"","pm.test(\"[POST]::/payments - Content check if 'mandate_data' exists\", function() {","   pm.expect((typeof jsonData.mandate_data !== \"undefined\")).to.be.true;","});"],"type":"text/javascript"}}],"id":"52251144-6ad7-4e5b-ae2d-20dc40884f64","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-52251144-6ad7-4e5b-ae2d-20dc40884f64"},{"name":"Refunds - Create Copy","event":[{"listen":"test","script":{"id":"e6abd926-8c58-4e42-8186-59e4781222c4","exec":["// Validate status 2xx ","pm.test(\"[POST]::/refunds - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/refunds - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"6540\" for \"amount\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'amount' matches '6540'\", function() {","  pm.expect(jsonData.amount).to.eql(6540);","})};",""],"type":"text/javascript"}}],"id":"7c2be340-9e0e-400f-9186-f8bf0d3a3bcc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"payment_id\": \"{{payment_id}}\",\n    \"amount\": 6540,\n    \"reason\": \"Customer returned product\",\n    \"refund_type\": \"instant\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/refunds","host":["{{baseUrl}}"],"path":["refunds"]},"description":"To create a refund againt an already processed payment"},"response":[],"uid":"25176183-7c2be340-9e0e-400f-9186-f8bf0d3a3bcc"},{"name":"Refunds - Retrieve Copy","event":[{"listen":"test","script":{"id":"555758ee-7b7c-4f33-976e-d984b67f7005","exec":["// Validate status 2xx ","pm.test(\"[GET]::/refunds/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/refunds/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"6540\" for \"amount\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'amount' matches '6540'\", function() {","  pm.expect(jsonData.amount).to.eql(6540);","})};",""],"type":"text/javascript"}}],"id":"b181dcf5-b084-400a-b296-80628cb4f746","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/refunds/:id","host":["{{baseUrl}}"],"path":["refunds",":id"],"variable":[{"id":"ce571b93-f124-4af4-b50d-00514b23869a","key":"id","value":"{{refund_id}}","description":"(Required) unique refund id"}]},"description":"To retrieve the properties of a Refund. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-b181dcf5-b084-400a-b296-80628cb4f746"}],"id":"9de86dec-8f9b-4e10-9010-b401e7b3e24e","uid":"25176183-9de86dec-8f9b-4e10-9010-b401e7b3e24e"},{"name":"Scenario12-Create Wallet redirection","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_payment_method\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'requires_payment_method'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_payment_method\");","})};",""],"type":"text/javascript"}}],"id":"58185e37-4001-4319-82ce-72e3f604b4f0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 180000,\n    \"currency\": \"USD\",\n    \"confirm\": false,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-58185e37-4001-4319-82ce-72e3f604b4f0"},{"name":"Payments - Confirm","event":[{"listen":"test","script":{"id":"1c7a5f0b-2b3d-420e-90f1-2e8b549c6d39","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments/:id/confirm - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id/confirm - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id/confirm - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_customer_action\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id/confirm - Content check if value for 'status' matches 'requires_customer_action'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_customer_action\");","})};","","","// Response body should have \"next_action.redirect_to_url\"","pm.test(\"[POST]::/payments - Content check if 'next_action.redirect_to_url' exists\", function() {","   pm.expect((typeof jsonData.next_action.redirect_to_url !== \"undefined\")).to.be.true;","});"],"type":"text/javascript"}}],"id":"0345d02e-6499-49a0-a423-14586eaa47fe","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":" {\"payment_method\": \"wallet\",\n    \"payment_method_type\": \"paypal\",\n    \"payment_method_data\": {\n        \"wallet\": {\n            \"paypal_redirect\": {}\n        }\n    }}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id/confirm","host":["{{baseUrl}}"],"path":["payments",":id","confirm"],"variable":[{"id":"43f587c4-a6b9-4d7a-989f-7813220ef24d","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"This API is to confirm the payment request and foward payment to the payment processor. This API provides more granular control upon when the API is forwarded to the payment processor. Alternatively you can confirm the payment within the Payments-Create API"},"response":[],"uid":"25176183-0345d02e-6499-49a0-a423-14586eaa47fe"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments:id - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};"],"type":"text/javascript"}}],"id":"16f76225-1501-491f-ac1b-8a5d54c92091","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-16f76225-1501-491f-ac1b-8a5d54c92091"},{"name":"Refunds - Create","event":[{"listen":"test","script":{"id":"e6abd926-8c58-4e42-8186-59e4781222c4","exec":["// Validate status 2xx ","pm.test(\"[POST]::/refunds - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/refunds - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"6540\" for \"amount\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'amount' matches '180000'\", function() {","  pm.expect(jsonData.amount).to.eql(180000);","})};",""],"type":"text/javascript"}}],"id":"1ab97177-3ebd-4c9a-8562-6c00bbed5a17","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"payment_id\": \"{{payment_id}}\",\n    \"amount\": 180000,\n    \"reason\": \"Customer returned product\",\n    \"refund_type\": \"instant\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/refunds","host":["{{baseUrl}}"],"path":["refunds"]},"description":"To create a refund againt an already processed payment"},"response":[],"uid":"25176183-1ab97177-3ebd-4c9a-8562-6c00bbed5a17"},{"name":"Refunds - Retrieve","event":[{"listen":"test","script":{"id":"555758ee-7b7c-4f33-976e-d984b67f7005","exec":["// Validate status 2xx ","pm.test(\"[GET]::/refunds/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/refunds/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"6540\" for \"amount\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'amount' matches '180000'\", function() {","  pm.expect(jsonData.amount).to.eql(180000);","})};",""],"type":"text/javascript"}}],"id":"9fe8076a-2c32-41f7-8a21-a2db6f8dd969","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/refunds/:id","host":["{{baseUrl}}"],"path":["refunds",":id"],"variable":[{"id":"ce571b93-f124-4af4-b50d-00514b23869a","key":"id","value":"{{refund_id}}","description":"(Required) unique refund id"}]},"description":"To retrieve the properties of a Refund. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-9fe8076a-2c32-41f7-8a21-a2db6f8dd969"}],"id":"5a8b7310-cc68-4038-8fcb-1e4912ea392e","uid":"25176183-5a8b7310-cc68-4038-8fcb-1e4912ea392e"},{"name":"Scenario13-BNPL flow","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_payment_method\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'requires_payment_method'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_payment_method\");","})};",""],"type":"text/javascript"}}],"id":"fc4a95a0-4673-4465-88e6-27c3d6c25f37","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 180000,\n    \"currency\": \"USD\",\n    \"confirm\": false,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"payment_method\": \"pay_later\",\n    \"payment_method_data\": {\n        \"pay_later\": {\n            \"klarna_redirect\": {\n                \"issuer_name\": \"stripe\",\n                \"billing_email\": \"arjun.karthik@juspay.in\",\n                \"billing_country\": \"US\"\n            }\n        }\n    }\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-fc4a95a0-4673-4465-88e6-27c3d6c25f37"},{"name":"Payments - Confirm","event":[{"listen":"test","script":{"id":"1c7a5f0b-2b3d-420e-90f1-2e8b549c6d39","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments/:id/confirm - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id/confirm - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id/confirm - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_customer_action\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id/confirm - Content check if value for 'status' matches 'requires_customer_action'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_customer_action\");","})};","","","// Response body should have \"next_action.redirect_to_url\"","pm.test(\"[POST]::/payments - Content check if 'next_action.redirect_to_url' exists\", function() {","   pm.expect((typeof jsonData.next_action.redirect_to_url !== \"undefined\")).to.be.true;","});"],"type":"text/javascript"}}],"id":"2e3a88ff-4e66-49d0-99ba-a0e71c8120a4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"payment_method\": \"pay_later\",\n    \"payment_method_data\": {\n        \"pay_later\": {\n            \"klarna_redirect\": {\n                \"issuer_name\": \"stripe\",\n                \"billing_email\": \"arjun.karthik@juspay.in\",\n                \"billing_country\": \"US\"\n            }\n        }\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id/confirm","host":["{{baseUrl}}"],"path":["payments",":id","confirm"],"variable":[{"id":"43f587c4-a6b9-4d7a-989f-7813220ef24d","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"This API is to confirm the payment request and foward payment to the payment processor. This API provides more granular control upon when the API is forwarded to the payment processor. Alternatively you can confirm the payment within the Payments-Create API"},"response":[],"uid":"25176183-2e3a88ff-4e66-49d0-99ba-a0e71c8120a4"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments:id - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};"],"type":"text/javascript"}}],"id":"e4771b89-b331-4f20-b03c-703dddcc5a06","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-e4771b89-b331-4f20-b03c-703dddcc5a06"},{"name":"Refunds - Create","event":[{"listen":"test","script":{"id":"e6abd926-8c58-4e42-8186-59e4781222c4","exec":["// Validate status 2xx ","pm.test(\"[POST]::/refunds - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/refunds - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"6540\" for \"amount\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'amount' matches '180000'\", function() {","  pm.expect(jsonData.amount).to.eql(180000);","})};",""],"type":"text/javascript"}}],"id":"f52fd9c8-72d0-48dd-a7c1-ddefd37427b9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"payment_id\": \"{{payment_id}}\",\n    \"amount\": 180000,\n    \"reason\": \"Customer returned product\",\n    \"refund_type\": \"instant\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/refunds","host":["{{baseUrl}}"],"path":["refunds"]},"description":"To create a refund againt an already processed payment"},"response":[],"uid":"25176183-f52fd9c8-72d0-48dd-a7c1-ddefd37427b9"},{"name":"Refunds - Retrieve","event":[{"listen":"test","script":{"id":"555758ee-7b7c-4f33-976e-d984b67f7005","exec":["// Validate status 2xx ","pm.test(\"[GET]::/refunds/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/refunds/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"6540\" for \"amount\"","if (jsonData?.status) {","pm.test(\"[POST]::/refunds - Content check if value for 'amount' matches '180000'\", function() {","  pm.expect(jsonData.amount).to.eql(180000);","})};",""],"type":"text/javascript"}}],"id":"e4794fa6-bb70-4358-aa50-27d90eccf3a9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/refunds/:id","host":["{{baseUrl}}"],"path":["refunds",":id"],"variable":[{"id":"ce571b93-f124-4af4-b50d-00514b23869a","key":"id","value":"{{refund_id}}","description":"(Required) unique refund id"}]},"description":"To retrieve the properties of a Refund. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-e4794fa6-bb70-4358-aa50-27d90eccf3a9"}],"id":"4abc766d-f681-4f47-9b30-152f382dd516","uid":"25176183-4abc766d-f681-4f47-9b30-152f382dd516"}],"id":"0ed73589-f548-4f4b-8bc7-3e177323c27d","uid":"25176183-0ed73589-f548-4f4b-8bc7-3e177323c27d"},{"name":"Variation Cases","item":[{"name":"Scenario1-Create payment with Invalid card details","item":[{"name":"Payments - Create(Invalid card number)","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 4xx ","pm.test(\"[POST]::/payments - Status code is 4xx\", function () {","   pm.response.to.be.error;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","","// Response body should have \"error\"","pm.test(\"[POST]::/payments - Content check if 'error' exists\", function() {","   pm.expect((typeof jsonData.error !== \"undefined\")).to.be.true;","});","","// Response body should have value \"connector error\" for \"error type\"","if (jsonData?.error?.type) {","pm.test(\"[POST]::/payments - Content check if value for 'error.type' matches 'connector_error'\", function() {","  pm.expect(jsonData.error.type).to.eql(\"connector_error\");","})};"],"type":"text/javascript"}}],"id":"6d68b331-f7be-426c-8d7c-07105db854cf","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"123456\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n     \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"united states\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"united states\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-6d68b331-f7be-426c-8d7c-07105db854cf"},{"name":"Payments - Create(Invalid Exp month)","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 4xx ","pm.test(\"[POST]::/payments - Status code is 4xx\", function () {","   pm.response.to.be.error;","});","","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","","// Response body should have \"next_action.redirect_to_url\"","pm.test(\"[POST]::/payments - Content check if 'error' exists\", function() {","   pm.expect((typeof jsonData.error !== \"undefined\")).to.be.true;","});","","// Response body should have value \"connector error\" for \"error type\"","if (jsonData?.error?.type) {","pm.test(\"[POST]::/payments - Content check if value for 'error.type' matches 'connector'\", function() {","  pm.expect(jsonData.error.type).to.eql(\"connector\");","})};"],"type":"text/javascript"}}],"id":"959d69e3-4d26-4027-993a-a0b59d24b2d8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"01\",\n            \"card_exp_year\": \"2023\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n    \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-959d69e3-4d26-4027-993a-a0b59d24b2d8"},{"name":"Payments - Create(Invalid Exp Year)","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 4xx ","pm.test(\"[POST]::/payments - Status code is 4xx\", function () {","   pm.response.to.be.error;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have \"next_action.redirect_to_url\"","pm.test(\"[POST]::/payments - Content check if 'error' exists\", function() {","   pm.expect((typeof jsonData.error !== \"undefined\")).to.be.true;","});","","// Response body should have value \"connector error\" for \"error type\"","if (jsonData?.error?.type) {","pm.test(\"[POST]::/payments - Content check if value for 'error.type' matches 'connector'\", function() {","  pm.expect(jsonData.error.type).to.eql(\"connector\");","})};"],"type":"text/javascript"}}],"id":"6163f5f9-7457-4bb5-b8fd-f8c0368801a8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"2022\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n     \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-6163f5f9-7457-4bb5-b8fd-f8c0368801a8"},{"name":"Payments - Create(invalid CVV)","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 4xx ","pm.test(\"[POST]::/payments - Status code is 4xx\", function () {","   pm.response.to.be.error;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","","// Response body should have \"error\"","pm.test(\"[POST]::/payments - Content check if 'error' exists\", function() {","   pm.expect((typeof jsonData.error !== \"undefined\")).to.be.true;","});","","// Response body should have value \"connector error\" for \"error type\"","if (jsonData?.error?.type) {","pm.test(\"[POST]::/payments - Content check if value for 'error.type' matches 'connector'\", function() {","  pm.expect(jsonData.error.type).to.eql(\"connector\");","})};"],"type":"text/javascript"}}],"id":"9f2e5a30-4f1f-49bb-9b58-73326fd884ed","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"123456\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"12345\"\n        }\n    },\n      \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-9f2e5a30-4f1f-49bb-9b58-73326fd884ed"}],"id":"c3366e7b-45e4-4377-af8b-2a4e0df9242e","uid":"25176183-c3366e7b-45e4-4377-af8b-2a4e0df9242e"},{"name":"Scenario2-Confirming the payment without PMD","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_payment_method\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'requires_payment_method'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_payment_method\");","})};",""],"type":"text/javascript"}}],"id":"c6f5dcef-3e0f-42c4-914e-1b3a559be82b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": false,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n     \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-c6f5dcef-3e0f-42c4-914e-1b3a559be82b"},{"name":"Payments - Confirm","event":[{"listen":"test","script":{"id":"1c7a5f0b-2b3d-420e-90f1-2e8b549c6d39","exec":["// Validate status 4xx ","pm.test(\"[POST]::/payments - Status code is 4xx\", function () {","   pm.response.to.be.error;","});","","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id/confirm - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id/confirm - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have \"error\"","pm.test(\"[POST]::/payments/:id/confirm - Content check if 'error' exists\", function() {","   pm.expect((typeof jsonData.error !== \"undefined\")).to.be.true;","});","","// Response body should have value \"connector error\" for \"error type\"","if (jsonData?.error?.type) {","pm.test(\"[POST]::/payments/:id/confirm - Content check if value for 'error.type' matches 'invalid_request'\", function() {","  pm.expect(jsonData.error.type).to.eql(\"invalid_request\");","})};"],"type":"text/javascript"}}],"id":"d982cdfb-f64f-45f0-b78b-9a16425f0e38","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":" {}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id/confirm","host":["{{baseUrl}}"],"path":["payments",":id","confirm"],"variable":[{"id":"43f587c4-a6b9-4d7a-989f-7813220ef24d","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"This API is to confirm the payment request and foward payment to the payment processor. This API provides more granular control upon when the API is forwarded to the payment processor. Alternatively you can confirm the payment within the Payments-Create API"},"response":[],"uid":"25176183-d982cdfb-f64f-45f0-b78b-9a16425f0e38"}],"id":"9342d744-d65a-43df-9198-d55821fcd6b0","uid":"25176183-9342d744-d65a-43df-9198-d55821fcd6b0"},{"name":"Scenario3-Capture greater amount","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_capture\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'requires_capture'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_capture\");","})};","",""],"type":"text/javascript"}}],"id":"366957d2-f48c-4e93-ac78-9d997d015505","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"manual\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n      \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-366957d2-f48c-4e93-ac78-9d997d015505"},{"name":"Payments - Capture","event":[{"listen":"test","script":{"id":"c412734a-32f7-4be6-aa3f-deface0aeb32","exec":["// Validate status 4xx ","pm.test(\"[POST]::/payments/:id/capture - Status code is 4xx\", function () {","   pm.response.to.be.error;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id/capture - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id/capture - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have \"error\"","pm.test(\"[POST]::/payments/:id/confirm - Content check if 'error' exists\", function() {","   pm.expect((typeof jsonData.error !== \"undefined\")).to.be.true;","});","","// Response body should have value \"connector error\" for \"error type\"","if (jsonData?.error?.type) {","pm.test(\"[POST]::/payments/:id/confirm - Content check if value for 'error.type' matches 'invalid_request'\", function() {","  pm.expect(jsonData.error.type).to.eql(\"invalid_request\");","})};","","","",""],"type":"text/javascript"}}],"id":"706a1ade-8bb7-49e2-9c31-86e70517cdf2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"amount_to_capture\": 7000,\n  \"statement_descriptor_name\": \"Joseph\",\n  \"statement_descriptor_suffix\": \"JS\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id/capture","host":["{{baseUrl}}"],"path":["payments",":id","capture"],"variable":[{"id":"a5ba124f-a12a-4773-afb3-cf8a94ee8c4f","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To capture the funds for an uncaptured payment"},"response":[],"uid":"25176183-706a1ade-8bb7-49e2-9c31-86e70517cdf2"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","","// Response body should have value \"requires_capture\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'requires_capture'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_capture\");","})};"],"type":"text/javascript"}}],"id":"f37d0597-97c5-49f1-bd25-434de03632fb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-f37d0597-97c5-49f1-bd25-434de03632fb"}],"id":"0927ac71-6c06-4842-8759-ef61d5f4ce90","uid":"25176183-0927ac71-6c06-4842-8759-ef61d5f4ce90"},{"name":"Scenario4-Capture the succeeded payment","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","",""],"type":"text/javascript"}}],"id":"fceedf72-29c5-4b9c-9103-6945f86414c0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n     \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-fceedf72-29c5-4b9c-9103-6945f86414c0"},{"name":"Payments - Capture","event":[{"listen":"test","script":{"id":"c412734a-32f7-4be6-aa3f-deface0aeb32","exec":["// Validate status 4xx ","pm.test(\"[POST]::/payments/:id/capture - Status code is 4xx\", function () {","   pm.response.to.be.error;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id/capture - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id/capture - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have \"error\"","pm.test(\"[POST]::/payments/:id/confirm - Content check if 'error' exists\", function() {","   pm.expect((typeof jsonData.error !== \"undefined\")).to.be.true;","});","","// Response body should have value \"connector error\" for \"error type\"","if (jsonData?.error?.type) {","pm.test(\"[POST]::/payments/:id/confirm - Content check if value for 'error.type' matches 'invalid_request'\", function() {","  pm.expect(jsonData.error.type).to.eql(\"invalid_request\");","})};","","","",""],"type":"text/javascript"}}],"id":"95ada6af-5066-43c1-851a-d7624c9770ce","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"amount_to_capture\": 7000,\n  \"statement_descriptor_name\": \"Joseph\",\n  \"statement_descriptor_suffix\": \"JS\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id/capture","host":["{{baseUrl}}"],"path":["payments",":id","capture"],"variable":[{"id":"a5ba124f-a12a-4773-afb3-cf8a94ee8c4f","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To capture the funds for an uncaptured payment"},"response":[],"uid":"25176183-95ada6af-5066-43c1-851a-d7624c9770ce"}],"id":"bed53d34-17a6-4f02-8b28-bc09e74b541d","uid":"25176183-bed53d34-17a6-4f02-8b28-bc09e74b541d"},{"name":"Scenario5-Void the success/failure payment","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","",""],"type":"text/javascript"}}],"id":"391edc84-1607-4659-af69-d0c011047c4b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n     \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-391edc84-1607-4659-af69-d0c011047c4b"},{"name":"Payments - Cancel","event":[{"listen":"test","script":{"id":"fff28ef6-694d-4f0c-ae47-bc3f157ce296","exec":["// Validate status 4xx ","pm.test(\"[POST]::/payments/:id/cancel - Status code is 4xx\", function () {","   pm.response.to.be.error;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id/cancel - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id/cancel - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have \"error\"","pm.test(\"[POST]::/payments/:id/confirm - Content check if 'error' exists\", function() {","   pm.expect((typeof jsonData.error !== \"undefined\")).to.be.true;","});","","// Response body should have value \"connector error\" for \"error type\"","if (jsonData?.error?.type) {","pm.test(\"[POST]::/payments/:id/confirm - Content check if value for 'error.type' matches 'invalid_request'\", function() {","  pm.expect(jsonData.error.type).to.eql(\"invalid_request\");","})};","","","","","",""],"type":"text/javascript"}}],"id":"c6f8608f-0916-4e62-846e-d50c02cda79d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"cancellation_reason\": \"requested_by_customer\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id/cancel","host":["{{baseUrl}}"],"path":["payments",":id","cancel"],"variable":[{"id":"7f388eed-14aa-4aea-9bae-b638efffa2dd","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"A Payment could can be cancelled when it is in one of these statuses: requires_payment_method, requires_capture, requires_confirmation, requires_customer_action"},"response":[],"uid":"25176183-c6f8608f-0916-4e62-846e-d50c02cda79d"}],"id":"ec94d2b2-eb4e-423f-b95c-ba0d1ced7424","uid":"25176183-ec94d2b2-eb4e-423f-b95c-ba0d1ced7424"},{"name":"Scenario6-Create 3DS payment with greater capture","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_customer_action\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'requires_customer_action'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_customer_action\");","})};","","// Response body should have \"next_action.redirect_to_url\"","pm.test(\"[POST]::/payments - Content check if 'next_action.redirect_to_url' exists\", function() {","   pm.expect((typeof jsonData.next_action.redirect_to_url !== \"undefined\")).to.be.true;","});","",""],"type":"text/javascript"}}],"id":"a29cc40b-2b75-4231-ad1f-36161f0439fa","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"manual\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4000000000003063\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n     \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-a29cc40b-2b75-4231-ad1f-36161f0439fa"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","","// Response body should have value \"requires_customer_action\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id - Content check if value for 'status' matches 'requires_customer_action'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_customer_action\");","})};"],"type":"text/javascript"}}],"id":"67b67601-cf58-4d72-8123-c2f64ef964e5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-67b67601-cf58-4d72-8123-c2f64ef964e5"},{"name":"Payments - Capture","event":[{"listen":"test","script":{"id":"c412734a-32f7-4be6-aa3f-deface0aeb32","exec":["// Validate status 4xx ","pm.test(\"[POST]::/payments/:id/capture - Status code is 4xx\", function () {","   pm.response.to.be.error;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments/:id/capture - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments/:id/capture - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have \"error\"","pm.test(\"[POST]::/payments/:id/confirm - Content check if 'error' exists\", function() {","   pm.expect((typeof jsonData.error !== \"undefined\")).to.be.true;","});","","// Response body should have value \"connector error\" for \"error type\"","if (jsonData?.error?.type) {","pm.test(\"[POST]::/payments/:id/confirm - Content check if value for 'error.type' matches 'invalid_request'\", function() {","  pm.expect(jsonData.error.type).to.eql(\"invalid_request\");","})};","","","","","",""],"type":"text/javascript"}}],"id":"c74290db-ee1c-4411-846d-a6db092aa6d0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"amount_to_capture\": 7540,\n  \"statement_descriptor_name\": \"Joseph\",\n  \"statement_descriptor_suffix\": \"JS\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments/:id/capture","host":["{{baseUrl}}"],"path":["payments",":id","capture"],"variable":[{"id":"a5ba124f-a12a-4773-afb3-cf8a94ee8c4f","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To capture the funds for an uncaptured payment"},"response":[],"uid":"25176183-c74290db-ee1c-4411-846d-a6db092aa6d0"}],"id":"13746b28-667e-4998-aa7a-84b54deb7639","uid":"25176183-13746b28-667e-4998-aa7a-84b54deb7639"},{"name":"Scenario7-Refund exceeds amount","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","",""],"type":"text/javascript"}}],"id":"2eb25786-36cb-4fc3-9dac-e7b27509825b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n     \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-2eb25786-36cb-4fc3-9dac-e7b27509825b"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","","};","","","// Response body should have value \"Succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};",""],"type":"text/javascript"}}],"id":"3f15c1ba-6df3-46a5-8660-391152ae6361","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-3f15c1ba-6df3-46a5-8660-391152ae6361"},{"name":"Refunds - Create","event":[{"listen":"test","script":{"id":"e6abd926-8c58-4e42-8186-59e4781222c4","exec":["// Validate status 4xx ","pm.test(\"[POST]::/refunds - Status code is 4xx\", function () {","   pm.response.to.be.error;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/refunds - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};","","// Response body should have \"error\"","pm.test(\"[POST]::/payments/:id/confirm - Content check if 'error' exists\", function() {","   pm.expect((typeof jsonData.error !== \"undefined\")).to.be.true;","});","","// Response body should have value \"connector error\" for \"error type\"","if (jsonData?.error?.type) {","pm.test(\"[POST]::/payments/:id/confirm - Content check if value for 'error.type' matches 'invalid_request'\", function() {","  pm.expect(jsonData.error.type).to.eql(\"invalid_request\");","})};","",""],"type":"text/javascript"}}],"id":"32f0910b-22e5-4360-ba60-42dbc1d7b396","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"payment_id\": \"{{payment_id}}\",\n    \"amount\": 7000,\n    \"reason\": \"Customer returned product\",\n    \"refund_type\": \"instant\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/refunds","host":["{{baseUrl}}"],"path":["refunds"]},"description":"To create a refund againt an already processed payment"},"response":[],"uid":"25176183-32f0910b-22e5-4360-ba60-42dbc1d7b396"}],"id":"5b7a7b8d-20a8-44fa-a064-2d7474e734f3","uid":"25176183-5b7a7b8d-20a8-44fa-a064-2d7474e734f3"},{"name":"Scenario8-Refund for unsuccessfull payment","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"requires_confirmation\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'requires_confirmation'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_confirmation\");","})};","","",""],"type":"text/javascript"}}],"id":"78213e79-5c83-4056-85b4-f57ad14a875a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": false,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n      \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-78213e79-5c83-4056-85b4-f57ad14a875a"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","","};","","","// Response body should have value \"requires_confirmation\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id - Content check if value for 'status' matches 'requires_confirmation'\", function() {","  pm.expect(jsonData.status).to.eql(\"requires_confirmation\");","})};",""],"type":"text/javascript"}}],"id":"4469906e-f532-4982-a5ef-1cdd08bc1eb7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-4469906e-f532-4982-a5ef-1cdd08bc1eb7"},{"name":"Refunds - Create","event":[{"listen":"test","script":{"id":"e6abd926-8c58-4e42-8186-59e4781222c4","exec":["// Validate status 4xx ","pm.test(\"[POST]::/refunds - Status code is 4xx\", function () {","   pm.response.to.be.error;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/refunds - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set refund_id as variable for jsonData.payment_id","if (jsonData?.refund_id) {","   pm.collectionVariables.set(\"refund_id\", jsonData.refund_id);","   console.log(\"- use {{refund_id}} as collection variable for value\",jsonData.refund_id);","} else {","   console.log('INFO - Unable to assign variable {{refund_id}}, as jsonData.refund_id is undefined.');","};","","// Response body should have \"error\"","pm.test(\"[POST]::/payments/:id/confirm - Content check if 'error' exists\", function() {","   pm.expect((typeof jsonData.error !== \"undefined\")).to.be.true;","});","","// Response body should have value \"invalid_request\" for \"error type\"","if (jsonData?.error?.type) {","pm.test(\"[POST]::/payments/:id/confirm - Content check if value for 'error.type' matches 'invalid_request'\", function() {","  pm.expect(jsonData.error.type).to.eql(\"invalid_request\");","})};",""],"type":"text/javascript"}}],"id":"edae45b0-ae0c-452a-ac1a-a3401071581b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"payment_id\": \"{{payment_id}}\",\n    \"amount\": 540,\n    \"reason\": \"Customer returned product\",\n    \"refund_type\": \"instant\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/refunds","host":["{{baseUrl}}"],"path":["refunds"]},"description":"To create a refund againt an already processed payment"},"response":[],"uid":"25176183-edae45b0-ae0c-452a-ac1a-a3401071581b"}],"id":"c5e7ca75-ba8e-4ffd-aa53-f5feaa2b8624","uid":"25176183-c5e7ca75-ba8e-4ffd-aa53-f5feaa2b8624"},{"name":"Scenario9-Create a recurring payment with greater mandate amount","item":[{"name":"Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 2xx ","pm.test(\"[POST]::/payments - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have value \"succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have \"mandate_id\"","pm.test(\"[POST]::/payments - Content check if 'mandate_id' exists\", function() {","   pm.expect((typeof jsonData.mandate_id !== \"undefined\")).to.be.true;","});","","// Response body should have \"mandate_data\"","pm.test(\"[POST]::/payments - Content check if 'mandate_data' exists\", function() {","   pm.expect((typeof jsonData.mandate_data !== \"undefined\")).to.be.true;","});",""],"type":"text/javascript"}}],"id":"68709bf7-3c15-4ea1-99c2-fc62d2369992","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 6540,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"payment_method\": \"card\",\n    \"payment_method_data\": {\n        \"card\": {\n            \"card_number\": \"4242424242424242\",\n            \"card_exp_month\": \"10\",\n            \"card_exp_year\": \"25\",\n            \"card_holder_name\": \"joseph Doe\",\n            \"card_cvc\": \"123\"\n        }\n    },\n    \"setup_future_usage\": \"off_session\",\n    \"mandate_data\": {\n        \"customer_acceptance\": {\n            \"acceptance_type\": \"offline\",\n            \"accepted_at\": \"1963-05-03T04:07:52.723Z\",\n            \"online\": {\n                \"ip_address\": \"127.0.0.1\",\n                \"user_agent\": \"amet irure esse\"\n            }\n        },\n        \"mandate_type\": {\n            \"single_use\": {\n                \"amount\": 7000,\n                \"currency\": \"USD\"\n            }\n        }\n    },\n     \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-68709bf7-3c15-4ea1-99c2-fc62d2369992"},{"name":"Payments - Retrieve","event":[{"listen":"test","script":{"id":"0bce2730-6cf1-43ee-857e-c2b711ff0a18","exec":["// Validate status 2xx ","pm.test(\"[GET]::/payments/:id - Status code is 2xx\", function () {","   pm.response.to.be.success;","});","","// Validate if response header has matching content-type","pm.test(\"[GET]::/payments/:id - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[GET]::/payments/:id - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","","};","","","// Response body should have value \"Succeeded\" for \"status\"","if (jsonData?.status) {","pm.test(\"[POST]::/payments/:id - Content check if value for 'status' matches 'succeeded'\", function() {","  pm.expect(jsonData.status).to.eql(\"succeeded\");","})};","","// Response body should have \"mandate_id\"","pm.test(\"[POST]::/payments - Content check if 'mandate_id' exists\", function() {","   pm.expect((typeof jsonData.mandate_id !== \"undefined\")).to.be.true;","});","","// Response body should have \"mandate_data\"","pm.test(\"[POST]::/payments - Content check if 'mandate_data' exists\", function() {","   pm.expect((typeof jsonData.mandate_data !== \"undefined\")).to.be.true;","});"],"type":"text/javascript"}}],"id":"ac02210c-5610-46e3-8f8a-f1c9fe05f14f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"}],"url":{"raw":"{{baseUrl}}/payments/:id?force_sync=true","host":["{{baseUrl}}"],"path":["payments",":id"],"query":[{"key":"force_sync","value":"true"}],"variable":[{"id":"1f2f1e63-0368-45aa-84a0-778f6903d18e","key":"id","value":"{{payment_id}}","description":"(Required) unique payment id"}]},"description":"To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment"},"response":[],"uid":"25176183-ac02210c-5610-46e3-8f8a-f1c9fe05f14f"},{"name":"Recurring Payments - Create","event":[{"listen":"test","script":{"id":"967c1664-965f-4450-8445-68471ce4b829","exec":["// Validate status 4xx ","pm.test(\"[POST]::/payments - Status code is 4xx\", function () {","   pm.response.to.be.error;","});","","// Validate if response header has matching content-type","pm.test(\"[POST]::/payments - Content-Type is application/json\", function () {","   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");","});","","// Validate if response has JSON Body ","pm.test(\"[POST]::/payments - Response has JSON Body\", function () {","    pm.response.to.have.jsonBody();","});","","// Set response object as internal variable","let jsonData = {};","try {jsonData = pm.response.json();}catch(e){}","","// pm.collectionVariables - Set payment_id as variable for jsonData.payment_id","if (jsonData?.payment_id) {","   pm.collectionVariables.set(\"payment_id\", jsonData.payment_id);","   console.log(\"- use {{payment_id}} as collection variable for value\",jsonData.payment_id);","} else {","   console.log('INFO - Unable to assign variable {{payment_id}}, as jsonData.payment_id is undefined.');","};","","","// pm.collectionVariables - Set mandate_id as variable for jsonData.mandate_id","if (jsonData?.mandate_id) {","   pm.collectionVariables.set(\"mandate_id\", jsonData.mandate_id);","   console.log(\"- use {{mandate_id}} as collection variable for value\",jsonData.mandate_id);","} else {","   console.log('INFO - Unable to assign variable {{mandate_id}}, as jsonData.mandate_id is undefined.');","};","","// pm.collectionVariables - Set client_secret as variable for jsonData.client_secret","if (jsonData?.client_secret) {","   pm.collectionVariables.set(\"client_secret\", jsonData.client_secret);","   console.log(\"- use {{client_secret}} as collection variable for value\",jsonData.client_secret);","} else {","   console.log('INFO - Unable to assign variable {{client_secret}}, as jsonData.client_secret is undefined.');","};","","// Response body should have \"error\"","pm.test(\"[POST]::/payments/:id/confirm - Content check if 'error' exists\", function() {","   pm.expect((typeof jsonData.error !== \"undefined\")).to.be.true;","});","","// Response body should have value \"invalid_request\" for \"error type\"","if (jsonData?.error?.type) {","pm.test(\"[POST]::/payments/:id/confirm - Content check if value for 'error.type' matches 'invalid_request'\", function() {","  pm.expect(jsonData.error.type).to.eql(\"invalid_request\");","})};","","",""],"type":"text/javascript"}}],"id":"2874c359-1e4b-4a83-abb1-9237dea1fe9b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"amount\": 8040,\n    \"currency\": \"USD\",\n    \"confirm\": true,\n    \"capture_method\": \"automatic\",\n    \"capture_on\": \"2022-09-10T10:11:12Z\",\n    \"amount_to_capture\": 6540,\n    \"customer_id\": \"StripeCustomer\",\n    \"email\": \"guest@example.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"999999999\",\n    \"phone_country_code\": \"+65\",\n    \"description\": \"Its my first payment request\",\n    \"authentication_type\": \"no_three_ds\",\n    \"return_url\": \"https://google.com\",\n    \"mandate_id\" : \"{{mandate_id}}\",\n    \"off_session\" : true,\n    \"billing\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"shipping\": {\n        \"address\": {\n            \"line1\": \"1467\",\n            \"line2\": \"Harrison Street\",\n            \"line3\": \"Harrison Street\",\n            \"city\": \"San Fransico\",\n            \"state\": \"California\",\n            \"zip\": \"94122\",\n            \"country\": \"US\",\n            \"first_name\": \"sundari\"\n        }\n    },\n    \"statement_descriptor_name\": \"joseph\",\n    \"statement_descriptor_suffix\": \"JS\",\n    \"metadata\": {\n        \"udf1\": \"value1\",\n        \"new_customer\": \"true\",\n        \"login_date\": \"2019-09-10T10:11:12Z\"\n    }\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{baseUrl}}/payments","host":["{{baseUrl}}"],"path":["payments"]},"description":"To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture"},"response":[],"uid":"25176183-2874c359-1e4b-4a83-abb1-9237dea1fe9b"}],"id":"c8962834-5eeb-4ae5-9058-0b21f62bc2e5","uid":"25176183-c8962834-5eeb-4ae5-9058-0b21f62bc2e5"}],"id":"f128987e-fbc2-40b3-9a2f-9228be46fe67","uid":"25176183-f128987e-fbc2-40b3-9a2f-9228be46fe67"}],"id":"57691c74-94ac-4183-be50-81d5e73c5a78","uid":"25176183-57691c74-94ac-4183-be50-81d5e73c5a78"}],"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{api_key}}","type":"string"},{"key":"key","value":"api-key","type":"string"},{"key":"in","value":"header","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"06f24911-0fae-4b21-8169-524ed1ff0ce6","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"b470bcb1-75a0-4d4c-ae7d-360ff9b240fe","type":"text/javascript","exec":[""]}}],"variable":[{"id":"8aee16a7-0b1c-40b9-86e0-e2b490ebab63","key":"baseUrl","value":"https://sandbox.hyperswitch.io","type":"string"},{"id":"aa144472-ca3f-4fca-b8e1-90a18db8d19e","key":"admin_api_key","value":"","type":"string"},{"id":"aff8bd66-9da2-4779-8e20-cd877bf0c3b1","key":"api_key","value":"","type":"string"},{"id":"17fb51e6-605c-47ef-ae37-879b002efdf1","key":"merchant_id","value":""},{"id":"81dedf26-71f2-4821-b587-2bc6f7162dc8","key":"payment_id","value":""},{"id":"43e61441-093f-430f-a0ca-dbed04c17568","key":"customer_id","value":""},{"id":"f10fe796-58b8-4657-84da-58b10642dd58","key":"mandate_id","value":""},{"id":"38e6890e-8218-4487-8c42-142d317919ca","key":"payment_method_id","value":""},{"id":"8cf4b71f-35eb-4e40-a993-12d62553a1ab","key":"refund_id","value":""},{"id":"f5896ea5-d25a-4e5d-890b-98211fdd537f","key":"merchant_connector_id","value":""},{"id":"b4e6d976-607e-4f1c-8a59-bbd2e7d80eb7","key":"client_secret","value":"","type":"string"},{"id":"feb55550-96f0-40c5-8b6f-eaab3ce323b8","key":"connector_api_key","value":"","type":"string"},{"id":"89813b40-86e2-4a76-9aea-c4801fa5bafb","key":"publishable_key","value":"","type":"string"},{"id":"6dedbe54-0bea-490f-b1e4-f09935b0eb91","key":"api_key_id","value":"","type":"string"},{"id":"244df453-7b38-49dd-91cc-87c57270b9b9","key":"payment_token","value":""}]}}