/*
 * Hyperswitch - API Documentation
 *
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: hyperswitch@juspay.in
 * Generated by: https://openapi-generator.tech
 */

/// BankNames : Name of banks supported by Hyperswitch

/// Name of banks supported by Hyperswitch
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BankNames {
    #[serde(rename = "american_express")]
    AmericanExpress,
    #[serde(rename = "bank_of_america")]
    BankOfAmerica,
    #[serde(rename = "barclays")]
    Barclays,
    #[serde(rename = "blik_p_s_p")]
    BlikPSP,
    #[serde(rename = "capital_one")]
    CapitalOne,
    #[serde(rename = "chase")]
    Chase,
    #[serde(rename = "citi")]
    Citi,
    #[serde(rename = "discover")]
    Discover,
    #[serde(rename = "navy_federal_credit_union")]
    NavyFederalCreditUnion,
    #[serde(rename = "pentagon_federal_credit_union")]
    PentagonFederalCreditUnion,
    #[serde(rename = "synchrony_bank")]
    SynchronyBank,
    #[serde(rename = "wells_fargo")]
    WellsFargo,
    #[serde(rename = "abn_amro")]
    AbnAmro,
    #[serde(rename = "asn_bank")]
    AsnBank,
    #[serde(rename = "bunq")]
    Bunq,
    #[serde(rename = "handelsbanken")]
    Handelsbanken,
    #[serde(rename = "ing")]
    Ing,
    #[serde(rename = "knab")]
    Knab,
    #[serde(rename = "moneyou")]
    Moneyou,
    #[serde(rename = "rabobank")]
    Rabobank,
    #[serde(rename = "regiobank")]
    Regiobank,
    #[serde(rename = "revolut")]
    Revolut,
    #[serde(rename = "sns_bank")]
    SnsBank,
    #[serde(rename = "triodos_bank")]
    TriodosBank,
    #[serde(rename = "van_lanschot")]
    VanLanschot,
    #[serde(rename = "arzte_und_apotheker_bank")]
    ArzteUndApothekerBank,
    #[serde(rename = "austrian_anadi_bank_ag")]
    AustrianAnadiBankAg,
    #[serde(rename = "bank_austria")]
    BankAustria,
    #[serde(rename = "bank99_ag")]
    Bank99Ag,
    #[serde(rename = "bankhaus_carl_spangler")]
    BankhausCarlSpangler,
    #[serde(rename = "bankhaus_schelhammer_und_schattera_ag")]
    BankhausSchelhammerUndSchatteraAg,
    #[serde(rename = "bank_millennium")]
    BankMillennium,
    #[serde(rename = "bank_p_e_k_a_o_s_a")]
    BankPEKAOSA,
    #[serde(rename = "bawag_psk_ag")]
    BawagPskAg,
    #[serde(rename = "bks_bank_ag")]
    BksBankAg,
    #[serde(rename = "brull_kallmus_bank_ag")]
    BrullKallmusBankAg,
    #[serde(rename = "btv_vier_lander_bank")]
    BtvVierLanderBank,
    #[serde(rename = "capital_bank_grawe_gruppe_ag")]
    CapitalBankGraweGruppeAg,
    #[serde(rename = "ceska_sporitelna")]
    CeskaSporitelna,
    #[serde(rename = "dolomitenbank")]
    Dolomitenbank,
    #[serde(rename = "easybank_ag")]
    EasybankAg,
    #[serde(rename = "e_platby_v_u_b")]
    EPlatbyVUB,
    #[serde(rename = "erste_bank_und_sparkassen")]
    ErsteBankUndSparkassen,
    #[serde(rename = "friesland_bank")]
    FrieslandBank,
    #[serde(rename = "hypo_alpeadriabank_international_ag")]
    HypoAlpeadriabankInternationalAg,
    #[serde(rename = "hypo_noe_lb_fur_niederosterreich_u_wien")]
    HypoNoeLbFurNiederosterreichUWien,
    #[serde(rename = "hypo_oberosterreich_salzburg_steiermark")]
    HypoOberosterreichSalzburgSteiermark,
    #[serde(rename = "hypo_tirol_bank_ag")]
    HypoTirolBankAg,
    #[serde(rename = "hypo_vorarlberg_bank_ag")]
    HypoVorarlbergBankAg,
    #[serde(rename = "hypo_bank_burgenland_aktiengesellschaft")]
    HypoBankBurgenlandAktiengesellschaft,
    #[serde(rename = "komercni_banka")]
    KomercniBanka,
    #[serde(rename = "m_bank")]
    MBank,
    #[serde(rename = "marchfelder_bank")]
    MarchfelderBank,
    #[serde(rename = "oberbank_ag")]
    OberbankAg,
    #[serde(rename = "osterreichische_arzte_und_apothekerbank")]
    OsterreichischeArzteUndApothekerbank,
    #[serde(rename = "pay_with_i_n_g")]
    PayWithING,
    #[serde(rename = "place_z_i_p_k_o")]
    PlaceZIPKO,
    #[serde(rename = "platnosc_online_karta_platnicza")]
    PlatnoscOnlineKartaPlatnicza,
    #[serde(rename = "posojilnica_bank_e_gen")]
    PosojilnicaBankEGen,
    #[serde(rename = "postova_banka")]
    PostovaBanka,
    #[serde(rename = "raiffeisen_bankengruppe_osterreich")]
    RaiffeisenBankengruppeOsterreich,
    #[serde(rename = "schelhammer_capital_bank_ag")]
    SchelhammerCapitalBankAg,
    #[serde(rename = "schoellerbank_ag")]
    SchoellerbankAg,
    #[serde(rename = "sparda_bank_wien")]
    SpardaBankWien,
    #[serde(rename = "sporo_pay")]
    SporoPay,
    #[serde(rename = "santander_przelew24")]
    SantanderPrzelew24,
    #[serde(rename = "tatra_pay")]
    TatraPay,
    #[serde(rename = "viamo")]
    Viamo,
    #[serde(rename = "volksbank_gruppe")]
    VolksbankGruppe,
    #[serde(rename = "volkskreditbank_ag")]
    VolkskreditbankAg,
    #[serde(rename = "vr_bank_braunau")]
    VrBankBraunau,
    #[serde(rename = "pay_with_alior_bank")]
    PayWithAliorBank,
    #[serde(rename = "banki_spoldzielcze")]
    BankiSpoldzielcze,
    #[serde(rename = "pay_with_inteligo")]
    PayWithInteligo,
    #[serde(rename = "b_n_p_paribas_poland")]
    BNPParibasPoland,
    #[serde(rename = "bank_nowy_s_a")]
    BankNowySA,
    #[serde(rename = "credit_agricole")]
    CreditAgricole,
    #[serde(rename = "pay_with_b_o_s")]
    PayWithBOS,
    #[serde(rename = "pay_with_citi_handlowy")]
    PayWithCitiHandlowy,
    #[serde(rename = "pay_with_plus_bank")]
    PayWithPlusBank,
    #[serde(rename = "toyota_bank")]
    ToyotaBank,
    #[serde(rename = "velo_bank")]
    VeloBank,
    #[serde(rename = "e_transfer_pocztowy24")]
    ETransferPocztowy24,
    #[serde(rename = "plus_bank")]
    PlusBank,
    #[serde(rename = "etransfer_pocztowy24")]
    EtransferPocztowy24,
    #[serde(rename = "banki_spbdzielcze")]
    BankiSpbdzielcze,
    #[serde(rename = "bank_nowy_bfg_sa")]
    BankNowyBfgSa,
    #[serde(rename = "getin_bank")]
    GetinBank,
    #[serde(rename = "blik")]
    Blik,
    #[serde(rename = "noble_pay")]
    NoblePay,
    #[serde(rename = "idea_bank")]
    IdeaBank,
    #[serde(rename = "envelo_bank")]
    EnveloBank,
    #[serde(rename = "nest_przelew")]
    NestPrzelew,
    #[serde(rename = "mbank_mtransfer")]
    MbankMtransfer,
    #[serde(rename = "inteligo")]
    Inteligo,
    #[serde(rename = "pbac_z_ipko")]
    PbacZIpko,
    #[serde(rename = "bnp_paribas")]
    BnpParibas,
    #[serde(rename = "bank_pekao_sa")]
    BankPekaoSa,
    #[serde(rename = "volkswagen_bank")]
    VolkswagenBank,
    #[serde(rename = "alior_bank")]
    AliorBank,
    #[serde(rename = "boz")]
    Boz,

}

impl ToString for BankNames {
    fn to_string(&self) -> String {
        match self {
            Self::AmericanExpress => String::from("american_express"),
            Self::BankOfAmerica => String::from("bank_of_america"),
            Self::Barclays => String::from("barclays"),
            Self::BlikPSP => String::from("blik_p_s_p"),
            Self::CapitalOne => String::from("capital_one"),
            Self::Chase => String::from("chase"),
            Self::Citi => String::from("citi"),
            Self::Discover => String::from("discover"),
            Self::NavyFederalCreditUnion => String::from("navy_federal_credit_union"),
            Self::PentagonFederalCreditUnion => String::from("pentagon_federal_credit_union"),
            Self::SynchronyBank => String::from("synchrony_bank"),
            Self::WellsFargo => String::from("wells_fargo"),
            Self::AbnAmro => String::from("abn_amro"),
            Self::AsnBank => String::from("asn_bank"),
            Self::Bunq => String::from("bunq"),
            Self::Handelsbanken => String::from("handelsbanken"),
            Self::Ing => String::from("ing"),
            Self::Knab => String::from("knab"),
            Self::Moneyou => String::from("moneyou"),
            Self::Rabobank => String::from("rabobank"),
            Self::Regiobank => String::from("regiobank"),
            Self::Revolut => String::from("revolut"),
            Self::SnsBank => String::from("sns_bank"),
            Self::TriodosBank => String::from("triodos_bank"),
            Self::VanLanschot => String::from("van_lanschot"),
            Self::ArzteUndApothekerBank => String::from("arzte_und_apotheker_bank"),
            Self::AustrianAnadiBankAg => String::from("austrian_anadi_bank_ag"),
            Self::BankAustria => String::from("bank_austria"),
            Self::Bank99Ag => String::from("bank99_ag"),
            Self::BankhausCarlSpangler => String::from("bankhaus_carl_spangler"),
            Self::BankhausSchelhammerUndSchatteraAg => String::from("bankhaus_schelhammer_und_schattera_ag"),
            Self::BankMillennium => String::from("bank_millennium"),
            Self::BankPEKAOSA => String::from("bank_p_e_k_a_o_s_a"),
            Self::BawagPskAg => String::from("bawag_psk_ag"),
            Self::BksBankAg => String::from("bks_bank_ag"),
            Self::BrullKallmusBankAg => String::from("brull_kallmus_bank_ag"),
            Self::BtvVierLanderBank => String::from("btv_vier_lander_bank"),
            Self::CapitalBankGraweGruppeAg => String::from("capital_bank_grawe_gruppe_ag"),
            Self::CeskaSporitelna => String::from("ceska_sporitelna"),
            Self::Dolomitenbank => String::from("dolomitenbank"),
            Self::EasybankAg => String::from("easybank_ag"),
            Self::EPlatbyVUB => String::from("e_platby_v_u_b"),
            Self::ErsteBankUndSparkassen => String::from("erste_bank_und_sparkassen"),
            Self::FrieslandBank => String::from("friesland_bank"),
            Self::HypoAlpeadriabankInternationalAg => String::from("hypo_alpeadriabank_international_ag"),
            Self::HypoNoeLbFurNiederosterreichUWien => String::from("hypo_noe_lb_fur_niederosterreich_u_wien"),
            Self::HypoOberosterreichSalzburgSteiermark => String::from("hypo_oberosterreich_salzburg_steiermark"),
            Self::HypoTirolBankAg => String::from("hypo_tirol_bank_ag"),
            Self::HypoVorarlbergBankAg => String::from("hypo_vorarlberg_bank_ag"),
            Self::HypoBankBurgenlandAktiengesellschaft => String::from("hypo_bank_burgenland_aktiengesellschaft"),
            Self::KomercniBanka => String::from("komercni_banka"),
            Self::MBank => String::from("m_bank"),
            Self::MarchfelderBank => String::from("marchfelder_bank"),
            Self::OberbankAg => String::from("oberbank_ag"),
            Self::OsterreichischeArzteUndApothekerbank => String::from("osterreichische_arzte_und_apothekerbank"),
            Self::PayWithING => String::from("pay_with_i_n_g"),
            Self::PlaceZIPKO => String::from("place_z_i_p_k_o"),
            Self::PlatnoscOnlineKartaPlatnicza => String::from("platnosc_online_karta_platnicza"),
            Self::PosojilnicaBankEGen => String::from("posojilnica_bank_e_gen"),
            Self::PostovaBanka => String::from("postova_banka"),
            Self::RaiffeisenBankengruppeOsterreich => String::from("raiffeisen_bankengruppe_osterreich"),
            Self::SchelhammerCapitalBankAg => String::from("schelhammer_capital_bank_ag"),
            Self::SchoellerbankAg => String::from("schoellerbank_ag"),
            Self::SpardaBankWien => String::from("sparda_bank_wien"),
            Self::SporoPay => String::from("sporo_pay"),
            Self::SantanderPrzelew24 => String::from("santander_przelew24"),
            Self::TatraPay => String::from("tatra_pay"),
            Self::Viamo => String::from("viamo"),
            Self::VolksbankGruppe => String::from("volksbank_gruppe"),
            Self::VolkskreditbankAg => String::from("volkskreditbank_ag"),
            Self::VrBankBraunau => String::from("vr_bank_braunau"),
            Self::PayWithAliorBank => String::from("pay_with_alior_bank"),
            Self::BankiSpoldzielcze => String::from("banki_spoldzielcze"),
            Self::PayWithInteligo => String::from("pay_with_inteligo"),
            Self::BNPParibasPoland => String::from("b_n_p_paribas_poland"),
            Self::BankNowySA => String::from("bank_nowy_s_a"),
            Self::CreditAgricole => String::from("credit_agricole"),
            Self::PayWithBOS => String::from("pay_with_b_o_s"),
            Self::PayWithCitiHandlowy => String::from("pay_with_citi_handlowy"),
            Self::PayWithPlusBank => String::from("pay_with_plus_bank"),
            Self::ToyotaBank => String::from("toyota_bank"),
            Self::VeloBank => String::from("velo_bank"),
            Self::ETransferPocztowy24 => String::from("e_transfer_pocztowy24"),
            Self::PlusBank => String::from("plus_bank"),
            Self::EtransferPocztowy24 => String::from("etransfer_pocztowy24"),
            Self::BankiSpbdzielcze => String::from("banki_spbdzielcze"),
            Self::BankNowyBfgSa => String::from("bank_nowy_bfg_sa"),
            Self::GetinBank => String::from("getin_bank"),
            Self::Blik => String::from("blik"),
            Self::NoblePay => String::from("noble_pay"),
            Self::IdeaBank => String::from("idea_bank"),
            Self::EnveloBank => String::from("envelo_bank"),
            Self::NestPrzelew => String::from("nest_przelew"),
            Self::MbankMtransfer => String::from("mbank_mtransfer"),
            Self::Inteligo => String::from("inteligo"),
            Self::PbacZIpko => String::from("pbac_z_ipko"),
            Self::BnpParibas => String::from("bnp_paribas"),
            Self::BankPekaoSa => String::from("bank_pekao_sa"),
            Self::VolkswagenBank => String::from("volkswagen_bank"),
            Self::AliorBank => String::from("alior_bank"),
            Self::Boz => String::from("boz"),
        }
    }
}

impl Default for BankNames {
    fn default() -> BankNames {
        Self::AmericanExpress
    }
}




