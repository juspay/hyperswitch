name: Validate Generated OpenAPI Spec File

on:
  pull_request:

  merge_group:
    types:
      - checks_requested

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Disable incremental compilation.
  #
  # Incremental compilation is useful as part of an edit-build-test-edit cycle,
  # as it lets the compiler avoid recompiling code that hasn't changed. However,
  # on CI, we're not making small edits; we're almost always building the entire
  # project from scratch. Thus, incremental compilation on CI actually
  # introduces *additional* overhead to support making future builds
  # faster...but no future builds will ever occur in any given CI environment.
  #
  # See https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
  # for details.
  CARGO_INCREMENTAL: 0
  # Allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). This should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  # Don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short
  # Use cargo's sparse index protocol
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  # Enable and use the sccache action for caching
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

jobs:
  validate_json:
    name: Validate generated OpenAPI spec file
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v3
        with:
          # Checkout pull request branch instead of merge commit
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Checkout merge group HEAD commit
        if: ${{ github.event_name == 'merge_group' }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.merge_group.head_sha }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: mozilla-actions/sccache-action@v0.0.3

      - name: Generate the OpenAPI spec file
        shell: bash
        run: cargo run --features openapi -- generate-openapi-spec

      - name: Install `swagger-cli`
        shell: bash
        run: npm install -g @apidevtools/swagger-cli

      - name: Validate the JSON file
        shell: bash
        run: swagger-cli validate ./openapi/openapi_spec.json

      - name: Fail check if the JSON file is not up-to-date
        shell: bash
        run: |
          if ! git diff --quiet --exit-code -- openapi/openapi_spec.json ; then
            echo '::error::The OpenAPI spec file is not up-to-date. Please re-generate the OpenAPI spec file using `cargo run --features openapi -- generate-openapi-spec` and commit it.'
            exit 1
          fi
