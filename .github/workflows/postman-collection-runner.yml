name: PR Postman Tests

on:
  workflow_dispatch:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 1
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  RUST_BACKTRACE: short
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  Setup:
    name: Setup Rust and Server
    runs-on: ubuntu-latest

    env:
      ADMIN_API_KEY: ${{ secrets.LOCAL_ADMIN_API_KEY }}
      BASE_URL: ${{ env.LOCAL_HOST }}
      CONNECTOR_AUTH_FILE_PATH: ${{ needs.setup_local_server.outputs.CONNECTOR_CONFIG_PATH }}
      GATEWAY_MERCHANT_ID: ${{ secrets.STRIPE_GATEWAY_MERCHANT_ID }}
      GPAY_CERTIFICATE: ${{ secrets.STRIPE_GPAY_CERTIFICATE }}
      GPAY_CERTIFICATE_KEYS: ${{ secrets.STRIPE_GPAY_CERTIFICATE_KEYS }}

    strategy:
      fail-fast: false
      matrix:
        connector:
          - aci, checkout, stripe
          - bluesnap, nmi, worldline

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      postgres:
        image: postgres:14.5
        env:
          POSTGRES_USER: db_user
          POSTGRES_PASSWORD: db_pass
          POSTGRES_DB: hyperswitch_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Repository checkout
        uses: actions/checkout@v3

      - name: Decrypt connector auth file
        env:
          CONNECTOR_AUTH_PASSPHRASE: ${{ secrets.CONNECTOR_AUTH_PASSPHRASE }}
        shell: bash
        run: ./scripts/decrypt_connector_auth.sh

      - name: Set connector auth file path in env
        id: config_path
        shell: bash
        run: echo "CONNECTOR_CONFIG_PATH=$HOME/target/test/connector_auth.toml" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v2.4.0

      - name: Install PostgreSQL
        run: |
          sudo apt update
          sudo apt install postgresql postgresql-contrib libpq-dev
          systemctl start postgresql.service

      - uses: baptiste0928/cargo-install@v2.1.0
        with:
          crate: diesel_cli
          features: postgres
          args: "--no-default-features"

      - name: Diesel migration run
        shell: bash
        env:
          DATABASE_URL: postgres://db_user:db_pass@localhost:5432/hyperswitch_db
        run: diesel migration run

      - name: Setup Local Server
        env:
          LOCAL_HOST: http://localhost:8080
        run: |
          cargo run

      - name: Run Tests
        env:

        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_on: error
          command: |
            for i in $(echo $IN | tr "," "\n"); do
              cargo run --package test_utils --bin test_utils -- --connector_name=${{ matrix.connector }} --base_url=$BASE_URL --admin_api_key=$ADMIN_API_KEY
            done
